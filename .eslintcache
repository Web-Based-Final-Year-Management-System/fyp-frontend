[{"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\index.js":"1","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\App.js":"2","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\highlight.js":"3","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\contexts\\SettingsContext.js":"4","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\contexts\\CollapseDrawerContext.js":"5","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\contexts\\JWTContext.js":"6","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\RtlLayout.js":"7","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\palette.js":"8","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\globalStyles.js":"9","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\LoadingScreen.js":"10","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\axios.js":"11","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\ScrollToTop.js":"12","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\ThemePrimaryColor.js":"13","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\jwt.js":"14","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\hooks\\useLocalStorage.js":"15","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\index.js":"16","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\routes\\index.js":"17","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\settings\\index.js":"18","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\Logo.js":"19","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\hooks\\useSettings.js":"20","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\SIBAUFYPMS_Logo.js":"21","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\shape.js":"22","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\breakpoints.js":"23","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\typography.js":"24","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\shadows.js":"25","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\LogoOnlyLayout.js":"26","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\Scrollbar.js":"27","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\settings\\SettingColor.js":"28","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\settings\\SettingFullscreen.js":"29","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\settings\\SettingMode.js":"30","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\settings\\SettingDirection.js":"31","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\settings\\SettingStretch.js":"32","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\store.js":"33","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\guards\\GuestGuard.js":"34","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageManageUsers.js":"35","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageCreateGroup.js":"36","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageGroupsUnderSupervision.js":"37","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageProjectsArchive.js":"38","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageGroups.js":"39","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageCreateReports.js":"40","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\Page404.js":"41","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageCreateMeeting.js":"42","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageSubmitReports.js":"43","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageViewAnnouncements.js":"44","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\GeneralApp.js":"45","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\ApproveGroups.js":"46","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\UserList.js":"47","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\UserRole.js":"48","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\SupervisorCreate.js":"49","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\RoleCreate.js":"50","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\UserBatch.js":"51","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\BatchCreate.js":"52","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\AnnouncementsList.js":"53","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\ViewStudentAttendance.js":"54","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\ViewAllAttendance.js":"55","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\SupervisorSpecialization.js":"56","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\ReportsList.js":"57","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\UserProfilePage.js":"58","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\MeetingList.js":"59","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\ReportsSubmitted.js":"60","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\StudentProfilePage.js":"61","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\AnnouncementsCreate.js":"62","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\UserCards.js":"63","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\StudentCreate.js":"64","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\GroupsUnderSupervisionProgress.js":"65","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\authentication\\Register.js":"66","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\authentication\\ResetPassword.js":"67","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\authentication\\VerifyCode.js":"68","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\authentication\\Login.js":"69","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\index.js":"70","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\index.js":"71","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\@material-extend\\index.js":"72","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\Page.js":"73","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\AuthLayout.js":"74","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\hooks\\useAuth.js":"75","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\routes\\paths.js":"76","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\ToggleButton.js":"77","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\ControlLabel.js":"78","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\LoadingButton.js":"79","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\ButtonGroup.js":"80","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Autocomplete.js":"81","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\AuthFirebaseSocial.js":"82","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\DashboardSidebar.js":"83","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\DashboardNavbar.js":"84","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\hooks\\useCollapseDrawer.js":"85","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\@material-extend\\MAvatar.js":"86","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\index.js":"87","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\verify-code\\index.js":"88","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\register\\index.js":"89","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\login\\index.js":"90","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\reset-password\\index.js":"91","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\SidebarConfig.js":"92","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\NotificationsPopover.js":"93","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\illustration_motivation.js":"94","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\register\\RegisterForm.js":"95","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\verify-code\\VerifyCodeForm.js":"96","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\login\\LoginForm.js":"97","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\reset-password\\ResetPasswordForm.js":"98","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\SvgIconStyle.js":"99","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\MenuPopover.js":"100","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\announcement.js":"101","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\hooks\\useIsMountedRef.js":"102","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\index.js":"103","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\fakeRequest.js":"104","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\text.js":"105","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\number.js":"106","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\name.js":"107","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\address.js":"108","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\company.js":"109","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\phoneNumber.js":"110","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\boolean.js":"111","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\role.js":"112","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\email.js":"113","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\icon_plan_free.js":"114","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\icon_plan_premium.js":"115","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\icon_plan_starter.js":"116","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\icon_doc.js":"117","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\icon_sent.js":"118","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\illustration_404.js":"119","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\illustration_order_complete.js":"120","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\illustration_coming_soon.js":"121","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\illustration_maintenance.js":"122","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\illustration_500.js":"123","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\illustration_seo.js":"124","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\illustration_upload.js":"125","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\Searchbar.js":"126","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\NavSection.js":"127","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\LanguagePopover.js":"128","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\AccountPopover.js":"129","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\MyAvatar.js":"130","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\@material-extend\\MHidden.js":"131","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\@material-extend\\MIconButton.js":"132","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\@material-extend\\MBreadcrumbs.js":"133","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\@material-extend\\MFab.js":"134","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Pagination.js":"135","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Accordion.js":"136","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\IconButton.js":"137","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Breadcrumbs.js":"138","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Typography.js":"139","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Checkbox.js":"140","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Container.js":"141","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\TreeView.js":"142","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Progress.js":"143","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Timeline.js":"144","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Snackbar.js":"145","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Skeleton.js":"146","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Backdrop.js":"147","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\DataGrid.js":"148","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Pickers.js":"149","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Stepper.js":"150","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Popover.js":"151","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Tooltip.js":"152","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Switch.js":"153","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\SvgIcon.js":"154","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Select.js":"155","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Button.js":"156","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Slider.js":"157","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Rating.js":"158","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Avatar.js":"159","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Drawer.js":"160","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Dialog.js":"161","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Input.js":"162","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Radio.js":"163","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Paper.js":"164","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Badge.js":"165","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Alert.js":"166","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Table.js":"167","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Lists.js":"168","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Link.js":"169","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Grid.js":"170","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Tabs.js":"171","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Menu.js":"172","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Card.js":"173","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Fab.js":"174","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Chip.js":"175","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\HeaderBreadcrumbs.js":"176","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\Label.js":"177","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\SearchNotFound.js":"178","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\createAvatar.js":"179","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\groupSubmittedFiles.js":"180","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\group.js":"181","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\user.js":"182","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\AnnouncementsNewForm.js":"183","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\StudentNewForm.js":"184","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\ReportMoreMenu.js":"185","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\product.js":"186","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\UserNewForm.js":"187","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\meetings.js":"188","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\instructor.js":"189","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\reportType.js":"190","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\assignedWork.js":"191","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\AnnouncementMoreMenu.js":"192","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\batch.js":"193","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\index.js":"194","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\index.js":"195","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\BatchNewForm.js":"196","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\BatchMoreMenu.js":"197","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\RoleNewForm.js":"198","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\role.js":"199","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\ApproveGroupForm.js":"200","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageViewAnnouncementCard.js":"201","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\student.js":"202","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageSubmitReportStepper.js":"203","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\SubmitReportsNewForm.js":"204","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\MeetingsNewForm.js":"205","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\ReportsNewForm.js":"206","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\SubmitIdeaNewForm.js":"207","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\department.js":"208","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\formatNumber.js":"209","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\rootReducer.js":"210","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\index.js":"211","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\ButtonAnimate.js":"212","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\TextAnimate.js":"213","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\UserListHead.js":"214","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\GroupsUnderSupervisionMoreMenu.js":"215","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\upload\\index.js":"216","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\RoleMoreMenu.js":"217","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\GroupMoreMenu.js":"218","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\editor\\index.js":"219","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\DialogAnimate.js":"220","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\UserMoreMenu.js":"221","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\MotionContainer.js":"222","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\UserListToolbar.js":"223","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\MotionInView.js":"224","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\AbsentAttendance.js":"225","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\AppWelcome.js":"226","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\AppTotalInstalled.js":"227","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\AppTotalActiveUsers.js":"228","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\PresentAttendance.js":"229","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\AppTotalDownloads.js":"230","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\AppNewInvoice.js":"231","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\AppTopRelated.js":"232","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\AppTopInstalledCountries.js":"233","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\kanban.js":"234","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\blog.js":"235","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\chat.js":"236","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\mail.js":"237","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\calendar.js":"238","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\index.js":"239","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\upload\\UploadMultiFile.js":"240","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\upload\\UploadSingleFile.js":"241","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\upload\\UploadAvatar.js":"242","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\formatNumber.js":"243","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\Wrap.js":"244","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\Actions.js":"245","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\Path.js":"246","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\editor\\quill\\index.js":"247","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\editor\\draft\\index.js":"248","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\scale\\index.js":"249","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\rotate\\index.js":"250","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\flip\\index.js":"251","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\zoom\\index.js":"252","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\bounce\\index.js":"253","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\background\\index.js":"254","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\fade\\index.js":"255","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\slide\\index.js":"256","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\editor\\draft\\DraftEditorStyle.js":"257","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\editor\\draft\\DraftEditorToolbar.js":"258","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\editor\\quill\\QuillEditorToolbar.js":"259","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\scale\\ScaleIn.js":"260","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\flip\\FlipIn.js":"261","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\rotate\\RotateIn.js":"262","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\flip\\FlipOut.js":"263","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\rotate\\RotateOut.js":"264","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\zoom\\In.js":"265","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\scale\\ScaleOut.js":"266","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\bounce\\BounceIn.js":"267","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\bounce\\BounceOut.js":"268","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\zoom\\Out.js":"269","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\background\\BackgroundKenburns.js":"270","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\slide\\SlideOut.js":"271","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\slide\\SlideIn.js":"272","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\fade\\FadeIn.js":"273","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\fade\\FadeOut.js":"274","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\editor\\quill\\QuillEditorToolbarStyle.js":"275","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\background\\BackgroundPan.js":"276","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\background\\BackgroundColor.js":"277"},{"size":1664,"mtime":1640433438000,"results":"278","hashOfConfig":"279"},{"size":806,"mtime":1640433438000,"results":"280","hashOfConfig":"279"},{"size":279,"mtime":1640433438000,"results":"281","hashOfConfig":"279"},{"size":3700,"mtime":1640433438000,"results":"282","hashOfConfig":"279"},{"size":1701,"mtime":1640433438000,"results":"283","hashOfConfig":"279"},{"size":3629,"mtime":1640433438000,"results":"284","hashOfConfig":"279"},{"size":829,"mtime":1640433438000,"results":"285","hashOfConfig":"279"},{"size":3202,"mtime":1640433438000,"results":"286","hashOfConfig":"279"},{"size":1876,"mtime":1640433438000,"results":"287","hashOfConfig":"279"},{"size":3522,"mtime":1640433438000,"results":"288","hashOfConfig":"279"},{"size":338,"mtime":1640433438000,"results":"289","hashOfConfig":"279"},{"size":321,"mtime":1640433438000,"results":"290","hashOfConfig":"279"},{"size":1037,"mtime":1640433438000,"results":"291","hashOfConfig":"279"},{"size":1289,"mtime":1640433438000,"results":"292","hashOfConfig":"279"},{"size":994,"mtime":1640433438000,"results":"293","hashOfConfig":"279"},{"size":1473,"mtime":1640433438000,"results":"294","hashOfConfig":"279"},{"size":13640,"mtime":1640433438000,"results":"295","hashOfConfig":"279"},{"size":3896,"mtime":1640433438000,"results":"296","hashOfConfig":"279"},{"size":2541,"mtime":1640433438000,"results":"297","hashOfConfig":"279"},{"size":259,"mtime":1640433438000,"results":"298","hashOfConfig":"279"},{"size":213,"mtime":1640433438000,"results":"299","hashOfConfig":"279"},{"size":179,"mtime":1640433438000,"results":"300","hashOfConfig":"279"},{"size":169,"mtime":1640433438000,"results":"301","hashOfConfig":"279"},{"size":2164,"mtime":1640433438000,"results":"302","hashOfConfig":"279"},{"size":4105,"mtime":1640433438000,"results":"303","hashOfConfig":"279"},{"size":911,"mtime":1640433438000,"results":"304","hashOfConfig":"279"},{"size":1470,"mtime":1640433438000,"results":"305","hashOfConfig":"279"},{"size":2743,"mtime":1640433438000,"results":"306","hashOfConfig":"279"},{"size":1273,"mtime":1640433438000,"results":"307","hashOfConfig":"279"},{"size":2149,"mtime":1640433438000,"results":"308","hashOfConfig":"279"},{"size":2593,"mtime":1640433438000,"results":"309","hashOfConfig":"279"},{"size":1573,"mtime":1640433438000,"results":"310","hashOfConfig":"279"},{"size":748,"mtime":1640433438000,"results":"311","hashOfConfig":"279"},{"size":523,"mtime":1640433438000,"results":"312","hashOfConfig":"279"},{"size":1811,"mtime":1640433438000,"results":"313","hashOfConfig":"279"},{"size":3885,"mtime":1640433438000,"results":"314","hashOfConfig":"279"},{"size":13745,"mtime":1640433438000,"results":"315","hashOfConfig":"279"},{"size":1819,"mtime":1640433438000,"results":"316","hashOfConfig":"279"},{"size":13620,"mtime":1640433438000,"results":"317","hashOfConfig":"279"},{"size":4024,"mtime":1640433438000,"results":"318","hashOfConfig":"279"},{"size":1792,"mtime":1640433438000,"results":"319","hashOfConfig":"279"},{"size":1845,"mtime":1640433438000,"results":"320","hashOfConfig":"279"},{"size":1948,"mtime":1640433438000,"results":"321","hashOfConfig":"279"},{"size":7758,"mtime":1640433438000,"results":"322","hashOfConfig":"279"},{"size":1285,"mtime":1640433438000,"results":"323","hashOfConfig":"279"},{"size":1864,"mtime":1640433438000,"results":"324","hashOfConfig":"279"},{"size":16132,"mtime":1640433438000,"results":"325","hashOfConfig":"279"},{"size":8372,"mtime":1640433438000,"results":"326","hashOfConfig":"279"},{"size":1842,"mtime":1640433438000,"results":"327","hashOfConfig":"279"},{"size":1785,"mtime":1640433438000,"results":"328","hashOfConfig":"279"},{"size":8679,"mtime":1640433438000,"results":"329","hashOfConfig":"279"},{"size":1804,"mtime":1640433438000,"results":"330","hashOfConfig":"279"},{"size":10480,"mtime":1640433438000,"results":"331","hashOfConfig":"279"},{"size":10672,"mtime":1640433438000,"results":"332","hashOfConfig":"279"},{"size":10130,"mtime":1640433438000,"results":"333","hashOfConfig":"279"},{"size":9073,"mtime":1640433438000,"results":"334","hashOfConfig":"279"},{"size":10967,"mtime":1640433438000,"results":"335","hashOfConfig":"279"},{"size":1733,"mtime":1640433438000,"results":"336","hashOfConfig":"279"},{"size":8893,"mtime":1640433438000,"results":"337","hashOfConfig":"279"},{"size":11640,"mtime":1640433438000,"results":"338","hashOfConfig":"279"},{"size":1712,"mtime":1640433438000,"results":"339","hashOfConfig":"279"},{"size":1823,"mtime":1640433438000,"results":"340","hashOfConfig":"279"},{"size":1446,"mtime":1640433438000,"results":"341","hashOfConfig":"279"},{"size":1803,"mtime":1640433438000,"results":"342","hashOfConfig":"279"},{"size":16326,"mtime":1640433438000,"results":"343","hashOfConfig":"279"},{"size":3572,"mtime":1640433438000,"results":"344","hashOfConfig":"279"},{"size":2533,"mtime":1640433438000,"results":"345","hashOfConfig":"279"},{"size":2030,"mtime":1640433438000,"results":"346","hashOfConfig":"279"},{"size":3525,"mtime":1640433438000,"results":"347","hashOfConfig":"279"},{"size":2639,"mtime":1640433438000,"results":"348","hashOfConfig":"279"},{"size":1609,"mtime":1640433438000,"results":"349","hashOfConfig":"279"},{"size":252,"mtime":1640433438000,"results":"350","hashOfConfig":"279"},{"size":536,"mtime":1640433438000,"results":"351","hashOfConfig":"279"},{"size":1468,"mtime":1640433438000,"results":"352","hashOfConfig":"279"},{"size":423,"mtime":1640433438000,"results":"353","hashOfConfig":"279"},{"size":3096,"mtime":1640433438000,"results":"354","hashOfConfig":"279"},{"size":628,"mtime":1640433438000,"results":"355","hashOfConfig":"279"},{"size":525,"mtime":1640433438000,"results":"356","hashOfConfig":"279"},{"size":467,"mtime":1640433438000,"results":"357","hashOfConfig":"279"},{"size":1260,"mtime":1640433438000,"results":"358","hashOfConfig":"279"},{"size":272,"mtime":1640433438000,"results":"359","hashOfConfig":"279"},{"size":1802,"mtime":1640433438000,"results":"360","hashOfConfig":"279"},{"size":6595,"mtime":1640433438000,"results":"361","hashOfConfig":"279"},{"size":2523,"mtime":1640433438000,"results":"362","hashOfConfig":"279"},{"size":289,"mtime":1640433438000,"results":"363","hashOfConfig":"279"},{"size":955,"mtime":1640433438000,"results":"364","hashOfConfig":"279"},{"size":900,"mtime":1640433438000,"results":"365","hashOfConfig":"279"},{"size":62,"mtime":1640433438000,"results":"366","hashOfConfig":"279"},{"size":58,"mtime":1640433438000,"results":"367","hashOfConfig":"279"},{"size":52,"mtime":1640433438000,"results":"368","hashOfConfig":"279"},{"size":68,"mtime":1640433438000,"results":"369","hashOfConfig":"279"},{"size":4054,"mtime":1640433438000,"results":"370","hashOfConfig":"279"},{"size":8729,"mtime":1640433438000,"results":"371","hashOfConfig":"279"},{"size":182060,"mtime":1640433438000,"results":"372","hashOfConfig":"279"},{"size":4483,"mtime":1640433438000,"results":"373","hashOfConfig":"279"},{"size":2844,"mtime":1640433438000,"results":"374","hashOfConfig":"279"},{"size":4232,"mtime":1640433438000,"results":"375","hashOfConfig":"279"},{"size":2224,"mtime":1640433438000,"results":"376","hashOfConfig":"279"},{"size":886,"mtime":1640433438000,"results":"377","hashOfConfig":"279"},{"size":1446,"mtime":1640433438000,"results":"378","hashOfConfig":"279"},{"size":5073,"mtime":1640433438000,"results":"379","hashOfConfig":"279"},{"size":304,"mtime":1640433438000,"results":"380","hashOfConfig":"279"},{"size":1751,"mtime":1640433438000,"results":"381","hashOfConfig":"279"},{"size":175,"mtime":1640433438000,"results":"382","hashOfConfig":"279"},{"size":12008,"mtime":1640433438000,"results":"383","hashOfConfig":"279"},{"size":1075,"mtime":1640433438000,"results":"384","hashOfConfig":"279"},{"size":1898,"mtime":1640433438000,"results":"385","hashOfConfig":"279"},{"size":3036,"mtime":1640433438000,"results":"386","hashOfConfig":"279"},{"size":1052,"mtime":1640433438000,"results":"387","hashOfConfig":"279"},{"size":827,"mtime":1640433438000,"results":"388","hashOfConfig":"279"},{"size":443,"mtime":1640433438000,"results":"389","hashOfConfig":"279"},{"size":911,"mtime":1640433438000,"results":"390","hashOfConfig":"279"},{"size":1279,"mtime":1640433438000,"results":"391","hashOfConfig":"279"},{"size":1956,"mtime":1640433438000,"results":"392","hashOfConfig":"279"},{"size":5195,"mtime":1640433438000,"results":"393","hashOfConfig":"279"},{"size":3791,"mtime":1640433438000,"results":"394","hashOfConfig":"279"},{"size":2910,"mtime":1640433438000,"results":"395","hashOfConfig":"279"},{"size":4932,"mtime":1640433438000,"results":"396","hashOfConfig":"279"},{"size":160893,"mtime":1640433438000,"results":"397","hashOfConfig":"279"},{"size":126593,"mtime":1640433438000,"results":"398","hashOfConfig":"279"},{"size":189076,"mtime":1640433438000,"results":"399","hashOfConfig":"279"},{"size":281650,"mtime":1640433438000,"results":"400","hashOfConfig":"279"},{"size":182955,"mtime":1640433438000,"results":"401","hashOfConfig":"279"},{"size":190402,"mtime":1640433438000,"results":"402","hashOfConfig":"279"},{"size":25413,"mtime":1640433438000,"results":"403","hashOfConfig":"279"},{"size":2299,"mtime":1640433438000,"results":"404","hashOfConfig":"279"},{"size":6047,"mtime":1640433438000,"results":"405","hashOfConfig":"279"},{"size":2058,"mtime":1640433438000,"results":"406","hashOfConfig":"279"},{"size":4642,"mtime":1640433438000,"results":"407","hashOfConfig":"279"},{"size":530,"mtime":1640433438000,"results":"408","hashOfConfig":"279"},{"size":790,"mtime":1640433438000,"results":"409","hashOfConfig":"279"},{"size":517,"mtime":1640433438000,"results":"410","hashOfConfig":"279"},{"size":1930,"mtime":1640433438000,"results":"411","hashOfConfig":"279"},{"size":1296,"mtime":1640433438000,"results":"412","hashOfConfig":"279"},{"size":1026,"mtime":1640433438000,"results":"413","hashOfConfig":"279"},{"size":888,"mtime":1640433438000,"results":"414","hashOfConfig":"279"},{"size":208,"mtime":1640433438000,"results":"415","hashOfConfig":"279"},{"size":309,"mtime":1640433438000,"results":"416","hashOfConfig":"279"},{"size":344,"mtime":1640433438000,"results":"417","hashOfConfig":"279"},{"size":1741,"mtime":1640433438000,"results":"418","hashOfConfig":"279"},{"size":206,"mtime":1640433438000,"results":"419","hashOfConfig":"279"},{"size":981,"mtime":1640433438000,"results":"420","hashOfConfig":"279"},{"size":569,"mtime":1640433438000,"results":"421","hashOfConfig":"279"},{"size":392,"mtime":1640433438000,"results":"422","hashOfConfig":"279"},{"size":211,"mtime":1640433438000,"results":"423","hashOfConfig":"279"},{"size":336,"mtime":1640433438000,"results":"424","hashOfConfig":"279"},{"size":748,"mtime":1640433438000,"results":"425","hashOfConfig":"279"},{"size":2907,"mtime":1640433438000,"results":"426","hashOfConfig":"279"},{"size":126,"mtime":1640433438000,"results":"427","hashOfConfig":"279"},{"size":267,"mtime":1640433438000,"results":"428","hashOfConfig":"279"},{"size":262,"mtime":1640433438000,"results":"429","hashOfConfig":"279"},{"size":422,"mtime":1640433438000,"results":"430","hashOfConfig":"279"},{"size":894,"mtime":1640433438000,"results":"431","hashOfConfig":"279"},{"size":402,"mtime":1640433438000,"results":"432","hashOfConfig":"279"},{"size":353,"mtime":1640433438000,"results":"433","hashOfConfig":"279"},{"size":1424,"mtime":1640433438000,"results":"434","hashOfConfig":"279"},{"size":638,"mtime":1640433438000,"results":"435","hashOfConfig":"279"},{"size":819,"mtime":1640433438000,"results":"436","hashOfConfig":"279"},{"size":665,"mtime":1640433438000,"results":"437","hashOfConfig":"279"},{"size":685,"mtime":1640433438000,"results":"438","hashOfConfig":"279"},{"size":1362,"mtime":1640433438000,"results":"439","hashOfConfig":"279"},{"size":1587,"mtime":1640433438000,"results":"440","hashOfConfig":"279"},{"size":381,"mtime":1640433438000,"results":"441","hashOfConfig":"279"},{"size":294,"mtime":1640433438000,"results":"442","hashOfConfig":"279"},{"size":279,"mtime":1640433438000,"results":"443","hashOfConfig":"279"},{"size":2357,"mtime":1640433438000,"results":"444","hashOfConfig":"279"},{"size":2073,"mtime":1640433438000,"results":"445","hashOfConfig":"279"},{"size":693,"mtime":1640433438000,"results":"446","hashOfConfig":"279"},{"size":255,"mtime":1640433438000,"results":"447","hashOfConfig":"279"},{"size":172,"mtime":1640433438000,"results":"448","hashOfConfig":"279"},{"size":1315,"mtime":1640433438000,"results":"449","hashOfConfig":"279"},{"size":413,"mtime":1640433438000,"results":"450","hashOfConfig":"279"},{"size":855,"mtime":1640433438000,"results":"451","hashOfConfig":"279"},{"size":883,"mtime":1640433438000,"results":"452","hashOfConfig":"279"},{"size":1410,"mtime":1640433438000,"results":"453","hashOfConfig":"279"},{"size":1390,"mtime":1640433438000,"results":"454","hashOfConfig":"279"},{"size":2453,"mtime":1640433438000,"results":"455","hashOfConfig":"279"},{"size":678,"mtime":1640433438000,"results":"456","hashOfConfig":"279"},{"size":1019,"mtime":1640433438000,"results":"457","hashOfConfig":"279"},{"size":4994,"mtime":1640433438000,"results":"458","hashOfConfig":"279"},{"size":5506,"mtime":1640433438000,"results":"459","hashOfConfig":"279"},{"size":4568,"mtime":1640433438000,"results":"460","hashOfConfig":"279"},{"size":7790,"mtime":1640433438000,"results":"461","hashOfConfig":"279"},{"size":15925,"mtime":1640433438000,"results":"462","hashOfConfig":"279"},{"size":2258,"mtime":1640433438000,"results":"463","hashOfConfig":"279"},{"size":6153,"mtime":1640433438000,"results":"464","hashOfConfig":"279"},{"size":17890,"mtime":1640433438000,"results":"465","hashOfConfig":"279"},{"size":2230,"mtime":1640433438000,"results":"466","hashOfConfig":"279"},{"size":2121,"mtime":1640433438000,"results":"467","hashOfConfig":"279"},{"size":3118,"mtime":1640433438000,"results":"468","hashOfConfig":"279"},{"size":2248,"mtime":1640433438000,"results":"469","hashOfConfig":"279"},{"size":2089,"mtime":1640433438000,"results":"470","hashOfConfig":"279"},{"size":2960,"mtime":1640433438000,"results":"471","hashOfConfig":"279"},{"size":326,"mtime":1640433438000,"results":"472","hashOfConfig":"279"},{"size":392,"mtime":1640433438000,"results":"473","hashOfConfig":"279"},{"size":7175,"mtime":1640433438000,"results":"474","hashOfConfig":"279"},{"size":2358,"mtime":1640433438000,"results":"475","hashOfConfig":"279"},{"size":5579,"mtime":1640433438000,"results":"476","hashOfConfig":"279"},{"size":1978,"mtime":1640433438000,"results":"477","hashOfConfig":"279"},{"size":10625,"mtime":1640433438000,"results":"478","hashOfConfig":"279"},{"size":3157,"mtime":1640433438000,"results":"479","hashOfConfig":"279"},{"size":7814,"mtime":1640433438000,"results":"480","hashOfConfig":"279"},{"size":5237,"mtime":1640433438000,"results":"481","hashOfConfig":"279"},{"size":18091,"mtime":1640433438000,"results":"482","hashOfConfig":"279"},{"size":14280,"mtime":1640433438000,"results":"483","hashOfConfig":"279"},{"size":11251,"mtime":1640433438000,"results":"484","hashOfConfig":"279"},{"size":9008,"mtime":1640433438000,"results":"485","hashOfConfig":"279"},{"size":2135,"mtime":1640433438000,"results":"486","hashOfConfig":"279"},{"size":599,"mtime":1640433438000,"results":"487","hashOfConfig":"279"},{"size":1950,"mtime":1640433438000,"results":"488","hashOfConfig":"279"},{"size":598,"mtime":1640433438000,"results":"489","hashOfConfig":"279"},{"size":727,"mtime":1640433438000,"results":"490","hashOfConfig":"279"},{"size":826,"mtime":1640433438000,"results":"491","hashOfConfig":"279"},{"size":1862,"mtime":1640433438000,"results":"492","hashOfConfig":"279"},{"size":2342,"mtime":1640433438000,"results":"493","hashOfConfig":"279"},{"size":188,"mtime":1640433438000,"results":"494","hashOfConfig":"279"},{"size":2088,"mtime":1640433438000,"results":"495","hashOfConfig":"279"},{"size":2253,"mtime":1640433438000,"results":"496","hashOfConfig":"279"},{"size":100,"mtime":1640433438000,"results":"497","hashOfConfig":"279"},{"size":1013,"mtime":1640433438000,"results":"498","hashOfConfig":"279"},{"size":2263,"mtime":1640433438000,"results":"499","hashOfConfig":"279"},{"size":581,"mtime":1640433438000,"results":"500","hashOfConfig":"279"},{"size":2961,"mtime":1640433438000,"results":"501","hashOfConfig":"279"},{"size":1191,"mtime":1640433438000,"results":"502","hashOfConfig":"279"},{"size":2931,"mtime":1640433438000,"results":"503","hashOfConfig":"279"},{"size":1611,"mtime":1640433438000,"results":"504","hashOfConfig":"279"},{"size":2927,"mtime":1640433438000,"results":"505","hashOfConfig":"279"},{"size":2924,"mtime":1640433438000,"results":"506","hashOfConfig":"279"},{"size":2932,"mtime":1640433438000,"results":"507","hashOfConfig":"279"},{"size":2923,"mtime":1640433438000,"results":"508","hashOfConfig":"279"},{"size":15371,"mtime":1640433438000,"results":"509","hashOfConfig":"279"},{"size":3361,"mtime":1640433438000,"results":"510","hashOfConfig":"279"},{"size":2967,"mtime":1640433438000,"results":"511","hashOfConfig":"279"},{"size":5341,"mtime":1640433438000,"results":"512","hashOfConfig":"279"},{"size":3433,"mtime":1640433438000,"results":"513","hashOfConfig":"279"},{"size":5362,"mtime":1640433438000,"results":"514","hashOfConfig":"279"},{"size":2645,"mtime":1640433438000,"results":"515","hashOfConfig":"279"},{"size":4282,"mtime":1640433438000,"results":"516","hashOfConfig":"279"},{"size":279,"mtime":1640433438000,"results":"517","hashOfConfig":"279"},{"size":7021,"mtime":1640433438000,"results":"518","hashOfConfig":"279"},{"size":3736,"mtime":1640433438000,"results":"519","hashOfConfig":"279"},{"size":4077,"mtime":1640433438000,"results":"520","hashOfConfig":"279"},{"size":599,"mtime":1640433438000,"results":"521","hashOfConfig":"279"},{"size":445,"mtime":1640433438000,"results":"522","hashOfConfig":"279"},{"size":295,"mtime":1640433438000,"results":"523","hashOfConfig":"279"},{"size":284,"mtime":1640433438000,"results":"524","hashOfConfig":"279"},{"size":2052,"mtime":1640433438000,"results":"525","hashOfConfig":"279"},{"size":787,"mtime":1640433438000,"results":"526","hashOfConfig":"279"},{"size":55,"mtime":1640433438000,"results":"527","hashOfConfig":"279"},{"size":57,"mtime":1640433438000,"results":"528","hashOfConfig":"279"},{"size":53,"mtime":1640433438000,"results":"529","hashOfConfig":"279"},{"size":45,"mtime":1640433438000,"results":"530","hashOfConfig":"279"},{"size":57,"mtime":1640433438000,"results":"531","hashOfConfig":"279"},{"size":106,"mtime":1640433438000,"results":"532","hashOfConfig":"279"},{"size":53,"mtime":1640433438000,"results":"533","hashOfConfig":"279"},{"size":55,"mtime":1640433438000,"results":"534","hashOfConfig":"279"},{"size":8860,"mtime":1640433438000,"results":"535","hashOfConfig":"279"},{"size":4607,"mtime":1640433438000,"results":"536","hashOfConfig":"279"},{"size":4983,"mtime":1640433438000,"results":"537","hashOfConfig":"279"},{"size":640,"mtime":1640433438000,"results":"538","hashOfConfig":"279"},{"size":656,"mtime":1640433438000,"results":"539","hashOfConfig":"279"},{"size":444,"mtime":1640433438000,"results":"540","hashOfConfig":"279"},{"size":435,"mtime":1640433438000,"results":"541","hashOfConfig":"279"},{"size":296,"mtime":1640433438000,"results":"542","hashOfConfig":"279"},{"size":1353,"mtime":1640433438000,"results":"543","hashOfConfig":"279"},{"size":434,"mtime":1640433438000,"results":"544","hashOfConfig":"279"},{"size":1563,"mtime":1640433438000,"results":"545","hashOfConfig":"279"},{"size":686,"mtime":1640433438000,"results":"546","hashOfConfig":"279"},{"size":866,"mtime":1640433438000,"results":"547","hashOfConfig":"279"},{"size":815,"mtime":1640433438000,"results":"548","hashOfConfig":"279"},{"size":909,"mtime":1640433438000,"results":"549","hashOfConfig":"279"},{"size":934,"mtime":1640433438000,"results":"550","hashOfConfig":"279"},{"size":1241,"mtime":1640433438000,"results":"551","hashOfConfig":"279"},{"size":1216,"mtime":1640433438000,"results":"552","hashOfConfig":"279"},{"size":7239,"mtime":1640433438000,"results":"553","hashOfConfig":"279"},{"size":1138,"mtime":1640433438000,"results":"554","hashOfConfig":"279"},{"size":661,"mtime":1640433438000,"results":"555","hashOfConfig":"279"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kj6g1d",{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"576"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610"},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"623","messages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"631"},{"filePath":"632","messages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639"},{"filePath":"640","messages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642"},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"645","messages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647"},{"filePath":"648","messages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"650"},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":52,"fixableErrorCount":0,"fixableWarningCount":0,"source":"653"},{"filePath":"654","messages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"656"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662"},{"filePath":"663","messages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665"},{"filePath":"666","messages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"670","messages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"672"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683"},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"686"},{"filePath":"687","messages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689"},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692"},{"filePath":"693","messages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695"},{"filePath":"696","messages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698"},{"filePath":"699","messages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"701"},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"704"},{"filePath":"705","messages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"707"},{"filePath":"708","messages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712"},{"filePath":"713","messages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"717","messages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"719","messages":"720","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721"},{"filePath":"722","messages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"728","messages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"730","messages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"732"},{"filePath":"733","messages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"735","messages":"736","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"737","messages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"739","messages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"741","messages":"742","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"743","messages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"745","messages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"747","messages":"748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"749","messages":"750","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"751"},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"754"},{"filePath":"755","messages":"756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"757","messages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"761","messages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"767","messages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"769","messages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"771"},{"filePath":"772","messages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774"},{"filePath":"775","messages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"777","messages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"779","messages":"780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"781","messages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"783","messages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"785","messages":"786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"787","messages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"789","messages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791"},{"filePath":"792","messages":"793","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"794","messages":"795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"796","messages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"798","messages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"800","messages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"802","messages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"804","messages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"806","messages":"807","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"808","messages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"810","messages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"812","messages":"813","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"814","messages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"816","messages":"817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"818","messages":"819","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"820","messages":"821","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"822","messages":"823","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"824","messages":"825","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"826","messages":"827","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"828","messages":"829","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"830","messages":"831","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"832","messages":"833","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"834","messages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"836","messages":"837","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"838","messages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"840","messages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"842","messages":"843","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"844"},{"filePath":"845","messages":"846","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"847","messages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"849"},{"filePath":"850","messages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"852","messages":"853","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"854","messages":"855","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"856","messages":"857","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"858","messages":"859","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"860","messages":"861","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"862","messages":"863","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"864","messages":"865","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"866","messages":"867","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"868","messages":"869","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"870","messages":"871","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"872","messages":"873","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"874","messages":"875","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"876","messages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"878","messages":"879","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"880","messages":"881","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"882","messages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"884","messages":"885","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"886","messages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"888","messages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"890","messages":"891","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"892","messages":"893","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"894","messages":"895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"896","messages":"897","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"898","messages":"899","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"900","messages":"901","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"902","messages":"903","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"904","messages":"905","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"906","messages":"907","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"908","messages":"909","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"910","messages":"911","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"912","messages":"913","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"914","messages":"915","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"916","messages":"917","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"918","messages":"919","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"920","messages":"921","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"922","messages":"923","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"924","messages":"925","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"926","messages":"927","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"928","messages":"929","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"930","messages":"931","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"932","messages":"933","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"934","messages":"935","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"936","messages":"937","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"938","messages":"939","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"940","messages":"941","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"942","messages":"943","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"944","messages":"945","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"946","messages":"947","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"948","messages":"949","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"950","messages":"951","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"952","messages":"953","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"954","messages":"955","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"956","messages":"957","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"958"},{"filePath":"959","messages":"960","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"961"},{"filePath":"962","messages":"963","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"964"},{"filePath":"965","messages":"966","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"967","messages":"968","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"969"},{"filePath":"970","messages":"971","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"972","messages":"973","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"974","messages":"975","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"976","messages":"977","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"978"},{"filePath":"979","messages":"980","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"981"},{"filePath":"982","messages":"983","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"984"},{"filePath":"985","messages":"986","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"987","messages":"988","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"989","messages":"990","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"991"},{"filePath":"992","messages":"993","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"994","messages":"995","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"996"},{"filePath":"997","messages":"998","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"999","messages":"1000","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1001"},{"filePath":"1002","messages":"1003","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1004"},{"filePath":"1005","messages":"1006","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1007","messages":"1008","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1009"},{"filePath":"1010","messages":"1011","errorCount":0,"fatalErrorCount":0,"warningCount":115,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1012"},{"filePath":"1013","messages":"1014","errorCount":0,"fatalErrorCount":0,"warningCount":63,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1015"},{"filePath":"1016","messages":"1017","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1018"},{"filePath":"1019","messages":"1020","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1021"},{"filePath":"1022","messages":"1023","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1024"},{"filePath":"1025","messages":"1026","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1027","messages":"1028","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1029","messages":"1030","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1031","messages":"1032","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1033","messages":"1034","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1035","messages":"1036","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1037","messages":"1038","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1039"},{"filePath":"1040","messages":"1041","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1042","messages":"1043","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1044","messages":"1045","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1046"},{"filePath":"1047","messages":"1048","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1049","messages":"1050","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1051","messages":"1052","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1053","messages":"1054","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1055","messages":"1056","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1057"},{"filePath":"1058","messages":"1059","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1060","messages":"1061","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1062"},{"filePath":"1063","messages":"1064","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1065","messages":"1066","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1067"},{"filePath":"1068","messages":"1069","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1070"},{"filePath":"1071","messages":"1072","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1073"},{"filePath":"1074","messages":"1075","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1076"},{"filePath":"1077","messages":"1078","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1079"},{"filePath":"1080","messages":"1081","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1082","messages":"1083","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1084","messages":"1085","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1086","messages":"1087","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1088","messages":"1089","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1090","messages":"1091","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1092","messages":"1093","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1094","messages":"1095","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1096","messages":"1097","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1098"},{"filePath":"1099","messages":"1100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1101","messages":"1102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1103","messages":"1104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1105","messages":"1106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1107","messages":"1108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1109","messages":"1110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1111","messages":"1112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1113","messages":"1114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1115","messages":"1116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1117","messages":"1118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1119","messages":"1120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1121","messages":"1122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1123","messages":"1124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1125","messages":"1126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1127","messages":"1128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1129","messages":"1130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1131","messages":"1132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1133","messages":"1134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1135","messages":"1136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1137","messages":"1138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1139","messages":"1140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1141","messages":"1142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1143","messages":"1144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1145","messages":"1146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1147","messages":"1148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1149","messages":"1150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1151","messages":"1152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1153","messages":"1154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1155","messages":"1156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1157","messages":"1158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1159","messages":"1160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1161","messages":"1162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1163","messages":"1164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1165","messages":"1166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1167","messages":"1168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1169","messages":"1170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1171","messages":"1172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\App.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\highlight.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\contexts\\SettingsContext.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\contexts\\CollapseDrawerContext.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\contexts\\JWTContext.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\RtlLayout.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\palette.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\globalStyles.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\LoadingScreen.js",["1173"],"import NProgress from 'nprogress';\nimport { useEffect, useMemo } from 'react';\nimport { motion } from 'framer-motion';\n// material\nimport { alpha, styled, useTheme } from '@mui/material/styles';\nimport { Box, GlobalStyles } from '@mui/material';\n//\nimport Logo from './Logo';\n\nimport { ThumbImgStyle } from '../layouts/dashboard/SIBAUFYPMS_Logo';\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: theme.palette.background.default\n}));\n\n// ----------------------------------------------------------------------\nexport function ProgressBarStyle() {\n  const theme = useTheme();\n\n  return (\n    <GlobalStyles\n      styles={{\n        '#nprogress': {\n          pointerEvents: 'none',\n          '& .bar': {\n            top: 0,\n            left: 0,\n            height: 2,\n            width: '100%',\n            position: 'fixed',\n            zIndex: theme.zIndex.snackbar,\n            backgroundColor: theme.palette.primary.main,\n            boxShadow: `0 0 2px ${theme.palette.primary.main}`\n          },\n          '& .peg': {\n            right: 0,\n            opacity: 1,\n            width: 100,\n            height: '100%',\n            display: 'block',\n            position: 'absolute',\n            transform: 'rotate(3deg) translate(0px, -4px)',\n            boxShadow: `0 0 10px ${theme.palette.primary.main}, 0 0 5px ${theme.palette.primary.main}`\n          }\n        }\n      }}\n    />\n  );\n}\n\nfunction ProgressBar() {\n  NProgress.configure({\n    showSpinner: false\n  });\n\n  useMemo(() => {\n    NProgress.start();\n  }, []);\n\n  useEffect(() => {\n    NProgress.done();\n  }, []);\n\n  return null;\n}\n\nexport default function LoadingScreen({ ...other }) {\n  return (\n    <>\n      <ProgressBar />\n\n      <RootStyle {...other}>\n        <motion.div\n          initial={{ rotateY: 0 }}\n          animate={{ rotateY: 360 }}\n          transition={{\n            duration: 2,\n            ease: 'easeInOut',\n            repeatDelay: 1,\n            repeat: Infinity\n          }}\n        >\n          <ThumbImgStyle alt=\"SIBAU FYP-MS\" src=\"/static/mock-images/avatars/logo.jpeg\" />\n        </motion.div>\n\n        <Box\n          component={motion.div}\n          animate={{\n            scale: [1.2, 1, 1, 1.2, 1.2],\n            rotate: [270, 0, 0, 270, 270],\n            opacity: [0.25, 1, 1, 1, 0.25],\n            borderRadius: ['25%', '25%', '50%', '50%', '25%']\n          }}\n          transition={{ ease: 'linear', duration: 3.2, repeat: Infinity }}\n          sx={{\n            width: 100,\n            height: 100,\n            borderRadius: '25%',\n            position: 'absolute',\n            border: (theme) => `solid 3px ${alpha(theme.palette.primary.dark, 0.24)}`\n          }}\n        />\n\n        <Box\n          component={motion.div}\n          animate={{\n            scale: [1, 1.2, 1.2, 1, 1],\n            rotate: [0, 270, 270, 0, 0],\n            opacity: [1, 0.25, 0.25, 0.25, 1],\n            borderRadius: ['25%', '25%', '50%', '50%', '25%']\n          }}\n          transition={{\n            ease: 'linear',\n            duration: 3.2,\n            repeat: Infinity\n          }}\n          sx={{\n            width: 120,\n            height: 120,\n            borderRadius: '25%',\n            position: 'absolute',\n            border: (theme) => `solid 8px ${alpha(theme.palette.primary.dark, 0.24)}`\n          }}\n        />\n      </RootStyle>\n    </>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\axios.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\ScrollToTop.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\ThemePrimaryColor.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\jwt.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\hooks\\useLocalStorage.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\routes\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\settings\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\Logo.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\hooks\\useSettings.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\SIBAUFYPMS_Logo.js",["1174"],"import { alpha, styled } from '@mui/material/styles';\n\nexport const ThumbImgStyle = styled('img')(({ theme }) => ({\n  width: 70,\n  height: 40,\n  objectFit: 'cover',\n  borderRadius: theme.shape.borderRadiusSm\n}));\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\shape.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\breakpoints.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\typography.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\shadows.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\LogoOnlyLayout.js",["1175"],"import { Link as RouterLink, Outlet } from 'react-router-dom';\n// material\nimport { styled } from '@mui/material/styles';\n// components\nimport Logo from '../components/Logo';\n\nimport { ThumbImgStyle } from './dashboard/SIBAUFYPMS_Logo';\n// ----------------------------------------------------------------------\n\nconst HeaderStyle = styled('header')(({ theme }) => ({\n  top: 0,\n  left: 0,\n  lineHeight: 0,\n  width: '100%',\n  position: 'absolute',\n  padding: theme.spacing(3, 3, 0),\n  [theme.breakpoints.up('sm')]: {\n    padding: theme.spacing(5, 5, 0)\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function LogoOnlyLayout() {\n  return (\n    <>\n      <HeaderStyle>\n        <RouterLink to=\"/\">\n          <ThumbImgStyle alt=\"SIBAU FYP-MS\" src=\"/static/mock-images/avatars/logo.jpeg\" />\n        </RouterLink>\n      </HeaderStyle>\n      <Outlet />\n    </>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\Scrollbar.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\settings\\SettingColor.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\settings\\SettingFullscreen.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\settings\\SettingMode.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\settings\\SettingDirection.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\settings\\SettingStretch.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\store.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\guards\\GuestGuard.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageManageUsers.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageCreateGroup.js",["1176"],"// import { useEffect } from 'react';\n// import { paramCase } from 'change-case';\n// import { useParams, useLocation } from 'react-router-dom';\n// // material\n// import { Container } from '@mui/material';\n// // redux\n// import { SnackbarProvider } from 'notistack';\n// import { useDispatch, useSelector } from '../../redux/store';\n// import { getUserList } from '../../redux/slices/user';\n// // routes\n// import { PATH_DASHBOARD } from '../../routes/paths';\n// // hooks\n// import useSettings from '../../hooks/useSettings';\n// // components\n// import Page from '../../components/Page';\n// import HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\n// import UserNewForm from '../../components/_dashboard/user/UserNewForm';\n\n// import AnnouncementsNewForm from '../../components/_dashboard/user/AnnouncementsNewForm';\n// import AnnouncementsNewForm1 from '../../components/_dashboard/user/AnnouncementsNewForm1';\n\n// // ----------------------------------------------------------------------\n\n// export default function AnnouncementsCreate() {\n//   const { themeStretch } = useSettings();\n//   const dispatch = useDispatch();\n//   const { pathname } = useLocation();\n//   const { name } = useParams();\n// const { userList } = useSelector((state) => state.user);\n//   const isEdit = pathname.includes('edit');\n// const currentUser = userList.find((user) => paramCase(user.name) === name);\n\n//   useEffect(() => {\n//     dispatch(getUserList());\n//   }, [dispatch]);\n\n//   return (\n// <Page title=\"Announcements | SIBAU FYPMS\">\n//   <Container maxWidth={themeStretch ? false : 'lg'}>\n//     <HeaderBreadcrumbs\n//       heading={!isEdit ? 'Create a New Announcements' : 'Edit Announcement'}\n//       links={[\n//         { name: 'Dashboard', href: PATH_DASHBOARD.root },\n//         { name: 'User', href: PATH_DASHBOARD.user.root },\n//         { name: !isEdit ? 'New Announcement' : name }\n//       ]}\n//     />\n//     <SnackbarProvider>\n//       <AnnouncementsNewForm1 isEdit={isEdit} currentUser={currentUser} />\n//     </SnackbarProvider>\n//   </Container>\n// </Page>\n//   );\n// }\n\n// new version of annoucements\n\nimport { useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@mui/material';\n// redux\nimport { SnackbarProvider } from 'notistack';\nimport { useDispatch, useSelector } from '../redux/store';\nimport { getProducts } from '../redux/slices/product';\n// routes\nimport { PATH_DASHBOARD } from '../routes/paths';\n// hooks\nimport useSettings from '../hooks/useSettings';\n// components\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport AnnouncementsNewForm from '../components/_dashboard/user/ReportsNewForm';\nimport SubmitIdeaNewForm from '../components/_dashboard/user/SubmitIdeaNewForm';\n\n// ----------------------------------------------------------------------\n\nexport default function PageCreateGroup() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const { userList } = useSelector((state) => state.user);\n  const isEdit = pathname.includes('edit');\n  const currentUser = userList.find((user) => paramCase(user.name) === name);\n\n  useEffect(() => {\n    dispatch(getProducts());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"Create Reports | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Create Group' : 'Edit Idea'}\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: !isEdit ? 'Group Creation' : name }]}\n        />\n        <SnackbarProvider>\n          <SubmitIdeaNewForm isEdit={isEdit} currentUser={currentUser} />\n        </SnackbarProvider>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageGroupsUnderSupervision.js",["1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200","1201","1202"],"import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport React, { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { useTheme, styled, alpha } from '@mui/material/styles';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport EditIcon from '@mui/icons-material/Edit';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport Divider from '@mui/material/Divider';\nimport AddIcon from '@mui/icons-material/Add';\nimport ArchiveIcon from '@mui/icons-material/Archive';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\n\n// material\n// import { useTheme } from '@mui/material/styles'; // important\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  TextField,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Toolbar,\n  Container,\n  IconButton,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n// redux\nimport useAuth from '../hooks/useAuth';\nimport { useDispatch, useSelector } from '../redux/store';\nimport { getBatchesList, deleteBatch } from '../redux/slices/batch';\nimport { showAllGroupsUnderSupervisionsByBatch, deleteGroup, getGroupUnderSupervision } from '../redux/slices/group';\nimport { getInstructorList } from '../redux/slices/instructor';\n// routes\nimport { PATH_DASHBOARD } from '../routes/paths';\n// hooks\nimport useSettings from '../hooks/useSettings';\n// components\nimport Page from '../components/Page';\nimport Label from '../components/Label';\nimport Scrollbar from '../components/Scrollbar';\nimport SearchNotFound from '../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport { UserListHead, UserListToolbar, GroupsUnderSupervisionMoreMenu } from '../components/_dashboard/user/list';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Proposed Title', alignRight: false },\n  { id: 'cmsId', label: 'Group Member 1', alignRight: false },\n  { id: 'cmsId', label: 'Group Member 2', alignRight: false },\n  { id: 'cmsId', label: 'Group Member 3', alignRight: false },\n  { id: 'role', label: 'Batch', alignRight: false },\n  // { id: 'status', label: 'Group Approval', alignRight: false },\n  { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  console.log('that', array);\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.project_title.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function PageGroupsUnderSupervision() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { groupList } = useSelector((state) => state.group);\n  const { batchesList } = useSelector((state) => state.batch);\n  const { userList } = useSelector((state) => state.instructor);\n  const { user } = useAuth();\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => {\n    dispatch(getGroupUnderSupervision(user.id));\n    dispatch(getBatchesList());\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = groupList.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const handleDeleteUser = (userId) => {\n    dispatch(deleteGroup(userId));\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - groupList.length) : 0;\n\n  const filteredUsers = applySortFilter(groupList, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  // ****************\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick_ = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose_ = () => {\n    setAnchorEl(null);\n  };\n\n  // **** styled menu\n  const StyledMenu = styled((props) => (\n    <Menu\n      elevation={0}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right'\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right'\n      }}\n      {...props}\n    />\n  ))(({ theme }) => ({\n    '& .MuiPaper-root': {\n      borderRadius: 6,\n      marginTop: theme.spacing(1),\n      minWidth: 180,\n      color: theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\n      boxShadow:\n        'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n      '& .MuiMenu-list': {\n        padding: '4px 0'\n      },\n      '& .MuiMenuItem-root': {\n        '& .MuiSvgIcon-root': {\n          fontSize: 18,\n          color: theme.palette.text.secondary,\n          marginRight: theme.spacing(1.5)\n        },\n        '&:active': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }));\n\n  // ***************\n  const getColor = (status) => {\n    let result;\n    if (status === 0) {\n      result = 'warning';\n    } else if (status === 1) {\n      result = 'success';\n    } else {\n      result = 'error';\n    }\n    return result;\n  };\n  const getGroupStatus = (status) => {\n    let result;\n    if (status === 0) {\n      result = 'Inprogress';\n    } else if (status === 1) {\n      result = 'Approved';\n    } else {\n      result = 'Rejected';\n    }\n    return result;\n  };\n  const [batchState, setBatchState] = useState('All');\n  const RootStyle = styled(Toolbar)(({ theme }) => ({\n    height: 96,\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: theme.spacing(0, 1, 0, 3)\n  }));\n  const batchSelectHandler = (e) => {\n    setBatchState(e.target.value);\n    if (e.target.value === 'All') {\n      dispatch(getGroupUnderSupervision(user.id));\n    } else {\n      dispatch(\n        showAllGroupsUnderSupervisionsByBatch(user.id, batchesList?.find((batch) => batch.batch === e.target.value)?.id)\n      );\n    }\n  };\n  const getSupervisorName = (row) => {\n    const id = row.supervisor_id ? row.supervisor_id : -1;\n    let result = '';\n    if (id === -1) {\n      result = 'Not Available';\n    } else {\n      const data = userList.find((user) => user.id === id);\n      result = data?.user.name || 'Not Available';\n    }\n    return result;\n  };\n  return (\n    <Page title=\"User: List | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Groups Under Supervision\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Groups' }]}\n        />\n\n        <Card>\n          <RootStyle>\n            <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\n\n            <TextField\n              select\n              style={{ width: '250px' }}\n              label=\"Select Batch\"\n              placeholder=\"Select Batch\"\n              value={batchState}\n              SelectProps={{ native: true }}\n              onChange={(e) => batchSelectHandler(e)}\n            >\n              <option>All</option>\n              {batchesList.map((row) => (\n                <option>{row.batch}</option>\n              ))}\n            </TextField>\n          </RootStyle>\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <UserListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={groupList.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    const isItemSelected = selected.indexOf(row.id) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={row.id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, row.id)} />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            <Typography variant=\"subtitle2\" noWrap>\n                              {row.project_title}\n                            </Typography>\n                          </Stack>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <p>{row.students[0]?.user.name || 'Not Available'}</p>\n                          <p>{row.students[0]?.user_id}</p>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <p>{row.students[1]?.user.name || 'Not Available'}</p>\n                          <p>{row.students[1]?.user_id || ''}</p>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <p>{row.students[2]?.user.name || 'Not Available'}</p>\n                          <p>{row.students[2]?.user_id || ''}</p>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <Label variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}>\n                            {batchesList?.find((batch) => batch.id === row.students[0]?.batch_id)?.batch}\n                          </Label>\n                        </TableCell>\n                        {/* <TableCell align=\"left\">\n                          <Label\n                            variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                            color={getColor(row.groupStatus)}\n                          >\n                            {sentenceCase(getGroupStatus(row.groupStatus))}\n                          </Label>\n                        </TableCell> */}\n\n                        <TableCell align=\"right\">\n                          <GroupsUnderSupervisionMoreMenu onDelete={() => handleDeleteUser(row.id)} userName={row} />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isUserNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={groupList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageProjectsArchive.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageGroups.js",["1203","1204","1205","1206","1207","1208","1209","1210","1211","1212","1213","1214","1215","1216","1217","1218","1219","1220","1221","1222"],"import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport React, { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { useTheme, styled, alpha } from '@mui/material/styles';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport EditIcon from '@mui/icons-material/Edit';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport Divider from '@mui/material/Divider';\nimport AddIcon from '@mui/icons-material/Add';\nimport ArchiveIcon from '@mui/icons-material/Archive';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\n\n// material\n// import { useTheme } from '@mui/material/styles'; // important\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  TextField,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Toolbar,\n  Container,\n  IconButton,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../redux/store';\nimport { getBatchesList, deleteBatch } from '../redux/slices/batch';\nimport { getGroupByBatch, getGroupList, deleteGroup } from '../redux/slices/group';\nimport { getInstructorList } from '../redux/slices/instructor';\n// routes\nimport { PATH_DASHBOARD } from '../routes/paths';\n// hooks\nimport useSettings from '../hooks/useSettings';\n// components\nimport Page from '../components/Page';\nimport Label from '../components/Label';\nimport Scrollbar from '../components/Scrollbar';\nimport SearchNotFound from '../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport { UserListHead, UserListToolbar, GroupMoreMenu } from '../components/_dashboard/user/list';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Proposed Title', alignRight: false },\n  { id: 'cmsId', label: 'Group Member 1', alignRight: false },\n  { id: 'cmsId', label: 'Group Member 2', alignRight: false },\n  { id: 'cmsId', label: 'Group Member 3', alignRight: false },\n  { id: 'role', label: 'Supervisor', alignRight: false },\n  { id: 'status', label: 'Group Approval', alignRight: false },\n  { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  console.log('that', array);\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.project_title.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function PageGroups() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { groupList } = useSelector((state) => state.group);\n  const { batchesList } = useSelector((state) => state.batch);\n  const { userList } = useSelector((state) => state.instructor);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => {\n    dispatch(getGroupList());\n    dispatch(getBatchesList());\n    dispatch(getInstructorList());\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = groupList.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const handleDeleteUser = (userId) => {\n    dispatch(deleteGroup(userId));\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - groupList.length) : 0;\n\n  const filteredUsers = applySortFilter(groupList, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  // ****************\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick_ = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose_ = () => {\n    setAnchorEl(null);\n  };\n\n  // **** styled menu\n  const StyledMenu = styled((props) => (\n    <Menu\n      elevation={0}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right'\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right'\n      }}\n      {...props}\n    />\n  ))(({ theme }) => ({\n    '& .MuiPaper-root': {\n      borderRadius: 6,\n      marginTop: theme.spacing(1),\n      minWidth: 180,\n      color: theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\n      boxShadow:\n        'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n      '& .MuiMenu-list': {\n        padding: '4px 0'\n      },\n      '& .MuiMenuItem-root': {\n        '& .MuiSvgIcon-root': {\n          fontSize: 18,\n          color: theme.palette.text.secondary,\n          marginRight: theme.spacing(1.5)\n        },\n        '&:active': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }));\n\n  // ***************\n  const getColor = (status) => {\n    let result;\n    if (status === 2) {\n      result = 'warning';\n    } else if (status === 1) {\n      result = 'success';\n    } else {\n      result = 'error';\n    }\n    return result;\n  };\n  const getGroupStatus = (status) => {\n    let result;\n    if (status === 2) {\n      result = 'In progress';\n    } else if (status === 1) {\n      result = 'Approved';\n    } else {\n      result = 'Rejected';\n    }\n    return result;\n  };\n  const [batchState, setBatchState] = useState('All');\n  const RootStyle = styled(Toolbar)(({ theme }) => ({\n    height: 96,\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: theme.spacing(0, 1, 0, 3)\n  }));\n  const batchSelectHandler = (e) => {\n    setBatchState(e.target.value);\n    if (e.target.value === 'All') {\n      dispatch(getGroupList());\n    } else {\n      dispatch(getGroupByBatch(batchesList?.find((batch) => batch.batch === e.target.value)?.id));\n    }\n  };\n  const getSupervisorName = (row) => {\n    const id = row.supervisor_id ? row.supervisor_id : -1;\n    let result = '';\n    if (id === -1) {\n      result = 'Not Available';\n    } else {\n      const data = userList.find((user) => user.id === id);\n      result = data?.user.name || 'Not Available';\n    }\n    return result;\n  };\n  return (\n    <Page title=\"Group List | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Group Management\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Groups' }]}\n        />\n\n        <Card>\n          <RootStyle>\n            <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\n\n            <TextField\n              select\n              style={{ width: '250px' }}\n              label=\"Select Batch\"\n              placeholder=\"Select Batch\"\n              value={batchState}\n              SelectProps={{ native: true }}\n              onChange={(e) => batchSelectHandler(e)}\n            >\n              <option>All</option>\n              {batchesList.map((row) => (\n                <option>{row.batch}</option>\n              ))}\n            </TextField>\n          </RootStyle>\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <UserListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={groupList.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    const isItemSelected = selected.indexOf(row.id) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={row.id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, row.id)} />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            <Typography variant=\"subtitle2\" noWrap>\n                              {row.project_title}\n                            </Typography>\n                          </Stack>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <p>{row.students[0]?.user.name || 'Not Available'}</p>\n                          <p>{row.students[0]?.user_id}</p>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <p>{row.students[1]?.user.name || 'Not Available'}</p>\n                          <p>{row.students[1]?.user_id || ''}</p>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <p>{row.students[2]?.user.name || 'Not Available'}</p>\n                          <p>{row.students[2]?.user_id || ''}</p>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <Label\n                            variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                            color={row.supervisor_id ? 'success' : 'error'}\n                          >\n                            {sentenceCase(getSupervisorName(row))}\n                          </Label>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <Label\n                            variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                            color={getColor(row.groupStatus)}\n                          >\n                            {sentenceCase(getGroupStatus(row.groupStatus))}\n                          </Label>\n                        </TableCell>\n\n                        <TableCell align=\"right\">\n                          <GroupMoreMenu onDelete={() => handleDeleteUser(row.id)} userName={row} />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isUserNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={groupList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageCreateReports.js",["1223","1224"],"// import { useEffect } from 'react';\n// import { paramCase } from 'change-case';\n// import { useParams, useLocation } from 'react-router-dom';\n// // material\n// import { Container } from '@mui/material';\n// // redux\n// import { SnackbarProvider } from 'notistack';\n// import { useDispatch, useSelector } from '../../redux/store';\n// import { getUserList } from '../../redux/slices/user';\n// // routes\n// import { PATH_DASHBOARD } from '../../routes/paths';\n// // hooks\n// import useSettings from '../../hooks/useSettings';\n// // components\n// import Page from '../../components/Page';\n// import HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\n// import UserNewForm from '../../components/_dashboard/user/UserNewForm';\n\n// import AnnouncementsNewForm from '../../components/_dashboard/user/AnnouncementsNewForm';\n// import AnnouncementsNewForm1 from '../../components/_dashboard/user/AnnouncementsNewForm1';\n\n// // ----------------------------------------------------------------------\n\n// export default function AnnouncementsCreate() {\n//   const { themeStretch } = useSettings();\n//   const dispatch = useDispatch();\n//   const { pathname } = useLocation();\n//   const { name } = useParams();\n// const { userList } = useSelector((state) => state.user);\n//   const isEdit = pathname.includes('edit');\n// const currentUser = userList.find((user) => paramCase(user.name) === name);\n\n//   useEffect(() => {\n//     dispatch(getUserList());\n//   }, [dispatch]);\n\n//   return (\n// <Page title=\"Announcements | SIBAU FYPMS\">\n//   <Container maxWidth={themeStretch ? false : 'lg'}>\n//     <HeaderBreadcrumbs\n//       heading={!isEdit ? 'Create a New Announcements' : 'Edit Announcement'}\n//       links={[\n//         { name: 'Dashboard', href: PATH_DASHBOARD.root },\n//         { name: 'User', href: PATH_DASHBOARD.user.root },\n//         { name: !isEdit ? 'New Announcement' : name }\n//       ]}\n//     />\n//     <SnackbarProvider>\n//       <AnnouncementsNewForm1 isEdit={isEdit} currentUser={currentUser} />\n//     </SnackbarProvider>\n//   </Container>\n// </Page>\n//   );\n// }\n\n// new version of annoucements\n\nimport { useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@mui/material';\n// redux\nimport { SnackbarProvider } from 'notistack';\nimport { useDispatch, useSelector } from '../redux/store';\nimport { getAssignedWorkList, deleteAssignedWork, getAssignedWorkByBatch } from '../redux/slices/assignedWork';\n// routes\nimport { PATH_DASHBOARD } from '../routes/paths';\n// hooks\nimport useSettings from '../hooks/useSettings';\n// components\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport ReportsNewForm from '../components/_dashboard/user/ReportsNewForm';\n\n// ----------------------------------------------------------------------\n\nexport default function PageCreateReports() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const { assignedWorkList } = useSelector((state) => state.assignedWork);\n  const isEdit = pathname.includes('edit');\n  const currentUser = assignedWorkList.find((user) => paramCase(String(user.id)) === name);\n\n  useEffect(() => {\n    dispatch(getAssignedWorkList());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"Create Reports | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Create a New Report' : 'Edit Report'}\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'Reports', href: PATH_DASHBOARD.general.reports },\n            { name: !isEdit ? 'New Report' : currentUser?.title || '' }\n          ]}\n        />\n        <SnackbarProvider>\n          <ReportsNewForm isEdit={isEdit} currentData={currentUser} />\n        </SnackbarProvider>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\Page404.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageCreateMeeting.js",["1225","1226"],"import { useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@mui/material';\n// redux\nimport { SnackbarProvider } from 'notistack';\nimport MeetingsNewForm from '../components/_dashboard/user/MeetingsNewForm';\nimport { useDispatch, useSelector } from '../redux/store';\nimport { getGroup } from '../redux/slices/group';\n// routes\nimport { PATH_DASHBOARD } from '../routes/paths';\n// hooks\nimport useSettings from '../hooks/useSettings';\n// components\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\n\n// ----------------------------------------------------------------------\n\nexport default function PageCreateMeeting() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const { group } = useSelector((state) => state.group);\n  const isEdit = pathname.includes('edit');\n  // const currentUser = assignedWorkList.find((user) => paramCase(String(user.id)) === name);\n\n  useEffect(() => {\n    dispatch(getGroup(name));\n  }, [dispatch]);\n\n  return (\n    <Page title=\"Create Meeting | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Create a New Meeting' : 'Edit Meeting'}\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'Meetings', href: `${PATH_DASHBOARD.app.root}/${String(name)}/meeting-list` },\n            { name: !isEdit ? 'New Meeting' : group?.project_title || '' }\n          ]}\n        />\n        <SnackbarProvider>\n          <MeetingsNewForm isEdit={isEdit} group={group} />\n        </SnackbarProvider>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageSubmitReports.js",["1227","1228","1229","1230","1231","1232"],"import { useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@mui/material';\n// redux\nimport { SnackbarProvider } from 'notistack';\nimport { useDispatch, useSelector } from '../redux/store';\nimport { getProducts } from '../redux/slices/product';\n// routes\nimport { PATH_DASHBOARD } from '../routes/paths';\n// hooks\nimport useSettings from '../hooks/useSettings';\n// components\nimport Page from '../components/Page';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport SubmitReportsNewForm from '../components/_dashboard/user/SubmitReportsNewForm';\nimport PageSubmitReportStepper from './PageSubmitReportStepper';\n// ----------------------------------------------------------------------\n\nexport default function PageSubmitReports() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const { userList } = useSelector((state) => state.user);\n  const isEdit = pathname.includes('edit');\n  const currentUser = userList.find((user) => paramCase(user.name) === name);\n\n  useEffect(() => {\n    dispatch(getProducts());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"Submit Reports | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <h3>Submit Reports </h3>\n        {/* <HeaderBreadcrumbs\n          heading={!isEdit ? 'Create a New Report' : 'Edit Report'}\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'User', href: PATH_DASHBOARD.user.root },\n            { name: !isEdit ? 'New Report' : name }\n          ]}\n        /> */}\n        <PageSubmitReportStepper />\n        {/* <SnackbarProvider>\n          <SubmitReportsNewForm isEdit={isEdit} currentUser={currentUser} />\n        </SnackbarProvider> */}\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageViewAnnouncements.js",["1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284"],"import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport React, { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { useTheme, styled, alpha } from '@mui/material/styles';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport EditIcon from '@mui/icons-material/Edit';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport Divider from '@mui/material/Divider';\nimport AddIcon from '@mui/icons-material/Add';\nimport ArchiveIcon from '@mui/icons-material/Archive';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\n// material\n// import { useTheme } from '@mui/material/styles'; // important\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Grid,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../redux/store';\nimport { getUserList, deleteUser } from '../redux/slices/user';\nimport {\n  getAnnouncementList,\n  updateNotificationSetReadStatus,\n  getAnnouncementListByStudent\n} from '../redux/slices/announcement';\nimport { getStudent } from '../redux/slices/student';\n\n// routes\nimport { PATH_DASHBOARD } from '../routes/paths';\n// hooks\nimport useSettings from '../hooks/useSettings';\n// components\nimport Page from '../components/Page';\nimport Label from '../components/Label';\nimport Scrollbar from '../components/Scrollbar';\nimport SearchNotFound from '../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../components/HeaderBreadcrumbs';\nimport PageViewAnnouncementCard from './PageViewAnnouncementCard';\nimport useAuth from '../hooks/useAuth';\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Idea', alignRight: false },\n  { id: 'cmsId', label: 'Group', alignRight: false },\n  { id: 'role', label: 'Supervisor', alignRight: false },\n  { id: 'isVerified', label: 'Verified', alignRight: false },\n  { id: 'status', label: 'Approval Status', alignRight: false },\n  { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  console.log('that', array);\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function PageViewAnnouncements() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { userList } = useSelector((state) => state.user);\n  const { user } = useAuth();\n  const { announcementList } = useSelector((state) => state.announcement);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => {\n    dispatch(updateNotificationSetReadStatus(user?.id || ''));\n    dispatch(user.role.role_name === 'Student' ? getAnnouncementListByStudent(user?.id || '') : getAnnouncementList());\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = userList.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const handleDeleteUser = (userId) => {\n    dispatch(deleteUser(userId));\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userList.length) : 0;\n\n  const filteredUsers = applySortFilter(userList, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  // ****************\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick_ = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose_ = () => {\n    setAnchorEl(null);\n  };\n\n  // **** styled menu\n  const StyledMenu = styled((props) => (\n    <Menu\n      elevation={0}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right'\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right'\n      }}\n      {...props}\n    />\n  ))(({ theme }) => ({\n    '& .MuiPaper-root': {\n      borderRadius: 6,\n      marginTop: theme.spacing(1),\n      minWidth: 180,\n      color: theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\n      boxShadow:\n        'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n      '& .MuiMenu-list': {\n        padding: '4px 0'\n      },\n      '& .MuiMenuItem-root': {\n        '& .MuiSvgIcon-root': {\n          fontSize: 18,\n          color: theme.palette.text.secondary,\n          marginRight: theme.spacing(1.5)\n        },\n        '&:active': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }));\n\n  // ***************\n  const arr = [1, 2, 3, 4, 5];\n\n  return (\n    <Page title=\"User: List | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <h2>View Announcements</h2>\n        {/* <HeaderBreadcrumbs heading=\"View Announcements\" /> */}\n        {user.role.role_name === 'Student'\n          ? announcementList.map((item, index) => (\n              <Grid item xs={12} sm={12} md={12}>\n                <PageViewAnnouncementCard data={item.announcement} />\n                <br />\n              </Grid>\n            ))\n          : announcementList.map((item, index) => (\n              <Grid item xs={12} sm={12} md={12}>\n                <PageViewAnnouncementCard data={item} />\n                <br />\n              </Grid>\n            ))}\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\GeneralApp.js",["1285","1286","1287"],"// material\nimport { Container, Grid, Stack } from '@mui/material';\n// hooks\nimport useAuth from '../../hooks/useAuth';\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport {\n  AppWelcome,\n  AppNewInvoice,\n  AppTopRelated,\n  AppTotalDownloads,\n  AppTotalActiveUsers,\n  AppTopInstalledCountries,\n  AppTotalInstalled\n} from '../../components/_dashboard/general-app';\n\n// ----------------------------------------------------------------------\n\nexport default function GeneralApp() {\n  const { themeStretch } = useSettings();\n  const { user } = useAuth();\n\n  return (\n    <Page title=\"General: App | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12}>\n            <AppWelcome displayName={user.name} />\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <AppTotalActiveUsers />\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <AppTotalInstalled />\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <AppTotalDownloads />\n          </Grid>\n\n          <Grid item xs={12} lg={12}>\n            <AppNewInvoice />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\ApproveGroups.js",["1288"],"import { useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@mui/material';\n// redux\nimport { SnackbarProvider } from 'notistack';\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getGroupList, deleteGroup } from '../../redux/slices/group';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport ApproveGroupForm from '../../components/_dashboard/user/ApproveGroupForm';\n\n// ----------------------------------------------------------------------\n\nexport default function SupervisorCreate() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const { groupList } = useSelector((state) => state.group);\n  const isEdit = pathname.includes('edit');\n  const currentUser = groupList.find((group) => paramCase(String(group.id)) === name);\n\n  useEffect(() => {\n    dispatch(getGroupList());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"User: Add a new supervisor | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Approve Group and Assign Supervisor' : 'Approve Group'}\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'User', href: PATH_DASHBOARD.user.list },\n            { name: !isEdit ? 'Approve Group' : name }\n          ]}\n        />\n        <SnackbarProvider>\n          <ApproveGroupForm isEdit={isEdit} currentUser={currentUser} />\n        </SnackbarProvider>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\UserList.js",["1289","1290","1291","1292","1293","1294","1295","1296","1297"],"import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport React, { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\n\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { useTheme, styled, alpha } from '@mui/material/styles';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport AddIcon from '@mui/icons-material/Add';\n\n// material\n// import { useTheme } from '@mui/material/styles'; // important\nimport {\n  Card,\n  IconButton,\n  Table,\n  Stack,\n  TextField,\n  Tooltip,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  Toolbar,\n  TablePagination\n} from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getUserList, showAllUsersByBatch, getUserByRole, deleteUser } from '../../redux/slices/user';\nimport { getBatchesList } from '../../redux/slices/batch';\nimport { getRoleList } from '../../redux/slices/role';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/list';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Name', alignRight: false },\n  { id: 'cmsId', label: 'CMS ID', alignRight: false },\n  { id: 'role', label: 'Role', alignRight: false },\n  { id: 'isVerified', label: 'Verified', alignRight: false },\n  { id: 'status', label: 'Status', alignRight: false },\n  { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  console.log('that', array);\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function UserList() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { userList } = useSelector((state) => state.user);\n  const { roleList } = useSelector((state) => state.role);\n  const { batchesList } = useSelector((state) => state.batch);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => {\n    dispatch(getUserList());\n    dispatch(getRoleList());\n    dispatch(getBatchesList());\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = userList.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const handleDeleteUser = (userId) => {\n    dispatch(deleteUser(userId));\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userList.length) : 0;\n\n  const filteredUsers = applySortFilter(userList, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  // ****************\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick_ = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose_ = () => {\n    setAnchorEl(null);\n  };\n\n  const [anchorEl1, setAnchorEl1] = React.useState(null);\n  const open1 = Boolean(anchorEl1);\n  const handleClick1_ = (event) => {\n    setAnchorEl1(event.currentTarget);\n  };\n  const handleClose1_ = () => {\n    setAnchorEl1(null);\n  };\n\n  // **** styled menu\n  const StyledMenu = styled((props) => (\n    <Menu\n      elevation={0}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right'\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right'\n      }}\n      {...props}\n    />\n  ))(({ theme }) => ({\n    '& .MuiPaper-root': {\n      borderRadius: 6,\n      marginTop: theme.spacing(1),\n      minWidth: 180,\n      color: theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\n      boxShadow:\n        'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n      '& .MuiMenu-list': {\n        padding: '4px 0'\n      },\n      '& .MuiMenuItem-root': {\n        '& .MuiSvgIcon-root': {\n          fontSize: 18,\n          color: theme.palette.text.secondary,\n          marginRight: theme.spacing(1.5)\n        },\n        '&:active': {\n          backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }));\n\n  // ***************\n  // const [roleState, setRoleState] =useState('');\n  const RoleFilterHandler = (e) => {\n    setSelectRole(e.target.value);\n    const a = e.target.value === 'Student' ? showBatchStatus(true) : showBatchStatus(false);\n    if (e.target.value === 'All') {\n      dispatch(getUserList());\n    } else {\n      dispatch(getUserByRole(roleList?.find((role) => role.role_name === e.target.value).id));\n    }\n  };\n\n  const getByBatch = (e) => {\n    setSelectBatch(e.target.value);\n    if (e.target.value === 'All') {\n      dispatch(getUserByRole(roleList?.find((role) => role.role_name === selectRole).id));\n    } else {\n      dispatch(showAllUsersByBatch(batchesList.find((batch) => batch.batch === e.target.value).id));\n    }\n  };\n  const RootStyle = styled(Toolbar)(({ theme }) => ({\n    height: 96,\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: theme.spacing(0, 1, 0, 3)\n  }));\n  const [selectBatch, setSelectBatch] = useState('All');\n  const [batchStatus, showBatchStatus] = useState(false);\n  const [selectRole, setSelectRole] = useState('All');\n  return (\n    <Page title=\"User: List | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"User List\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'User', href: PATH_DASHBOARD.user.list },\n            { name: 'List' }\n          ]}\n          action={\n            <div className=\"row bg-success\">\n              {/* ******************** */}\n\n              <div>\n                <Button\n                  startIcon={<AddIcon />}\n                  id=\"demo-customized-button\"\n                  aria-controls=\"demo-customized-menu\"\n                  aria-haspopup=\"true\"\n                  aria-expanded={open ? 'true' : undefined}\n                  variant=\"contained\"\n                  disableElevation\n                  onClick={handleClick_}\n                >\n                  New User\n                </Button>\n                <StyledMenu\n                  id=\"demo-customized-menu\"\n                  MenuListProps={{\n                    'aria-labelledby': 'demo-customized-button'\n                  }}\n                  anchorEl={anchorEl}\n                  open={open}\n                  onClose={handleClose_}\n                >\n                  <MenuItem\n                    variant=\"contained\"\n                    component={RouterLink}\n                    to={PATH_DASHBOARD.user.newStudent}\n                    startIcon={<Icon icon={plusFill} />}\n                  >\n                    Student\n                  </MenuItem>\n                  <MenuItem\n                    variant=\"contained\"\n                    component={RouterLink}\n                    to={PATH_DASHBOARD.user.newSupervisor}\n                    startIcon={<Icon icon={plusFill} />}\n                  >\n                    Supervisor\n                  </MenuItem>\n                  {/* <Divider sx={{ my: 0.5 }} />  */}\n                </StyledMenu>\n              </div>\n\n              {/* *************************** */}\n\n              {/* <div className=\"col-5\">\n                <Button\n                  variant=\"contained\"\n                  component={RouterLink}\n                  to={PATH_DASHBOARD.user.newStudent}\n                  startIcon={<Icon icon={plusFill} />}\n                >\n                  New Student\n                </Button>\n              </div>\n              <div className=\"col-2\">\n                <br />\n              </div>\n              <div className=\"col-5\">\n                <Button\n                  variant=\"contained\"\n                  component={RouterLink}\n                  to={PATH_DASHBOARD.user.newSupervisor}\n                  startIcon={<Icon icon={plusFill} />}\n                >\n                  New Supervisor\n                </Button>\n              </div> */}\n            </div>\n          }\n        />\n\n        <Card>\n          <RootStyle>\n            <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\n\n            <RootStyle>\n              {batchStatus ? (\n                <TextField\n                  select\n                  style={{ width: '150px' }}\n                  label=\"Select Batch\"\n                  placeholder=\"Select Batch\"\n                  SelectProps={{ native: true }}\n                  value={selectBatch}\n                  onChange={(e) => getByBatch(e)}\n                >\n                  <option>All</option>\n                  {batchesList.map((row) => (\n                    <option>{row.batch}</option>\n                  ))}\n                </TextField>\n              ) : null}\n              <p>&nbsp;&nbsp;&nbsp;</p>\n              <TextField\n                select\n                style={{ width: '150px' }}\n                label=\"Filter By Role\"\n                placeholder=\"Filter By Role\"\n                SelectProps={{ native: true }}\n                value={selectRole}\n                onChange={(e) => RoleFilterHandler(e)}\n              >\n                <option>All</option>\n                {roleList.map((row) => (\n                  <option>{row.role_name}</option>\n                ))}\n              </TextField>\n            </RootStyle>\n          </RootStyle>\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <UserListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={userList.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    const isItemSelected = selected.indexOf(row.name) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={row.id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, row.name)} />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            <Avatar alt={row.name} src={row.imgUrl} />\n                            <Typography variant=\"subtitle2\" noWrap>\n                              {row.name}\n                            </Typography>\n                          </Stack>\n                        </TableCell>\n                        <TableCell align=\"left\">{row.user_name}</TableCell>\n                        <TableCell align=\"left\">{row.role.role_name}</TableCell>\n                        <TableCell align=\"left\">\n                          <Label\n                            variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                            color={row.is_varified === 0 ? 'error' : 'success'}\n                          >\n                            {row.is_varified === 1 ? 'Verified' : 'Not Verified'}\n                          </Label>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <Label\n                            variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                            color={(row.isActive === 0 && 'error') || 'success'}\n                          >\n                            {sentenceCase(row.isActive === 1 ? 'Active' : 'Not Active')}\n                          </Label>\n                        </TableCell>\n\n                        <TableCell align=\"right\">\n                          <UserMoreMenu onDelete={() => handleDeleteUser(row.id)} userName={row} />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isUserNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={userList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\UserRole.js",["1298","1299","1300"],"import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getRoleList, deleteRole } from '../../redux/slices/role';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { UserListHead, UserListToolbar, RoleMoreMenu } from '../../components/_dashboard/user/list';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'role', label: 'Role', alignRight: false },\n  { id: 'status', label: 'Status', alignRight: false },\n  { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.role_name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function UserRole() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { roleList } = useSelector((state) => state.role);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => {\n    dispatch(getRoleList());\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = roleList.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const handleDeleteRole = (userId) => {\n    dispatch(deleteRole(userId));\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - roleList.length) : 0;\n\n  const filteredUsers = applySortFilter(roleList, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  return (\n    <Page title=\"User: List | SIBAU FYPMS \">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"User Role\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'User', href: PATH_DASHBOARD.user.list },\n            { name: 'Role' }\n          ]}\n          action={\n            <Button\n              variant=\"contained\"\n              component={RouterLink}\n              to={PATH_DASHBOARD.user.newRole}\n              startIcon={<Icon icon={plusFill} />}\n            >\n              New Role\n            </Button>\n          }\n        />\n\n        <Card>\n          <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <UserListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={roleList.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    const isItemSelected = selected.indexOf(row.role_name) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={row.id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, row.role_name)} />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            <Avatar alt={row.role_name} src=\"\" />\n                            <Typography variant=\"subtitle2\" noWrap>\n                              {row.role_name}\n                            </Typography>\n                          </Stack>\n                        </TableCell>\n                        <TableCell align=\"left\" color={row.isActive === 0 ? 'error' : 'success'}>\n                          {row.isActive === 1 ? 'active' : 'banned'}\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          <RoleMoreMenu onDelete={() => handleDeleteRole(row.id)} userName={row.role_name} />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isUserNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={roleList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\SupervisorCreate.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\RoleCreate.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\UserBatch.js",["1301","1302"],"import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getBatchesList, deleteBatch } from '../../redux/slices/batch';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { UserListHead, UserListToolbar, RoleMoreMenu } from '../../components/_dashboard/user/list';\nimport BatchMoreMenu from '../../components/_dashboard/user/list/BatchMoreMenu';\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'batch', label: 'Batch', alignRight: false },\n  { id: 'status', label: 'Status', alignRight: false },\n  { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.batch.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function UserBatch() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { batchesList } = useSelector((state) => state.batch);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => {\n    dispatch(getBatchesList());\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = batchesList.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const handleDeleteBatch = (batchId) => {\n    dispatch(deleteBatch(batchId));\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - batchesList.length) : 0;\n\n  const filteredUsers = applySortFilter(batchesList, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  return (\n    <Page title=\"Batch | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"User Batch\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'User', href: PATH_DASHBOARD.user.list },\n            { name: 'Batch' }\n          ]}\n          action={\n            <Button\n              variant=\"contained\"\n              component={RouterLink}\n              to={PATH_DASHBOARD.user.newBatch}\n              startIcon={<Icon icon={plusFill} />}\n            >\n              New Batch\n            </Button>\n          }\n        />\n\n        <Card>\n          <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <UserListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={batchesList.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    const isItemSelected = selected.indexOf(row.batch) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={row.id}\n                        tabIndex={-1}\n                        batch=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, row.batch)} />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            <Avatar alt={row.batch} src=\"\" />\n                            <Typography variant=\"subtitle2\" noWrap>\n                              {row.batch}\n                            </Typography>\n                          </Stack>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <Label\n                            variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                            color={row.isActive === 0 ? 'error' : 'success'}\n                          >\n                            {row.isActive === 1 ? 'Active' : 'Banned'}\n                          </Label>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          <BatchMoreMenu onDelete={() => handleDeleteBatch(row.id)} userName={row.batch} />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isUserNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={batchesList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\BatchCreate.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\AnnouncementsList.js",["1303","1304","1305","1306","1307","1308","1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320","1321","1322"],"import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport React, { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { useTheme, styled, alpha } from '@mui/material/styles';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport EditIcon from '@mui/icons-material/Edit';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport Divider from '@mui/material/Divider';\nimport AddIcon from '@mui/icons-material/Add';\nimport ArchiveIcon from '@mui/icons-material/Archive';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\n\nimport RecordVoiceOverRoundedIcon from '@mui/icons-material/RecordVoiceOverRounded';\n// material\n// import { useTheme } from '@mui/material/styles'; // important\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getAnnouncementList, deleteAnnouncement, getAllNotifications } from '../../redux/slices/announcement';\nimport { getBatchesList } from '../../redux/slices/batch';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/list';\nimport AnnouncementMoreMenu from '../../components/_dashboard/user/list/AnnouncementMoreMenu';\n// ----------------------------------------------------------------------\nconst TABLE_HEAD = [\n  { id: 'Announcement', label: 'Announcement', alignRight: false },\n  { id: 'Batch', label: 'Batch', alignRight: false },\n  { id: 'Viewers', label: 'Viewers', alignRight: false },\n  // { id: 'isVerified', label: 'Verified', alignRight: false },\n  { id: 'Date', label: 'Date', alignRight: false }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  console.log('that', array);\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.title.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\nexport default function AnnouncementsList() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { announcementList, notificationList } = useSelector((state) => state.announcement);\n  const { batchesList } = useSelector((state) => state.batch);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => {\n    dispatch(getAnnouncementList());\n    dispatch(getAllNotifications());\n    dispatch(getBatchesList());\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const getStringFromDescription = (description) => {\n    const indexStart = String(description).indexOf('<p>') + 3;\n    const indexEnd = String(description).indexOf('</p>');\n    return String(description).substring(indexStart, indexEnd);\n  };\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = announcementList.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n  const getDate = (date) => {\n    const newDate = new Date(date);\n    return String(newDate.toLocaleString('en-US'));\n  };\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const handleDeleteUser = (userId) => {\n    dispatch(deleteAnnouncement(userId));\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - announcementList.length) : 0;\n\n  const filteredUsers = applySortFilter(announcementList, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  // ****************\n  const countViews = (id) => notificationList.filter((an) => an.id === id && an.status_viewed === 1).length;\n  const countNotifications = (id) => notificationList.filter((an) => an.id === id).length;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  return (\n    <Page title=\"Announcements | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Announcements\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Announcements' }]}\n          action={\n            <Button\n              variant=\"contained\"\n              component={RouterLink}\n              to={PATH_DASHBOARD.general.newAnnouncement}\n              startIcon={<Icon icon={plusFill} />}\n            >\n              New Announcement\n            </Button>\n          }\n        />\n\n        <Card>\n          <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <UserListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={announcementList.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    const isItemSelected = selected.indexOf(row.name) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={row.id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, row.name)} />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            {/* <Avatar src=\"avatar_1.jpg\" /> */}\n                            <RecordVoiceOverRoundedIcon color=\"primary\" sx={{ fontSize: 40 }} />\n                            <Typography variant=\"subtitle2\" noWrap>\n                              <b>{row.title} </b>\n                              <p>{getStringFromDescription(row.description)}</p>\n                            </Typography>\n                          </Stack>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          {batchesList.find((batch) => batch.id === row.batch_id)?.batch}\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          {countViews(row.id)}/{countNotifications(row.id)}\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <p>{getDate(row.createdAt)}</p>\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isUserNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={announcementList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\ViewStudentAttendance.js",["1323","1324","1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335"],"// // material\n// import { Container, Grid, Stack } from '@mui/material';\n// // hooks\n// import useAuth from '../../hooks/useAuth';\n// import useSettings from '../../hooks/useSettings';\n// // components\n// import Page from '../../components/Page';\n// import { PresentAttendance, AbsentAttendance } from '../../components/_dashboard/general-app';\n\n// // ----------------------------------------------------------------------\n\n// export default function GeneralApp() {\n//   const { themeStretch } = useSettings();\n//   const { user } = useAuth();\n\n//   return (\n//     <Page title=\"General: App | SIBAU FYPMS\">\n//       <Container maxWidth={themeStretch ? false : 'xl'}>\n//         <Grid container spacing={3}>\n//           <Grid item xs={12} md={4}>\n//             <PresentAttendance />\n//           </Grid>\n\n//           <Grid item xs={12} md={4}>\n//             <AbsentAttendance />\n//           </Grid>\n\n//           <Grid item xs={12} lg={8}>\n//             <StudentAttendanceTable />\n//           </Grid>\n//         </Grid>\n//       </Container>\n//     </Page>\n//   );\n// }\n\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport React, { useState, useEffect } from 'react';\n\nimport { useTheme, styled, alpha } from '@mui/material/styles';\n// material\n// import { useTheme } from '@mui/material/styles'; // important\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  CardContent,\n  Grid,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\nimport { PresentAttendance, AbsentAttendance } from '../../components/_dashboard/general-app';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getAttendanceByUserId } from '../../redux/slices/user';\nimport useAuth from '../../hooks/useAuth';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/list';\nimport AnnouncementMoreMenu from '../../components/_dashboard/user/list/AnnouncementMoreMenu';\n// ----------------------------------------------------------------------\nconst TABLE_HEAD = [\n  { id: 'Date', label: 'Date', alignRight: false },\n  { id: 'Attendance', label: 'Attendance', alignRight: false }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  console.log('that', array);\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => String(_user.createdAt).toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\nexport default function ViewAllAttendance() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const { userAttendance } = useSelector((state) => state.user);\n  const { batchesList } = useSelector((state) => state.batch);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => {\n    dispatch(getAttendanceByUserId(user.id));\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = userAttendance.map((n) => n.createdAt);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n  const getDate = (date) => {\n    const newDate = new Date(date);\n    return String(newDate.toLocaleString('en-US'));\n  };\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userAttendance.length) : 0;\n\n  const filteredUsers = applySortFilter(userAttendance, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  // ****************\n  const countPresent = () => userAttendance?.filter((an) => an.status_is_present === 1).length || 0;\n  const countAbsents = () => userAttendance?.filter((an) => an.status_is_present === 0).length || 0;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  return (\n    <Page title=\"View Attendance | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        <HeaderBreadcrumbs\n          heading=\"View Attendance\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Attendance' }]}\n        />\n        <div>\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={4}>\n              <PresentAttendance attendance={countPresent()} />\n            </Grid>\n            <Grid item xs={12} md={4}>\n              <AbsentAttendance attendance={countAbsents()} />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} md={8} my={4}>\n            <Card>\n              <UserListToolbar\n                numSelected={selected.length}\n                filterName={filterName}\n                onFilterName={handleFilterByName}\n              />\n\n              <Scrollbar>\n                <TableContainer sx={{ minWidth: 400 }}>\n                  <Table>\n                    <UserListHead\n                      order={order}\n                      orderBy={orderBy}\n                      headLabel={TABLE_HEAD}\n                      rowCount={userAttendance.length}\n                      numSelected={selected.length}\n                      onRequestSort={handleRequestSort}\n                      onSelectAllClick={handleSelectAllClick}\n                    />\n                    <TableBody>\n                      {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                        const isItemSelected = selected.indexOf(row.createdAt) !== -1;\n\n                        return (\n                          <TableRow\n                            hover\n                            key={row.id}\n                            tabIndex={-1}\n                            role=\"checkbox\"\n                            selected={isItemSelected}\n                            aria-checked={isItemSelected}\n                          >\n                            <TableCell padding=\"checkbox\">\n                              <Checkbox\n                                checked={isItemSelected}\n                                onChange={(event) => handleClick(event, row.createdAt)}\n                              />\n                            </TableCell>\n                            <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                                <Typography variant=\"subtitle2\" noWrap>\n                                  <b>{getDate(row.createdAt)} </b>\n                                </Typography>\n                              </Stack>\n                            </TableCell>\n                            <TableCell align=\"left\">\n                              <Label\n                                variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                                color={row.status_is_present === 0 ? 'error' : 'success'}\n                              >\n                                {row.status_is_present === 1 ? 'Present' : 'Absent'}\n                              </Label>\n                            </TableCell>\n                          </TableRow>\n                        );\n                      })}\n                      {emptyRows > 0 && (\n                        <TableRow style={{ height: 53 * emptyRows }}>\n                          <TableCell colSpan={6} />\n                        </TableRow>\n                      )}\n                    </TableBody>\n                    {isUserNotFound && (\n                      <TableBody>\n                        <TableRow>\n                          <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                            <SearchNotFound searchQuery={filterName} />\n                          </TableCell>\n                        </TableRow>\n                      </TableBody>\n                    )}\n                  </Table>\n                </TableContainer>\n              </Scrollbar>\n\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={userAttendance.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n              />\n            </Card>\n          </Grid>\n        </div>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\ViewAllAttendance.js",["1336","1337","1338","1339","1340","1341","1342","1343","1344"],"import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport React, { useState, useEffect } from 'react';\n\nimport { useTheme, styled, alpha } from '@mui/material/styles';\n// material\n// import { useTheme } from '@mui/material/styles'; // important\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TextField,\n  Toolbar,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { showAllUsersAttendanceByBatch, showAllUsersAttendance } from '../../redux/slices/user';\nimport { getBatchesList } from '../../redux/slices/batch';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/list';\nimport AnnouncementMoreMenu from '../../components/_dashboard/user/list/AnnouncementMoreMenu';\n// ----------------------------------------------------------------------\nconst TABLE_HEAD = [\n  { id: 'Name', label: 'Name', alignRight: false },\n  { id: 'Presents', label: 'Presents', alignRight: false },\n  { id: 'Absents', label: 'Absents', alignRight: false },\n  { id: 'Batch', label: 'Batch', alignRight: false }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  console.log('that', array);\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\nexport default function ViewAllAttendance() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { UsersAttendance } = useSelector((state) => state.user);\n  const { batchesList } = useSelector((state) => state.batch);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => {\n    dispatch(showAllUsersAttendance());\n    dispatch(getBatchesList());\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = UsersAttendance.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - UsersAttendance.length) : 0;\n\n  const filteredUsers = applySortFilter(UsersAttendance, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n  const [batchState, setBatchState] = useState('All');\n  const RootStyle = styled(Toolbar)(({ theme }) => ({\n    height: 96,\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: theme.spacing(0, 1, 0, 3)\n  }));\n  // ****************\n  const batchSelectHandler = (e) => {\n    setBatchState(e.target.value);\n    if (e.target.value === 'All') {\n      dispatch(showAllUsersAttendance());\n    } else {\n      dispatch(showAllUsersAttendanceByBatch(batchesList?.find((batch) => batch.batch === e.target.value)?.id));\n    }\n  };\n  // ****************\n  const countPresent = (attendance) => attendance?.filter((an) => an.status_is_present === 1).length || 0;\n  const countAbsents = (attendance) => attendance?.filter((an) => an.status_is_present === 0).length || 0;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  return (\n    <Page title=\"View Attendance | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"View Attendance\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Attendance' }]}\n        />\n\n        <Card>\n          <RootStyle>\n            <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\n            <TextField\n              select\n              style={{ width: '250px' }}\n              label=\"Select Batch\"\n              placeholder=\"Select Batch\"\n              value={batchState}\n              SelectProps={{ native: true }}\n              onChange={(e) => batchSelectHandler(e)}\n            >\n              <option>All</option>\n              {batchesList.map((row) => (\n                <option>{row.batch}</option>\n              ))}\n            </TextField>\n          </RootStyle>\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <UserListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={UsersAttendance.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    const isItemSelected = selected.indexOf(row.name) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={row.id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, row.name)} />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            <Avatar alt={row.name} src={row.imgUrl} />\n                            <Typography variant=\"subtitle2\" noWrap>\n                              <b>{row.name} </b>\n                            </Typography>\n                          </Stack>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <Label variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'} color=\"success\">\n                            {countPresent(row.student.attendances)}\n                          </Label>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <Label variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'} color=\"error\">\n                            {countAbsents(row.student.attendances)}\n                          </Label>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          {batchesList.find((batch) => batch.id === row.student.batch_id)?.batch}\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isUserNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={UsersAttendance.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\SupervisorSpecialization.js",["1345","1346","1347","1348","1349","1350","1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365","1366","1367","1368","1369","1370"],"import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport React, { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { useTheme, styled, alpha } from '@mui/material/styles';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport EditIcon from '@mui/icons-material/Edit';\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\nimport Divider from '@mui/material/Divider';\nimport AddIcon from '@mui/icons-material/Add';\nimport ArchiveIcon from '@mui/icons-material/Archive';\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\n\nimport RecordVoiceOverRoundedIcon from '@mui/icons-material/RecordVoiceOverRounded';\n// material\n// import { useTheme } from '@mui/material/styles'; // important\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getInstructorList } from '../../redux/slices/instructor';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/list';\nimport AnnouncementMoreMenu from '../../components/_dashboard/user/list/AnnouncementMoreMenu';\n// ----------------------------------------------------------------------\nconst TABLE_HEAD = [\n  { id: 'Name', label: 'Name', alignRight: false },\n  { id: 'Email', label: 'Email', alignRight: false },\n  { id: 'Specialization', label: 'Specialization', alignRight: false },\n  { id: 'OfficeAddress', label: 'Office Address', alignRight: false }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  console.log('that', array);\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\nexport default function SupervisorSpecialization() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { userList } = useSelector((state) => state.instructor);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => {\n    dispatch(getInstructorList());\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const getStringFromDescription = (description) => {\n    const indexStart = String(description).indexOf('<p>') + 3;\n    const indexEnd = String(description).indexOf('</p>');\n    return String(description).substring(indexStart, indexEnd);\n  };\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = userList.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n  const getDate = (date) => {\n    const newDate = new Date(date);\n    return String(newDate.toLocaleString('en-US'));\n  };\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userList.length) : 0;\n\n  const filteredUsers = applySortFilter(userList, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  return (\n    <Page title=\"Supervisor Specialization | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Supervisor Specialization\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Supervisor Specialization' }]}\n        />\n\n        <Card>\n          <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\n\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <UserListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={userList.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    const isItemSelected = selected.indexOf(row.name) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={row.id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, row.name)} />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            <Typography variant=\"subtitle2\" noWrap>\n                              <b>{row.user.name} </b>\n                            </Typography>\n                          </Stack>\n                        </TableCell>\n                        <TableCell align=\"left\">{row.user.email}</TableCell>\n                        <TableCell align=\"left\">{row.specialization}</TableCell>\n                        <TableCell align=\"left\">{row.office}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isUserNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={userList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\ReportsList.js",["1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381"],"import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport React, { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { useTheme, styled, alpha } from '@mui/material/styles';\nimport { Assignment } from '@mui/icons-material';\n\nimport RecordVoiceOverRoundedIcon from '@mui/icons-material/RecordVoiceOverRounded';\n// material\n// import { useTheme } from '@mui/material/styles'; // important\nimport {\n  Card,\n  Table,\n  Toolbar,\n  Stack,\n  Avatar,\n  TextField,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getAssignedWorkList, deleteAssignedWork, getAssignedWorkByBatch } from '../../redux/slices/assignedWork';\nimport { getReportTypeList } from '../../redux/slices/reportType';\nimport { getBatchesList } from '../../redux/slices/batch';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/list';\nimport ReportMoreMenu from '../../components/_dashboard/user/list/ReportMoreMenu'; //\n// ----------------------------------------------------------------------\nconst TABLE_HEAD = [\n  { id: 'title', label: 'Title', alignRight: false },\n  { id: 'ReportType', label: 'Report Type', alignRight: false },\n  { id: 'Batch', label: 'Batch', alignRight: false },\n  { id: 'deadLine', label: 'Deadline', alignRight: false },\n  { id: 'points', label: 'Points', alignRight: false },\n  { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  console.log('that', array);\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.title.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function ReportsList() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { assignedWorkList } = useSelector((state) => state.assignedWork);\n  const { reportTypeList } = useSelector((state) => state.reportType);\n  const { batchesList } = useSelector((state) => state.batch);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => {\n    dispatch(getAssignedWorkList());\n    dispatch(getBatchesList());\n    dispatch(getReportTypeList());\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = assignedWorkList.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const handleDeleteUser = (userId) => {\n    dispatch(deleteAssignedWork(userId));\n  };\n  const getDate = (date) => {\n    const newDate = new Date(date);\n    return String(newDate.toLocaleString('en-US'));\n  };\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - assignedWorkList.length) : 0;\n\n  const filteredUsers = applySortFilter(assignedWorkList, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n  const [batchState, setBatchState] = useState('All');\n  const RootStyle = styled(Toolbar)(({ theme }) => ({\n    height: 96,\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: theme.spacing(0, 1, 0, 3)\n  }));\n  // ****************\n  const batchSelectHandler = (e) => {\n    setBatchState(e.target.value);\n    if (e.target.value === 'All') {\n      dispatch(getAssignedWorkList());\n    } else {\n      dispatch(getAssignedWorkByBatch(batchesList?.find((batch) => batch.batch === e.target.value)?.id));\n    }\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  return (\n    <Page title=\"Reports List | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Reports List\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Reports' }]}\n          action={\n            <Button\n              variant=\"contained\"\n              component={RouterLink}\n              to={PATH_DASHBOARD.general.createReport}\n              startIcon={<Icon icon={plusFill} />}\n            >\n              New Report\n            </Button>\n          }\n        />\n\n        <Card>\n          <RootStyle>\n            <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\n            <TextField\n              select\n              style={{ width: '250px' }}\n              label=\"Select Batch\"\n              placeholder=\"Select Batch\"\n              value={batchState}\n              SelectProps={{ native: true }}\n              onChange={(e) => batchSelectHandler(e)}\n            >\n              <option>All</option>\n              {batchesList.map((row) => (\n                <option>{row.batch}</option>\n              ))}\n            </TextField>\n          </RootStyle>\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <UserListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={assignedWorkList.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    const isItemSelected = selected.indexOf(row.title) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={row.id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, row.title)} />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            {/* <Avatar src=\"avatar_1.jpg\" /> */}\n                            <Assignment color=\"primary\" />\n                            <Typography variant=\"subtitle2\" noWrap>\n                              <b>{row.title}</b>\n                            </Typography>\n                          </Stack>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          {reportTypeList.find((report) => report.id === row.report_type_id)?.report_type || ''}\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          {batchesList.find((batch) => batch.id === row.batch_id)?.batch || ''}\n                        </TableCell>\n                        <TableCell align=\"left\">{getDate(row.deadLine)}</TableCell>\n                        <TableCell align=\"left\">{row.total_points}</TableCell>\n                        <TableCell align=\"right\">\n                          <ReportMoreMenu onDelete={() => handleDeleteUser(row.id)} userName={row} />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isUserNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={assignedWorkList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\UserProfilePage.js",["1382","1383"],"import { useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@mui/material';\n// redux\nimport { SnackbarProvider } from 'notistack';\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getInstructorList } from '../../redux/slices/instructor';\nimport useAuth from '../../hooks/useAuth';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport UserNewForm from '../../components/_dashboard/user/UserNewForm';\n\n// ----------------------------------------------------------------------\n\nexport default function UserProfilePage() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const { userList } = useSelector((state) => state.instructor);\n  const isEdit = true;\n  const currentUser = userList.find((u) => u.id === user.id);\n\n  useEffect(() => {\n    dispatch(getInstructorList());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"Supervisor Profile | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Supervisor Profile\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: !isEdit ? 'Supervisor Profile' : name }]}\n        />\n        <SnackbarProvider>\n          <UserNewForm isEdit={isEdit} currentUser={currentUser} />\n        </SnackbarProvider>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\MeetingList.js",["1384","1385","1386","1387","1388","1389","1390","1391","1392","1393","1394"],"import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\n// import { sentenceCase } from 'change-case';\nimport React, { useState, useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink, useParams, useLocation } from 'react-router-dom';\n\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { useTheme, styled, alpha } from '@mui/material/styles';\n\n// material\n// import { useTheme } from '@mui/material/styles'; // important\nimport {\n  Card,\n  Table,\n  Toolbar,\n  Stack,\n  Avatar,\n  TextField,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getMeetingListByGroupId } from '../../redux/slices/meetings';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { UserListHead, UserListToolbar } from '../../components/_dashboard/user/list';\n// ----------------------------------------------------------------------\nconst TABLE_HEAD = [\n  { id: 'meetingTitle', label: 'Agenda', alignRight: false },\n  { id: 'dueDate', label: 'Due Date', alignRight: false },\n  { id: 'postedOn', label: 'Posted On', alignRight: false }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  console.log('that', array);\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.agenda.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function MeetingList() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { name } = useParams();\n  const { meetingsList } = useSelector((state) => state.meetings);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => {\n    console.log(name);\n    dispatch(getMeetingListByGroupId(name));\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = meetingsList.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const getDate = (date) => {\n    const newDate = new Date(date);\n    return String(newDate.toLocaleString('en-US'));\n  };\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - meetingsList.length) : 0;\n\n  const filteredUsers = applySortFilter(meetingsList, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n  const [batchState, setBatchState] = useState('All');\n  const RootStyle = styled(Toolbar)(({ theme }) => ({\n    height: 96,\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: theme.spacing(0, 1, 0, 3)\n  }));\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  return (\n    <Page title=\"Meetin List | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Meetings List\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Meetings List' }]}\n          action={\n            <Button\n              variant=\"contained\"\n              component={RouterLink}\n              // ${PATH_DASHBOARD.app.root}/${paramCase(String(userName.id))}/meeting-list`\n              to={`${PATH_DASHBOARD.app.root}/${paramCase(String(name))}/create-meeting`}\n              startIcon={<Icon icon={plusFill} />}\n            >\n              New Meeting\n            </Button>\n          }\n        />\n\n        <Card>\n          <RootStyle>\n            <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\n          </RootStyle>\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <UserListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={meetingsList.length}\n                  numSelected={selected.length}\n                  onRequestSort={handleRequestSort}\n                  onSelectAllClick={handleSelectAllClick}\n                />\n                <TableBody>\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                    const isItemSelected = selected.indexOf(row.agenda) !== -1;\n\n                    return (\n                      <TableRow\n                        hover\n                        key={row.id}\n                        tabIndex={-1}\n                        role=\"checkbox\"\n                        selected={isItemSelected}\n                        aria-checked={isItemSelected}\n                      >\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, row.agenda)} />\n                        </TableCell>\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                            <Typography variant=\"subtitle2\" noWrap>\n                              <b>{row.agenda}</b>\n                            </Typography>\n                          </Stack>\n                        </TableCell>\n                        <TableCell align=\"left\">{getDate(row.date_and_time)}</TableCell>\n                        <TableCell align=\"left\">{getDate(row.createdAt)}</TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isUserNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 25]}\n            component=\"div\"\n            count={meetingsList.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\ReportsSubmitted.js",["1395","1396","1397","1398","1399","1400","1401","1402","1403","1404","1405","1406","1407","1408","1409"],"import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\n\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport { useTheme, styled, alpha } from '@mui/material/styles';\nimport { formatDistance } from 'date-fns';\n\nimport RecordVoiceOverRoundedIcon from '@mui/icons-material/RecordVoiceOverRounded';\n// material\n// import { useTheme } from '@mui/material/styles'; // important\n\nimport { Assignment, CloudDownload } from '@mui/icons-material';\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n// redux\nimport download from 'downloadjs';\nimport { useDispatch, useSelector } from '../../redux/store';\nimport {\n  getSubmittedFilesByAssignedWork,\n  getSubmittedFilesByAssignedWorkId\n} from '../../redux/slices/groupSubmittedFiles';\nimport { getGroupList } from '../../redux/slices/group';\nimport axios from '../../utils/axios';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/list';\nimport ReportMoreMenu from '../../components/_dashboard/user/list/ReportMoreMenu'; //\n// ----------------------------------------------------------------------\nconst TABLE_HEAD = [\n  { id: 'ProjectTitle', label: 'Project Title', alignRight: false },\n  // { id: 'isVerified', label: 'Verified', alignRight: false },\n  { id: 'SubmittedOn', label: 'Submitted On', alignRight: false },\n  { id: 'Deadline', label: 'Deadline', alignRight: false },\n\n  { id: 'Status', label: 'Status', alignRight: false },\n  { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  console.log('that', array);\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function ReportsSubmitted() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const { name } = useParams();\n  const dispatch = useDispatch();\n  const { submittedFiles, reportData } = useSelector((state) => state.groupSubmittedFiles);\n  const { groupList } = useSelector((state) => state.group);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => {\n    dispatch(getSubmittedFilesByAssignedWork(name));\n    dispatch(getSubmittedFilesByAssignedWorkId(name));\n    dispatch(getGroupList());\n  }, [dispatch]);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = submittedFiles.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - submittedFiles.length) : 0;\n\n  const filteredUsers = applySortFilter(submittedFiles, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  // ****************\n  const getDate = (date) => {\n    const newDate = new Date(date);\n    return String(newDate.toLocaleString('en-US'));\n  };\n  const downloadFile = async (files) => {\n    const method = 'GET';\n    const url = `http://localhost:8080/File/download/${files[0].file_name}`;\n    axios\n      .request({\n        url,\n        method,\n        responseType: 'blob'\n      })\n      .then(({ data }) => {\n        const downloadUrl = window.URL.createObjectURL(new Blob([data]));\n        const link = document.createElement('a');\n        link.href = downloadUrl;\n        link.setAttribute('download', files[0].file_name);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n      });\n  };\n  const getStatus = (due, submittedOn) => {\n    let result = '';\n    if (new Date(due) > new Date(submittedOn)) {\n      result = String('submitted ').concat(String(formatDistance(new Date(due), new Date(submittedOn))), ' before');\n    } else {\n      result = String('submitted ').concat(String(formatDistance(new Date(due), new Date(submittedOn))), ' late');\n    }\n\n    return result;\n  };\n  const getColor = (due, submittedOn) => {\n    let result = '';\n    if (new Date(due) > new Date(submittedOn)) {\n      result = 'success';\n    } else {\n      result = 'error';\n    }\n\n    return result;\n  };\n  return (\n    <Page title=\"Submitted Abstracts | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <div className=\"mb-3\">\n          <h3>Submitted Abstracts </h3>\n        </div>\n        <div className=\"mt-3\">\n          <Card>\n            <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\n\n            <Scrollbar>\n              <TableContainer sx={{ minWidth: 800 }}>\n                <Table>\n                  <UserListHead\n                    order={order}\n                    orderBy={orderBy}\n                    headLabel={TABLE_HEAD}\n                    rowCount={submittedFiles.length}\n                    numSelected={selected.length}\n                    onRequestSort={handleRequestSort}\n                    onSelectAllClick={handleSelectAllClick}\n                  />\n                  <TableBody>\n                    {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                      const isItemSelected = selected.indexOf(row.id) !== -1;\n\n                      return (\n                        <TableRow\n                          hover\n                          key={row.id}\n                          tabIndex={-1}\n                          role=\"checkbox\"\n                          selected={isItemSelected}\n                          aria-checked={isItemSelected}\n                        >\n                          <TableCell padding=\"checkbox\">\n                            <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, row.name)} />\n                          </TableCell>\n                          <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                              {/* <Avatar src=\"avatar_1.jpg\" /> */}\n                              <Assignment color=\"primary\" />\n                              <Typography variant=\"subtitle2\" noWrap>\n                                <b>{groupList.find((group) => group.id === row.group_id)?.project_title || ''}</b>\n                              </Typography>\n                            </Stack>\n                          </TableCell>\n\n                          <TableCell align=\"left\">\n                            <p>{getDate(row.submission_date_time ? row.submission_date_time : null)}</p>\n                          </TableCell>\n\n                          <TableCell align=\"left\">\n                            <p>{getDate(reportData.assigned_work?.deadLine || null)}</p>\n                          </TableCell>\n                          <TableCell align=\"left\">\n                            <Label\n                              variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                              color={getColor(\n                                reportData.assigned_work?.deadLine || null,\n                                row.submission_date_time ? row.submission_date_time : null\n                              )}\n                            >\n                              {getStatus(\n                                reportData.assigned_work?.deadLine || null,\n                                row.submission_date_time ? row.submission_date_time : null\n                              )}\n                            </Label>\n                          </TableCell>\n                          <TableCell align=\"left\">\n                            <Button onClick={() => downloadFile(row.files)}>\n                              <CloudDownload color=\"primary\" />\n                            </Button>\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                    {emptyRows > 0 && (\n                      <TableRow style={{ height: 53 * emptyRows }}>\n                        <TableCell colSpan={6} />\n                      </TableRow>\n                    )}\n                  </TableBody>\n                  {isUserNotFound && (\n                    <TableBody>\n                      <TableRow>\n                        <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                          <SearchNotFound searchQuery={filterName} />\n                        </TableCell>\n                      </TableRow>\n                    </TableBody>\n                  )}\n                </Table>\n              </TableContainer>\n            </Scrollbar>\n\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={submittedFiles.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          </Card>\n        </div>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\StudentProfilePage.js",["1410","1411"],"import { useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@mui/material';\n// redux\nimport { SnackbarProvider } from 'notistack';\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getUserList } from '../../redux/slices/user';\nimport useAuth from '../../hooks/useAuth';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport StudentNewForm from '../../components/_dashboard/user/StudentNewForm';\n\n// ----------------------------------------------------------------------\n\nexport default function StudentProfilePage() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const { userList } = useSelector((state) => state.user);\n  const isEdit = true;\n  const currentUser = userList.find((u) => u.id === user.id);\n\n  useEffect(() => {\n    dispatch(getUserList());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"Student Profile | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Student Profile\"\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: !isEdit ? 'Student Profile' : name }]}\n        />\n        <SnackbarProvider>\n          <StudentNewForm isEdit={isEdit} currentUser={currentUser} />\n        </SnackbarProvider>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\AnnouncementsCreate.js",["1412","1413","1414"],"// new version of annoucements\n\nimport { useEffect } from 'react';\nimport { paramCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// material\nimport { Container } from '@mui/material';\n// redux\nimport { SnackbarProvider } from 'notistack';\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getProducts } from '../../redux/slices/product';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport AnnouncementsNewForm from '../../components/_dashboard/user/AnnouncementsNewForm';\n\n// ----------------------------------------------------------------------\n\nexport default function AnnouncementsCreate() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n  const { name } = useParams();\n  const { userList } = useSelector((state) => state.user);\n  const isEdit = pathname.includes('edit');\n  const currentUser = userList.find((user) => paramCase(user.name) === name);\n  return (\n    <Page title=\"Announcements | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Create a New Announcement' : 'Edit Announcement'}\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'Announcements', href: PATH_DASHBOARD.general.announcements },\n            { name: !isEdit ? 'New Announcement' : name }\n          ]}\n        />\n        <SnackbarProvider>\n          <AnnouncementsNewForm isEdit={isEdit} currentUser={currentUser} />\n        </SnackbarProvider>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\UserCards.js",["1415","1416"],"import { useEffect } from 'react';\n// material\nimport { Container, Grid, Skeleton } from '@mui/material';\n// redux\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getUsers } from '../../redux/slices/user';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\n\n// ----------------------------------------------------------------------\n\nconst SkeletonLoad = (\n  <>\n    {[...Array(8)].map((_, index) => (\n      <Grid item xs={12} sm={6} md={4} key={index}>\n        <Skeleton variant=\"rectangular\" width=\"100%\" sx={{ paddingTop: '115%', borderRadius: 2 }} />\n      </Grid>\n    ))}\n  </>\n);\n\nexport default function UserCards() {\n  const { themeStretch } = useSettings();\n  const dispatch = useDispatch();\n  const { users } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n\n  return (\n    <Page title=\"User: Cards | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"User Cards\"\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'User', href: PATH_DASHBOARD.user.root },\n            { name: 'Cards' }\n          ]}\n        />\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\StudentCreate.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\dashboard\\GroupsUnderSupervisionProgress.js",["1417","1418","1419","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1432"],"import { filter, isNull } from 'lodash';\nimport React, { useState, useEffect } from 'react';\n\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useTheme, styled, alpha } from '@mui/material/styles';\nimport { formatDistance } from 'date-fns';\n// material\n// import { useTheme } from '@mui/material/styles'; // important\n\nimport { Assignment, CloudDownload } from '@mui/icons-material';\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  CardHeader,\n  Divider,\n  FormControl,\n  CardContent,\n  Grid,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination\n} from '@mui/material';\n// redux\nimport download from 'downloadjs';\nimport { useDispatch, useSelector } from '../../redux/store';\nimport { getSubmittedFilesByGroup, deleteSubmittedFiles } from '../../redux/slices/groupSubmittedFiles';\nimport { getGroup, getGroupAttendance } from '../../redux/slices/group';\nimport axios from '../../utils/axios';\n\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport Label from '../../components/Label';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/list';\nimport ReportMoreMenu from '../../components/_dashboard/user/list/ReportMoreMenu'; //\n\n// ----------------------------------------------------------------------\nconst TABLE_HEAD = [\n  { id: 'ReportType', label: 'Report Type', alignRight: false },\n  // { id: 'isVerified', label: 'Verified', alignRight: false },\n  { id: 'SubmittedOn', label: 'Submitted On', alignRight: false },\n  { id: 'Deadline', label: 'Deadline', alignRight: false },\n\n  { id: 'Status', label: 'Status', alignRight: false },\n  { id: '' }\n];\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1)\n}));\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n  console.log('that', array);\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function GroupsUnderSupervisionProgress() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n  const { name } = useParams();\n  const dispatch = useDispatch();\n  const { submittedFiles } = useSelector((state) => state.groupSubmittedFiles);\n  const { group, groupAttendance } = useSelector((state) => state.group);\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  useEffect(() => {\n    dispatch(getSubmittedFilesByGroup(name));\n    dispatch(getGroup(name));\n    dispatch(getGroupAttendance(name));\n  }, [dispatch]);\n  console.log(name);\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = submittedFiles.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const handleDeleteUser = (userId) => {\n    dispatch(deleteSubmittedFiles(userId));\n  };\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - submittedFiles.length) : 0;\n\n  const filteredUsers = applySortFilter(submittedFiles, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  // ****************\n  const downloadFile = async (files) => {\n    const method = 'GET';\n    const url = `http://localhost:8080/File/download/${files[0].file_name}`;\n    axios\n      .request({\n        url,\n        method,\n        responseType: 'blob'\n      })\n      .then(({ data }) => {\n        const downloadUrl = window.URL.createObjectURL(new Blob([data]));\n        const link = document.createElement('a');\n        link.href = downloadUrl;\n        link.setAttribute('download', files[0].file_name);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n      });\n  };\n  const getStatus = (due, submittedOn) => {\n    let result = '';\n    if (new Date(due) > new Date(submittedOn)) {\n      result = String('submitted ').concat(String(formatDistance(new Date(due), new Date(submittedOn))), ' before');\n    } else {\n      result = String('submitted ').concat(String(formatDistance(new Date(due), new Date(submittedOn))), ' late');\n    }\n\n    return result;\n  };\n  const getColor = (due, submittedOn) => {\n    let result = '';\n    if (new Date(due) > new Date(submittedOn)) {\n      result = 'success';\n    } else {\n      result = 'error';\n    }\n\n    return result;\n  };\n  const getDate = (date) => {\n    const newDate = new Date(date);\n    return String(newDate.toLocaleString('en-US'));\n  };\n  const getAbsents = (attendance) => {\n    console.log(attendance);\n    const result = attendance.length !== 0 ? attendance.filter((att) => att.status_is_present === 0).length || 0 : 0;\n    return result;\n  };\n  return (\n    <Page title=\"Groups Under Supervision Progress | SIBAU FYPMS\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <div className=\"mb-3\">\n          <h3>Group Progress </h3>\n        </div>\n        <div className=\"mt-3\">\n          <Grid item xs={12} md={6}>\n            <Stack spacing={3}>\n              <Card sx={{ mb: 3 }}>\n                <CardContent>\n                  <Stack spacing={2}>\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                        {group?.project_title || 'Not Available'}\n                      </Typography>\n                    </Stack>\n                    <Divider />\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                        Name\n                      </Typography>\n                      <Typography variant=\"subtitle2\">Absents</Typography>\n                    </Stack>\n                    <Divider />\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                        {group?.students ? group?.students[0].user.name || 'Not Available' : 'Not Available'}\n                      </Typography>\n                      <Typography variant=\"subtitle2\">\n                        <Label variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'} color=\"error\">\n                          {getAbsents(groupAttendance?.students ? groupAttendance?.students[0]?.attendances || [] : [])}\n                        </Label>\n                      </Typography>\n                    </Stack>\n\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                        {group?.students ? group?.students[1].user.name || 'Not Available' : 'Not Available'}\n                      </Typography>\n                      <Typography variant=\"subtitle2\">\n                        <Label variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'} color=\"error\">\n                          {getAbsents(groupAttendance?.students ? groupAttendance?.students[1]?.attendances || [] : [])}\n                        </Label>\n                      </Typography>\n                    </Stack>\n                    {group?.students?.length === 3 ? (\n                      <Stack direction=\"row\" justifyContent=\"space-between\">\n                        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                          {group?.students ? group?.students[2]?.user.name || 'Not Available' : 'Not Available'}\n                        </Typography>\n                        <Typography variant=\"subtitle2\">\n                          <Label variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'} color=\"error\">\n                            {getAbsents(\n                              groupAttendance?.students ? groupAttendance?.students[2]?.attendances || [] : []\n                            )}\n                          </Label>\n                        </Typography>\n                      </Stack>\n                    ) : null}\n                  </Stack>\n                </CardContent>\n              </Card>\n            </Stack>\n          </Grid>\n          <Card>\n            {/* <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} /> */}\n\n            {/* <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <FormControl fullWidth>\n                  <LabelStyle>Group Info:</LabelStyle>\n                  <LabelStyle>Project title: {group?.project_title || 'Not Available'}</LabelStyle>\n                  <LabelStyle>\n                    Member 1: {group?.students ? group.students[0].user.name || 'Not Available' : 'Not Available'}\n                  </LabelStyle>\n                  <LabelStyle>\n                    Member 2: {group?.students ? group.students[1].user.name || 'Not Available' : 'Not Available'}\n                  </LabelStyle>\n                  <LabelStyle>\n                    Member 3: {group?.students ? group.students[2]?.user.name || 'Not Available' : 'Not Available'}\n                  </LabelStyle> */}\n\n            {/* <LabelStyle>Project title: </LabelStyle>\n                  <LabelStyle>Member 1:</LabelStyle>\n                  <LabelStyle>Member 2:</LabelStyle>\n                  <LabelStyle>Member 3:</LabelStyle> */}\n            {/* </FormControl>\n              </Stack> */}\n            {/* </Card> */}\n\n            <Scrollbar>\n              <TableContainer sx={{ minWidth: 800 }}>\n                <Table>\n                  <UserListHead\n                    order={order}\n                    orderBy={orderBy}\n                    headLabel={TABLE_HEAD}\n                    rowCount={submittedFiles.length}\n                    numSelected={selected.length}\n                    onRequestSort={handleRequestSort}\n                    onSelectAllClick={handleSelectAllClick}\n                  />\n                  <TableBody>\n                    {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                      const isItemSelected = selected.indexOf(row.report_type) !== -1;\n\n                      return (\n                        <TableRow\n                          hover\n                          key={row.id}\n                          tabIndex={-1}\n                          role=\"checkbox\"\n                          selected={isItemSelected}\n                          aria-checked={isItemSelected}\n                        >\n                          <TableCell padding=\"checkbox\">\n                            <Checkbox\n                              checked={isItemSelected}\n                              onChange={(event) => handleClick(event, row.report_type)}\n                            />\n                          </TableCell>\n                          <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                              {/* <Avatar src=\"avatar_1.jpg\" /> */}\n                              <Assignment color=\"primary\" />\n                              <Typography variant=\"subtitle2\" noWrap>\n                                <b>{row.report_type}</b>\n                              </Typography>\n                            </Stack>\n                          </TableCell>\n\n                          <TableCell align=\"left\">\n                            <p>{getDate(row.assigned_work?.group_submitted_file.submission_date_time || null)}</p>\n                          </TableCell>\n\n                          <TableCell align=\"left\">\n                            <p>{getDate(row.assigned_work?.deadLine || null)}</p>\n                          </TableCell>\n                          <TableCell align=\"left\">\n                            <Label\n                              variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                              color={getColor(\n                                row.assigned_work?.deadLine || null,\n                                row.assigned_work?.group_submitted_file.submission_date_time || null\n                              )}\n                            >\n                              {getStatus(\n                                row.assigned_work?.deadLine || null,\n                                row.assigned_work?.group_submitted_file.submission_date_time || null\n                              )}\n                            </Label>\n                          </TableCell>\n                          <TableCell align=\"left\">\n                            <Button onClick={() => downloadFile(row.assigned_work?.group_submitted_file.files)}>\n                              <CloudDownload color=\"primary\" />\n                            </Button>\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                    {emptyRows > 0 && (\n                      <TableRow style={{ height: 53 * emptyRows }}>\n                        <TableCell colSpan={6} />\n                      </TableRow>\n                    )}\n                  </TableBody>\n                  {isUserNotFound && (\n                    <TableBody>\n                      <TableRow>\n                        <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                          <SearchNotFound searchQuery={filterName} />\n                        </TableCell>\n                      </TableRow>\n                    </TableBody>\n                  )}\n                </Table>\n              </TableContainer>\n            </Scrollbar>\n\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={submittedFiles.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          </Card>\n        </div>\n      </Container>\n    </Page>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\authentication\\Register.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\authentication\\ResetPassword.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\authentication\\VerifyCode.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\authentication\\Login.js",["1433"],"import { capitalCase } from 'change-case';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, Card, Stack, Link, Alert, Tooltip, Container, Typography, Button } from '@mui/material';\n// routes\nimport { PATH_AUTH } from '../../routes/paths';\n// hooks\nimport useAuth from '../../hooks/useAuth';\n// layouts\nimport AuthLayout from '../../layouts/AuthLayout';\n// components\nimport Page from '../../components/Page';\nimport { MHidden } from '../../components/@material-extend';\nimport { LoginForm } from '../../components/authentication/login';\nimport AuthFirebaseSocials from '../../components/authentication/AuthFirebaseSocial';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  [theme.breakpoints.up('md')]: {\n    display: 'flex'\n  }\n}));\n\nconst SectionStyle = styled(Card)(({ theme }) => ({\n  width: '100%',\n  maxWidth: 464,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  margin: theme.spacing(2, 0, 2, 2)\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 480,\n  margin: 'auto',\n  display: 'flex',\n  minHeight: '100vh',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(12, 0)\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function Login() {\n  const { method, login } = useAuth();\n\n  const handleLoginAuth0 = async () => {\n    try {\n      await login();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <RootStyle title=\"Login | SIBAU FYPMS\">\n      <AuthLayout>\n        Don’t have an account? &nbsp;\n        <Link underline=\"none\" variant=\"subtitle2\" component={RouterLink} to={PATH_AUTH.register}>\n          Get started\n        </Link>\n      </AuthLayout>\n\n      <MHidden width=\"mdDown\">\n        <SectionStyle>\n          <img src=\"/static/illustrations/illustration_login.png\" alt=\"login\" />\n        </SectionStyle>\n      </MHidden>\n\n      <Container maxWidth=\"sm\">\n        <ContentStyle>\n          <Stack direction=\"row\" alignItems=\"center\" sx={{ mb: 5 }}>\n            <Box sx={{ flexGrow: 1 }}>\n              <Typography color=\"primary\" variant=\"h4\" gutterBottom>\n                Welcome Back\n              </Typography>\n              <Typography sx={{ color: 'text.secondary' }}>Login to continue</Typography>\n            </Box>\n\n            <Tooltip title={capitalCase(method)}>\n              <Box component=\"img\" src={`/static/auth/ic_${method}.png`} sx={{ width: 32, height: 32 }} />\n            </Tooltip>\n          </Stack>\n\n          {method === 'firebase' && <AuthFirebaseSocials />}\n\n          {/* <Alert severity=\"info\" sx={{ mb: 3 }}>\n            Use email : <strong>demo@minimals.cc</strong> / password :<strong>&nbsp;demo1234</strong>\n          </Alert> */}\n\n          {method !== 'auth0' ? (\n            <LoginForm />\n          ) : (\n            <Button fullWidth size=\"large\" type=\"submit\" variant=\"contained\" onClick={handleLoginAuth0}>\n              Login\n            </Button>\n          )}\n\n          <MHidden width=\"smUp\">\n            <Typography variant=\"body2\" align=\"center\" sx={{ mt: 3 }}>\n              Don’t have an account?&nbsp;\n              <Link variant=\"subtitle2\" component={RouterLink} to={PATH_AUTH.register}>\n                Get started\n              </Link>\n            </Typography>\n          </MHidden>\n        </ContentStyle>\n      </Container>\n    </RootStyle>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\@material-extend\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\Page.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\AuthLayout.js",["1434"],"import PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Typography } from '@mui/material';\n// components\nimport Logo from '../components/Logo';\n//\nimport { MHidden } from '../components/@material-extend';\n\n// ----------------------------------------------------------------------\nconst ThumbImgStyle = styled('img')(({ theme }) => ({\n  width: 200,\n  height: 100,\n  objectFit: 'cover',\n  borderRadius: theme.shape.borderRadiusSm\n}));\nconst HeaderStyle = styled('header')(({ theme }) => ({\n  top: 0,\n  zIndex: 9,\n  lineHeight: 0,\n  width: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  position: 'absolute',\n  padding: theme.spacing(3),\n  justifyContent: 'space-between',\n  [theme.breakpoints.up('md')]: {\n    alignItems: 'flex-start',\n    padding: theme.spacing(7, 5, 0, 7)\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nAuthLayout.propTypes = {\n  children: PropTypes.node\n};\n\nexport default function AuthLayout({ children }) {\n  return (\n    <HeaderStyle>\n      <RouterLink to=\"/\">\n        <ThumbImgStyle alt=\"SIBAU FYP-MS\" src=\"/static/mock-images/avatars/logo.jpeg\" />\n      </RouterLink>\n\n      <MHidden width=\"smDown\">\n        <Typography\n          variant=\"body2\"\n          sx={{\n            mt: { md: -2 }\n          }}\n        >\n          {children}\n        </Typography>\n      </MHidden>\n    </HeaderStyle>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\hooks\\useAuth.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\routes\\paths.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\ToggleButton.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\ControlLabel.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\LoadingButton.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\ButtonGroup.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Autocomplete.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\AuthFirebaseSocial.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\DashboardSidebar.js",["1435"],"import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Link, Stack, Avatar, Drawer, Tooltip, Typography, CardActionArea } from '@mui/material';\n// hooks\nimport useCollapseDrawer from '../../hooks/useCollapseDrawer';\nimport useAuth from '../../hooks/useAuth';\n// components\nimport Logo from '../../components/Logo';\nimport Scrollbar from '../../components/Scrollbar';\nimport NavSection from '../../components/NavSection';\nimport { PATH_DASHBOARD } from '../../routes/paths';\n//\nimport { MHidden } from '../../components/@material-extend';\nimport sidebarConfig from './SidebarConfig';\nimport { ThumbImgStyle } from './SIBAUFYPMS_Logo';\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 280;\nconst COLLAPSE_WIDTH = 102;\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  [theme.breakpoints.up('lg')]: {\n    flexShrink: 0,\n    transition: theme.transitions.create('width', {\n      duration: theme.transitions.duration.complex\n    })\n  }\n}));\n\nconst AccountStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(2, 2.5),\n  borderRadius: theme.shape.borderRadiusSm,\n  backgroundColor: theme.palette.grey[500_12]\n}));\n\n// ----------------------------------------------------------------------\n\nIconCollapse.propTypes = {\n  onToggleCollapse: PropTypes.func,\n  collapseClick: PropTypes.bool\n};\n\nfunction IconCollapse({ onToggleCollapse, collapseClick }) {\n  return (\n    <Tooltip title=\"Mini Menu\">\n      <CardActionArea\n        onClick={onToggleCollapse}\n        sx={{\n          width: 18,\n          height: 18,\n          display: 'flex',\n          cursor: 'pointer',\n          borderRadius: '50%',\n          alignItems: 'center',\n          color: 'text.primary',\n          justifyContent: 'center',\n          border: 'solid 1px currentColor',\n          ...(collapseClick && {\n            borderWidth: 2\n          })\n        }}\n      >\n        <Box\n          sx={{\n            width: 8,\n            height: 8,\n            borderRadius: '50%',\n            bgcolor: 'currentColor',\n            transition: (theme) => theme.transitions.create('all'),\n            ...(collapseClick && {\n              width: 0,\n              height: 0\n            })\n          }}\n        />\n      </CardActionArea>\n    </Tooltip>\n  );\n}\n\nDashboardSidebar.propTypes = {\n  isOpenSidebar: PropTypes.bool,\n  onCloseSidebar: PropTypes.func\n};\n\nexport default function DashboardSidebar({ isOpenSidebar, onCloseSidebar }) {\n  const { pathname } = useLocation();\n\n  const { isCollapse, collapseClick, collapseHover, onToggleCollapse, onHoverEnter, onHoverLeave } =\n    useCollapseDrawer();\n\n  useEffect(() => {\n    if (isOpenSidebar) {\n      onCloseSidebar();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname]);\n  const { user } = useAuth();\n  const renderContent = (\n    <Scrollbar\n      sx={{\n        height: '100%',\n        '& .simplebar-content': {\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column'\n        }\n      }}\n    >\n      <Stack\n        spacing={3}\n        sx={{\n          px: 2.5,\n          pt: 3,\n          pb: 2,\n          ...(isCollapse && {\n            alignItems: 'center'\n          })\n        }}\n      >\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Box component={RouterLink} to=\"/\" sx={{ display: 'inline-flex' }}>\n            {/* <Logo /> */}\n            {/* SIBAU FYPMS */}\n            {/* <Avatar alt=\"My Avatar\" src=\"/static/mock-images/avatars/logo.jpeg\" sx={{ mx: 'auto', mb: 2 }} /> */}\n\n            <ThumbImgStyle alt=\"SIBAU FYP-MS\" src=\"/static/mock-images/avatars/logo.jpeg\" />\n          </Box>\n\n          <MHidden width=\"lgDown\">\n            {!isCollapse && <IconCollapse onToggleCollapse={onToggleCollapse} collapseClick={collapseClick} />}\n          </MHidden>\n        </Stack>\n\n        {collapseClick ? (\n          <Avatar\n            alt=\"My Avatar\"\n            src={user.imgUrl ? user.imgUrl : '/static/mock-images/avatars/avatar_default.jpg'}\n            sx={{ mx: 'auto', mb: 2 }}\n          />\n        ) : (\n          <Link\n            underline=\"none\"\n            component={RouterLink}\n            to={\n              user.role.role_name === 'Student'\n                ? PATH_DASHBOARD.general.studentProfile\n                : PATH_DASHBOARD.general.userProfile\n            }\n          >\n            <AccountStyle>\n              <Avatar\n                alt=\"My Avatar\"\n                src={user.imgUrl ? user.imgUrl : '/static/mock-images/avatars/avatar_default.jpg'}\n              />\n              <Box sx={{ ml: 2 }}>\n                <Typography variant=\"subtitle2\" sx={{ color: 'text.primary' }}>\n                  {user.name}\n                </Typography>\n                <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                  {user.role.role_name}\n                </Typography>\n              </Box>\n            </AccountStyle>\n          </Link>\n        )}\n      </Stack>\n\n      <NavSection navConfig={sidebarConfig} isShow={!isCollapse} />\n    </Scrollbar>\n  );\n\n  return (\n    <RootStyle\n      sx={{\n        width: {\n          lg: isCollapse ? COLLAPSE_WIDTH : DRAWER_WIDTH\n        },\n        ...(collapseClick && {\n          position: 'absolute'\n        })\n      }}\n    >\n      <MHidden width=\"lgUp\">\n        <Drawer\n          open={isOpenSidebar}\n          onClose={onCloseSidebar}\n          PaperProps={{\n            sx: { width: DRAWER_WIDTH }\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      </MHidden>\n\n      <MHidden width=\"lgDown\">\n        <Drawer\n          open\n          variant=\"persistent\"\n          onMouseEnter={onHoverEnter}\n          onMouseLeave={onHoverLeave}\n          PaperProps={{\n            sx: {\n              width: DRAWER_WIDTH,\n              bgcolor: 'background.default',\n              ...(isCollapse && {\n                width: COLLAPSE_WIDTH\n              }),\n              ...(collapseHover && {\n                borderRight: 0,\n                backdropFilter: 'blur(6px)',\n                WebkitBackdropFilter: 'blur(6px)', // Fix on Mobile\n                boxShadow: (theme) => theme.customShadows.z20,\n                bgcolor: (theme) => alpha(theme.palette.background.default, 0.88)\n              })\n            }\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      </MHidden>\n    </RootStyle>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\DashboardNavbar.js",["1436","1437"],"import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport menu2Fill from '@iconify/icons-eva/menu-2-fill';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Stack, AppBar, Toolbar, IconButton } from '@mui/material';\n\nimport { Store } from '@mui/icons-material';\nimport { SnackbarProvider } from 'notistack';\n// hooks\nimport { Provider } from 'react-redux';\nimport { store } from '../../redux/store';\nimport useCollapseDrawer from '../../hooks/useCollapseDrawer';\n// components\nimport { MHidden } from '../../components/@material-extend';\nimport Searchbar from './Searchbar';\nimport AccountPopover from './AccountPopover';\nimport LanguagePopover from './LanguagePopover';\nimport NotificationsPopover from './NotificationsPopover';\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 280;\nconst COLLAPSE_WIDTH = 102;\n\nconst APPBAR_MOBILE = 64;\nconst APPBAR_DESKTOP = 92;\n\nconst RootStyle = styled(AppBar)(({ theme }) => ({\n  boxShadow: 'none',\n  backdropFilter: 'blur(6px)',\n  WebkitBackdropFilter: 'blur(6px)', // Fix on Mobile\n  backgroundColor: alpha(theme.palette.background.default, 0.72),\n  [theme.breakpoints.up('lg')]: {\n    width: `calc(100% - ${DRAWER_WIDTH + 1}px)`\n  }\n}));\n\nconst ToolbarStyle = styled(Toolbar)(({ theme }) => ({\n  minHeight: APPBAR_MOBILE,\n  [theme.breakpoints.up('lg')]: {\n    minHeight: APPBAR_DESKTOP,\n    padding: theme.spacing(0, 5)\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nDashboardNavbar.propTypes = {\n  onOpenSidebar: PropTypes.func\n};\n\nexport default function DashboardNavbar({ onOpenSidebar }) {\n  const { isCollapse } = useCollapseDrawer();\n\n  return (\n    <RootStyle\n      sx={{\n        ...(isCollapse && {\n          width: { lg: `calc(100% - ${COLLAPSE_WIDTH}px)` }\n        })\n      }}\n    >\n      <ToolbarStyle>\n        <MHidden width=\"lgUp\">\n          <IconButton onClick={onOpenSidebar} sx={{ mr: 1, color: 'text.primary' }}>\n            <Icon icon={menu2Fill} />\n          </IconButton>\n        </MHidden>\n\n        <Searchbar />\n        <Box sx={{ flexGrow: 1 }} />\n\n        <Stack direction=\"row\" alignItems=\"center\" spacing={{ xs: 0.5, sm: 1.5 }}>\n          {/* <LanguagePopover /> */}\n          <Provider store={store}>\n            <NotificationsPopover />\n          </Provider>\n          <SnackbarProvider>\n            <AccountPopover />\n          </SnackbarProvider>\n        </Stack>\n      </ToolbarStyle>\n    </RootStyle>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\hooks\\useCollapseDrawer.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\@material-extend\\MAvatar.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\verify-code\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\register\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\login\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\reset-password\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\SidebarConfig.js",["1438","1439","1440","1441","1442","1443","1444"],"import {\n  GroupAdd,\n  Groups,\n  Assignment,\n  AddTask,\n  Analytics,\n  MenuBook,\n  UploadFile,\n  Home,\n  PersonSearch,\n  Add,\n  PreviewRounded,\n  PanTool,\n  ManageAccounts\n} from '@mui/icons-material';\n\n// routes\nimport useAuth from '../../hooks/useAuth';\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// components\nimport SvgIconStyle from '../../components/SvgIconStyle';\n\n// ----------------------------------------------------------------------\nlet user1;\nfunction Testing() {\n  user1 = useAuth();\n  return <div />;\n}\nconst getIcon = (name) => (\n  <>\n    <SvgIconStyle src={`/static/icons/navbar/${name}.svg`} sx={{ width: '100%', height: '100%' }} />\n  </>\n);\n\nconst ICONS = {\n  user: getIcon('ic_user'),\n  ecommerce: getIcon('ic_ecommerce'),\n\n  analytics: getIcon('ic_analytics'),\n  dashboard: getIcon('ic_dashboard')\n};\nconst sidebarConfig = [\n  // GENERAL\n  // ----------------------------------------------------------------------\n\n  {\n    subheader: 'general',\n    roleQ: ['Student', 'Supervisor', 'Super Admin', 'Coordinator'],\n    items: [\n      {\n        title: 'Home Page',\n        path: PATH_DASHBOARD.general.appPage,\n        roleP: ['Student', 'Supervisor', 'Super Admin', 'Coordinator'],\n        icon: <Home color=\"primary\" />\n      },\n      {\n        title: 'Announcements',\n        path: PATH_DASHBOARD.app.announcements,\n        roleP: ['Coordinator', 'Super Admin'],\n        icon: <MenuBook color=\"primary\" />\n      },\n      {\n        title: 'Reports Management',\n        path: PATH_DASHBOARD.general.reports,\n        roleP: ['Coordinator', 'Super Admin'],\n        icon: <Assignment color=\"primary\" />\n      },\n\n      {\n        title: 'Group Management',\n        path: PATH_DASHBOARD.general.viewGroups,\n        roleP: ['Coordinator', 'Super Admin'],\n        icon: <Groups color=\"primary\" />\n      },\n      {\n        title: 'Groups Under Supervision',\n        path: PATH_DASHBOARD.general.groupsUnderSupervision,\n        roleP: ['Coordinator', 'Supervisor', 'Super Admin'],\n        icon: <Groups color=\"primary\" />\n      },\n\n      {\n        title: 'Create Group',\n        path: PATH_DASHBOARD.general.createGroup,\n        roleP: ['Student', 'Super Admin'],\n        icon: <GroupAdd color=\"primary\" />\n      },\n      {\n        title: 'Supervisor Specialization',\n        path: PATH_DASHBOARD.app.supervisorSpecialization,\n        roleP: ['Coordinator', 'Supervisor', 'Super Admin', 'Student'],\n        icon: <Assignment color=\"primary\" />\n      },\n      {\n        title: 'View All Attendances',\n        path: PATH_DASHBOARD.general.viewAllAttendance,\n        roleP: ['Coordinator', 'Super Admin'],\n        icon: <PanTool color=\"primary\" />\n      },\n      {\n        title: 'View Attendance',\n        path: PATH_DASHBOARD.general.viewStudentAttendance,\n        roleP: ['Super Admin', 'Student'],\n        icon: <PanTool color=\"primary\" />\n      },\n      {\n        title: 'Submit Reports',\n        path: PATH_DASHBOARD.general.submitReports,\n        roleP: ['Student'],\n        icon: <UploadFile color=\"primary\" />\n      },\n      {\n        title: 'View Announcements',\n        path: PATH_DASHBOARD.general.viewAnnouncements,\n        roleP: ['Student', 'Supervisor', 'Super Admin'],\n        icon: <PreviewRounded color=\"primary\" />\n      }\n    ]\n  },\n\n  // MANAGEMENT\n  // ----------------------------------------------------------------------\n  {\n    subheader: 'management',\n    roleQ: ['Coordinator', 'Super Admin'],\n    items: [\n      {\n        title: 'User Management',\n        path: PATH_DASHBOARD.user.list,\n        roleP: ['Coordinator', 'Super Admin'],\n        icon: <ManageAccounts color=\"primary\" />\n      },\n      {\n        title: 'Batch Management',\n        path: PATH_DASHBOARD.user.userbatch,\n        roleP: ['Coordinator', 'Super Admin'],\n        icon: <ManageAccounts color=\"primary\" />\n      },\n      {\n        title: 'Role Management',\n        path: PATH_DASHBOARD.user.userRole,\n        roleP: ['Super Admin'],\n        icon: <ManageAccounts color=\"primary\" />\n      }\n    ]\n  }\n];\n\nexport default sidebarConfig;\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\NotificationsPopover.js",["1445","1446","1447","1448","1449"],"import PropTypes from 'prop-types';\nimport { noCase } from 'change-case';\nimport { useRef, useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Icon } from '@iconify/react';\nimport bellFill from '@iconify/icons-eva/bell-fill';\nimport clockFill from '@iconify/icons-eva/clock-fill';\nimport doneAllFill from '@iconify/icons-eva/done-all-fill';\n// material\nimport { alpha } from '@mui/material/styles';\n\nimport {\n  Box,\n  List,\n  Badge,\n  Button,\n  Avatar,\n  Tooltip,\n  Divider,\n  Typography,\n  ListItemText,\n  ListSubheader,\n  ListItemAvatar,\n  ListItemButton\n} from '@mui/material';\n\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// utils\nimport useAuth from '../../hooks/useAuth';\nimport mockData from '../../utils/mock-data';\n// components\nimport Scrollbar from '../../components/Scrollbar';\nimport MenuPopover from '../../components/MenuPopover';\nimport { MIconButton } from '../../components/@material-extend';\nimport { useDispatch, useSelector } from '../../redux/store';\nimport {\n  getAnnouncementList,\n  deleteAnnouncement,\n  getAnnouncementListByStudent,\n  updateNotificationSetReadStatus\n} from '../../redux/slices/announcement';\n\n// ----------------------------------------------------------------------\n\nconst TITLES = [\n  'Your order is placed',\n  'Sylvan King',\n  'You have new message',\n  'You have new mail',\n  'Delivery processing'\n];\n\nconst DESCRIPTIONS = [\n  'waiting for shipping',\n  'answered to your comment on the SIBAU FYPMS',\n  '5 unread messages',\n  'sent from Guido Padberg',\n  'Your order is being shipped'\n];\n\nconst TYPES = ['order_placed', 'friend_interactive', 'chat_message', 'mail', 'order_shipped'];\n\nconst AVATARS = [null, mockData.image.avatar(2), null, null, null];\n\nconst UNREADS = [true, true, false, false, false];\n\nconst MOCK_NOTIFICATIONS = [...Array(5)].map((_, index) => ({\n  id: mockData.id(index),\n  title: TITLES[index],\n  description: DESCRIPTIONS[index],\n  avatar: AVATARS[index],\n  type: TYPES[index],\n  createdAt: mockData.time(index),\n  isUnRead: UNREADS[index]\n}));\n\n// ----------------------------------------------------------------------\n\nfunction renderContent(notification) {\n  const title = (\n    <Typography variant=\"subtitle2\">\n      {notification.title}\n      <Typography component=\"span\" variant=\"body2\" sx={{ color: 'text.secondary' }}>\n        &nbsp; {noCase(notification.description)}\n      </Typography>\n    </Typography>\n  );\n\n  if (notification.type === 'order_placed') {\n    return {\n      avatar: <img alt={notification.title} src=\"/static/icons/ic_notification_package.svg\" />,\n      title\n    };\n  }\n  if (notification.type === 'order_shipped') {\n    return {\n      avatar: <img alt={notification.title} src=\"/static/icons/ic_notification_shipping.svg\" />,\n      title\n    };\n  }\n  if (notification.type === 'mail') {\n    return {\n      avatar: <img alt={notification.title} src=\"/static/icons/ic_notification_mail.svg\" />,\n      title\n    };\n  }\n  if (notification.type === 'chat_message') {\n    return {\n      avatar: <img alt={notification.title} src=\"/static/icons/ic_notification_chat.svg\" />,\n      title\n    };\n  }\n  return {\n    avatar: <img alt={notification.title} src={notification.avatar} />,\n    title\n  };\n}\n\nNotificationItem.propTypes = {\n  notification: PropTypes.object.isRequired\n};\n\nfunction NotificationItem({ notification }) {\n  // const { avatar, title } = renderContent(notification);\n\n  return (\n    <ListItemButton\n      to={PATH_DASHBOARD.general.viewAnnouncements}\n      component={RouterLink}\n      sx={{\n        py: 1.5,\n        px: 2.5,\n        mt: '1px',\n        ...(notification.isUnRead && {\n          bgcolor: 'action.selected'\n        })\n      }}\n    >\n      <ListItemAvatar>\n        <Avatar sx={{ bgcolor: 'background.neutral' }}>\n          <img alt={notification.title} src=\"/static/icons/ic_notification_mail.svg\" />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={notification.title}\n        secondary={\n          <Typography\n            variant=\"caption\"\n            sx={{\n              mt: 0.5,\n              display: 'flex',\n              alignItems: 'center',\n              color: 'text.disabled'\n            }}\n          >\n            <Box component={Icon} icon={clockFill} sx={{ mr: 0.5, width: 16, height: 16 }} />\n            {formatDistanceToNow(new Date(notification.createdAt))}\n          </Typography>\n        }\n      />\n    </ListItemButton>\n  );\n}\n\nexport default function NotificationsPopover() {\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const { announcementList } = useSelector((state) => state.announcement);\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n  const [notifications, setNotifications] = useState(MOCK_NOTIFICATIONS);\n\n  const getCountUnReadNotifications = () => {\n    const totalUnRead = announcementList.filter((item) => item.status_viewed === 0).length;\n    return totalUnRead;\n  };\n\n  useEffect(() => {\n    dispatch(user.role.role_name === 'Student' ? getAnnouncementListByStudent(user?.id || '') : getAnnouncementList());\n  }, [dispatch]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleMarkAllAsRead = () => {\n    dispatch(updateNotificationSetReadStatus(user?.id || ''));\n    dispatch(user.role.role_name === 'Student' ? getAnnouncementListByStudent(user?.id || '') : getAnnouncementList());\n    // dispatch(user.role.role_name === 'Student' ? getAnnouncementListByStudent(user?.id || '') : getAnnouncementList());\n  };\n\n  return (\n    <>\n      <MIconButton\n        ref={anchorRef}\n        size=\"large\"\n        color={open ? 'primary' : 'default'}\n        onClick={handleOpen}\n        sx={{\n          ...(open && {\n            bgcolor: (theme) => alpha(theme.palette.primary.main, theme.palette.action.focusOpacity)\n          })\n        }}\n      >\n        <Badge badgeContent={getCountUnReadNotifications()} color=\"error\">\n          <Icon icon={bellFill} width={20} height={20} />\n        </Badge>\n      </MIconButton>\n\n      <MenuPopover open={open} onClose={handleClose} anchorEl={anchorRef.current} sx={{ width: 360 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', py: 2, px: 2.5 }}>\n          <Box sx={{ flexGrow: 1 }}>\n            <Typography variant=\"subtitle1\">Notifications</Typography>\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n              You have {getCountUnReadNotifications()} unread messages\n            </Typography>\n          </Box>\n\n          {getCountUnReadNotifications() > 0 && (\n            <Tooltip title=\" Mark all as read\">\n              <MIconButton color=\"primary\" onClick={handleMarkAllAsRead}>\n                <Icon icon={doneAllFill} width={20} height={20} />\n              </MIconButton>\n            </Tooltip>\n          )}\n        </Box>\n\n        <Divider />\n\n        <Scrollbar sx={{ height: { xs: 340, sm: 'auto' } }}>\n          <List\n            disablePadding\n            subheader={\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\n                New\n              </ListSubheader>\n            }\n          >\n            {announcementList\n              .slice(0, getCountUnReadNotifications() < 3 ? getCountUnReadNotifications() : 2)\n              .map((notification) => (\n                <NotificationItem\n                  key={notification.id}\n                  notification={notification.announcement ? notification.announcement : notification}\n                />\n              ))}\n          </List>\n\n          <List\n            disablePadding\n            subheader={\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\n                Before that\n              </ListSubheader>\n            }\n          >\n            {announcementList\n              .slice(getCountUnReadNotifications(), announcementList.length < 5 ? announcementList.length : 4)\n              .map((notification) => (\n                <>\n                  <NotificationItem\n                    key={notification.id}\n                    notification={notification.announcement ? notification.announcement : notification}\n                    component={RouterLink}\n                    to={PATH_DASHBOARD.general.viewAnnouncements}\n                  />\n                </>\n              ))}\n          </List>\n        </Scrollbar>\n\n        <Divider />\n\n        <Box sx={{ p: 1 }}>\n          <Button fullWidth disableRipple component={RouterLink} to={PATH_DASHBOARD.general.viewAnnouncements}>\n            View All\n          </Button>\n        </Box>\n      </MenuPopover>\n    </>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\illustration_motivation.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\register\\RegisterForm.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\verify-code\\VerifyCodeForm.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\login\\LoginForm.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\authentication\\reset-password\\ResetPasswordForm.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\SvgIconStyle.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\MenuPopover.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\announcement.js",["1450","1451"],"import { map, filter } from 'lodash';\nimport { createSlice } from '@reduxjs/toolkit';\n// utils\nimport axios from '../../utils/axios';\n\n// ----------------------------------------------------------------------\n\nconst initialState = {\n  isLoading: false,\n  error: false,\n  myProfile: null,\n  announcementList: [],\n  notificationList: []\n};\n\nconst slice = createSlice({\n  name: 'announcement',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    // GET USERS\n    getBatchSuccess(state, action) {\n      state.isLoading = false;\n      state.batch = action.payload;\n    },\n\n    // DELETE USERS\n    deleteAnnouncement(state, action) {\n      const deleteUser = filter(state.batchList, (batch) => batch.id !== action.payload);\n      state.batchList = deleteUser;\n    },\n    saveAnnouncement(state, action) {\n      state.isLoading = false;\n    },\n\n    // GET MANAGE USERS\n    getAnnouncementListSuccess(state, action) {\n      state.isLoading = false;\n      state.announcementList = action.payload;\n    },\n    getAllNotificationtListSuccess(state, action) {\n      state.isLoading = false;\n      state.notificationList = action.payload;\n    }\n  }\n});\n\n// Reducer\nexport default slice.reducer;\nexport const { deleteAnnouncement } = slice.actions;\n// ----------------------------------------------------------------------\n\nexport function getAnnouncementList() {\n  return async (dispatch) => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('http://localhost:8080/Announcement/showAllAnnouncements');\n      console.log('announcement', response.data);\n      dispatch(\n        slice.actions.getAnnouncementListSuccess(\n          response.data.sort((a, b) => {\n            const x = new Date(a.createdAt);\n            const y = new Date(b.createdAt);\n            return y - x;\n          })\n        )\n      );\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\nexport function getAnnouncementByBatch(id) {\n  return async (dispatch) => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.post('http://localhost:8080/Announcement/showAnnouncementByBatch', {\n        batch_id: id\n      });\n      console.log('announcement', response.data);\n      dispatch(\n        slice.actions.getAnnouncementListSuccess(\n          response.data.sort((a, b) => {\n            const x = new Date(a.createdAt);\n            const y = new Date(b.createdAt);\n            return y - x;\n          })\n        )\n      );\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\nexport function getAnnouncementListByStudent(id) {\n  return async (dispatch) => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.post('http://localhost:8080/Notification/showAllNotificationByStudent', {\n        id\n      });\n      console.log(id, 'announcement', response.data);\n      dispatch(\n        slice.actions.getAnnouncementListSuccess(\n          response.data.sort((a, b) => {\n            const x = new Date(a.createdAt);\n            const y = new Date(b.createdAt);\n            return y - x;\n          })\n        )\n      );\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\nexport function getAllNotifications(id) {\n  return async (dispatch) => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('http://localhost:8080/Notification/showAllNotification');\n      console.log(id, 'announcement', response.data);\n      dispatch(\n        slice.actions.getAllNotificationtListSuccess(\n          response.data.sort((a, b) => {\n            const x = new Date(a.createdAt);\n            const y = new Date(b.createdAt);\n            return y - x;\n          })\n        )\n      );\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\nexport function saveNotification(announcementId, userId) {\n  return async (dispatch) => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.post('http://localhost:8080/Notification/saveNotification', {\n        id: announcementId,\n        user_id: userId,\n        is_deleted: 0,\n        status_viewed: 0\n      });\n      console.log('notification', response.data);\n      dispatch(slice.actions.saveAnnouncement(response.data));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\nexport function updateNotificationSetReadStatus(id) {\n  return async (dispatch) => {\n    dispatch(slice.actions.startLoading());\n    console.log(id);\n    try {\n      const response = await axios.post('http://localhost:8080/Notification/updateNotificationReadStatus', {\n        id\n      });\n      console.log('notification', response.data);\n      dispatch(slice.actions.saveAnnouncement(response.data));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\hooks\\useIsMountedRef.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\fakeRequest.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\text.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\number.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\name.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\address.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\company.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\phoneNumber.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\boolean.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\role.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\mock-data\\email.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\icon_plan_free.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\icon_plan_premium.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\icon_plan_starter.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\icon_doc.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\icon_sent.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\illustration_404.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\illustration_order_complete.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\illustration_coming_soon.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\illustration_maintenance.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\illustration_500.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\illustration_seo.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\assets\\illustration_upload.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\Searchbar.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\NavSection.js",["1452"],"import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Icon } from '@iconify/react';\nimport { NavLink as RouterLink, matchPath, useLocation } from 'react-router-dom';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\n// material\nimport { alpha, useTheme, styled } from '@mui/material/styles';\nimport { Box, List, Collapse, ListItemText, ListItemIcon, ListSubheader, ListItemButton } from '@mui/material';\n\nimport useAuth from '../hooks/useAuth';\n// ----------------------------------------------------------------------\n\nconst ListSubheaderStyle = styled((props) => <ListSubheader disableSticky disableGutters {...props} />)(\n  ({ theme }) => ({\n    ...theme.typography.overline,\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(5),\n    color: theme.palette.text.primary\n  })\n);\n\nconst ListItemStyle = styled(ListItemButton)(({ theme }) => ({\n  ...theme.typography.body2,\n  height: 48,\n  position: 'relative',\n  textTransform: 'capitalize',\n  paddingLeft: theme.spacing(5),\n  paddingRight: theme.spacing(2.5),\n  color: theme.palette.text.secondary,\n  '&:before': {\n    top: 0,\n    right: 0,\n    width: 3,\n    bottom: 0,\n    content: \"''\",\n    display: 'none',\n    position: 'absolute',\n    borderTopLeftRadius: 4,\n    borderBottomLeftRadius: 4,\n    backgroundColor: theme.palette.primary.main\n  }\n}));\n\nconst ListItemIconStyle = styled(ListItemIcon)({\n  width: 22,\n  height: 22,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n});\n\n// ----------------------------------------------------------------------\n\nNavItem.propTypes = {\n  isShow: PropTypes.bool,\n  item: PropTypes.object\n};\n\nfunction NavItem({ item, isShow }) {\n  const theme = useTheme();\n  const { pathname } = useLocation();\n  const { title, path, icon, info, children } = item;\n  const isActiveRoot = path ? !!matchPath({ path, end: false }, pathname) : false;\n\n  const [open, setOpen] = useState(isActiveRoot);\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  const activeRootStyle = {\n    color: 'primary.main',\n    fontWeight: 'fontWeightMedium',\n    bgcolor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:before': { display: 'block' }\n  };\n\n  const activeSubStyle = {\n    color: 'text.primary',\n    fontWeight: 'fontWeightMedium'\n  };\n\n  if (children) {\n    return (\n      <>\n        <ListItemStyle\n          onClick={handleOpen}\n          sx={{\n            ...(isActiveRoot && activeRootStyle)\n          }}\n        >\n          <ListItemIconStyle>{icon && icon}</ListItemIconStyle>\n\n          {isShow && (\n            <>\n              <ListItemText disableTypography primary={title} />\n              {info && info}\n              <Box\n                component={Icon}\n                icon={open ? arrowIosDownwardFill : arrowIosForwardFill}\n                sx={{ width: 16, height: 16, ml: 1 }}\n              />\n            </>\n          )}\n        </ListItemStyle>\n\n        {isShow && (\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              {children.map((item) => {\n                const { title, path } = item;\n                const isActiveSub = path ? !!matchPath({ path, end: false }, pathname) : false;\n\n                return (\n                  <ListItemStyle\n                    key={title}\n                    component={RouterLink}\n                    to={path}\n                    sx={{\n                      ...(isActiveSub && activeSubStyle)\n                    }}\n                  >\n                    <ListItemIconStyle>\n                      <Box\n                        component=\"span\"\n                        sx={{\n                          width: 4,\n                          height: 4,\n                          display: 'flex',\n                          borderRadius: '50%',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          bgcolor: 'text.disabled',\n                          transition: (theme) => theme.transitions.create('transform'),\n                          ...(isActiveSub && {\n                            transform: 'scale(2)',\n                            bgcolor: 'primary.main'\n                          })\n                        }}\n                      />\n                    </ListItemIconStyle>\n                    <ListItemText disableTypography primary={title} />\n                  </ListItemStyle>\n                );\n              })}\n            </List>\n          </Collapse>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <ListItemStyle\n      component={RouterLink}\n      to={path}\n      sx={{\n        ...(isActiveRoot && activeRootStyle)\n      }}\n    >\n      <ListItemIconStyle>{icon && icon}</ListItemIconStyle>\n      {isShow && (\n        <>\n          <ListItemText disableTypography primary={title} />\n          {info && info}\n        </>\n      )}\n    </ListItemStyle>\n  );\n}\n\nNavSection.propTypes = {\n  isShow: PropTypes.bool,\n  navConfig: PropTypes.array\n};\n\nexport default function NavSection({ navConfig, isShow = true, ...other }) {\n  const { user } = useAuth();\n\n  const getRole = (ro) => {\n    const result = ro.find((rol) => rol === user.role.role_name);\n    return result;\n  };\n  return (\n    <Box {...other}>\n      {navConfig.map((list) => {\n        const { subheader, roleQ, items } = list;\n        return (\n          <List key={subheader} disablePadding>\n            {isShow && (\n              <ListSubheaderStyle>{user.role.role_name === getRole(roleQ) ? subheader : null}</ListSubheaderStyle>\n            )}\n            {items.map((item, index) => (\n              <>\n                {user.role.role_name === getRole(item.roleP) ? (\n                  <NavItem key={item.title} item={item} isShow={isShow} />\n                ) : null}\n              </>\n            ))}\n          </List>\n        );\n      })}\n    </Box>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\LanguagePopover.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\layouts\\dashboard\\AccountPopover.js",["1453"],"import { Icon } from '@iconify/react';\nimport { useSnackbar } from 'notistack';\nimport { useRef, useState } from 'react';\nimport homeFill from '@iconify/icons-eva/home-fill';\nimport personFill from '@iconify/icons-eva/person-fill';\nimport settings2Fill from '@iconify/icons-eva/settings-2-fill';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n// material\nimport { alpha } from '@mui/material/styles';\nimport { Button, Box, Divider, MenuItem, Typography } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useAuth from '../../hooks/useAuth';\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\n// components\nimport { MIconButton } from '../../components/@material-extend';\nimport MyAvatar from '../../components/MyAvatar';\nimport MenuPopover from '../../components/MenuPopover';\n\n// ----------------------------------------------------------------------\n\nconst MENU_OPTIONS = [\n  {\n    label: 'Home',\n    icon: homeFill,\n    linkTo: '/'\n  },\n  {\n    label: 'Profile',\n    icon: personFill,\n    linkTo: PATH_DASHBOARD.general.userProfile\n    // linkTo: 'Suhail Ahmed'\n  }\n];\n\nconst MENU_OPTIONS_STUDENT = [\n  {\n    label: 'Home',\n    icon: homeFill,\n    linkTo: '/'\n  },\n  {\n    label: 'Profile',\n    icon: personFill,\n    linkTo: PATH_DASHBOARD.general.studentProfile\n    // linkTo: 'Suhail Ahmed'\n  }\n];\n\n// ----------------------------------------------------------------------\n\nexport default function AccountPopover() {\n  const anchorRef = useRef(null);\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n  const isMountedRef = useIsMountedRef();\n  const { user, logout } = useAuth();\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      navigate('/');\n      if (isMountedRef.current) {\n        handleClose();\n      }\n    } catch (error) {\n      console.error(error);\n      enqueueSnackbar('Unable to logout', { variant: 'error' });\n    }\n  };\n\n  return (\n    <>\n      <MIconButton\n        ref={anchorRef}\n        onClick={handleOpen}\n        sx={{\n          padding: 0,\n          width: 44,\n          height: 44,\n          ...(open && {\n            '&:before': {\n              zIndex: 1,\n              content: \"''\",\n              width: '100%',\n              height: '100%',\n              borderRadius: '50%',\n              position: 'absolute',\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72)\n            }\n          })\n        }}\n      >\n        <MyAvatar src={user.imgUrl ? user.imgUrl : ''} />\n      </MIconButton>\n\n      <MenuPopover open={open} onClose={handleClose} anchorEl={anchorRef.current} sx={{ width: 220 }}>\n        <Box sx={{ my: 1.5, px: 2.5 }}>\n          <Typography variant=\"subtitle1\" noWrap>\n            {user.name}\n          </Typography>\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n            {user.user_name}\n          </Typography>\n        </Box>\n\n        <Divider sx={{ my: 1 }} />\n\n        {user.role.role_name === 'Student'\n          ? MENU_OPTIONS_STUDENT.map((option) => (\n              <MenuItem\n                key={option.label}\n                to={option.linkTo}\n                component={RouterLink}\n                onClick={handleClose}\n                sx={{ typography: 'body2', py: 1, px: 2.5 }}\n              >\n                <Box\n                  component={Icon}\n                  icon={option.icon}\n                  sx={{\n                    mr: 2,\n                    width: 24,\n                    height: 24\n                  }}\n                />\n\n                {option.label}\n              </MenuItem>\n            ))\n          : MENU_OPTIONS.map((option) => (\n              <MenuItem\n                key={option.label}\n                to={option.linkTo}\n                component={RouterLink}\n                onClick={handleClose}\n                sx={{ typography: 'body2', py: 1, px: 2.5 }}\n              >\n                <Box\n                  component={Icon}\n                  icon={option.icon}\n                  sx={{\n                    mr: 2,\n                    width: 24,\n                    height: 24\n                  }}\n                />\n\n                {option.label}\n              </MenuItem>\n            ))}\n\n        <Box sx={{ p: 2, pt: 1.5 }}>\n          <Button fullWidth color=\"inherit\" variant=\"outlined\" onClick={handleLogout}>\n            Logout\n          </Button>\n        </Box>\n      </MenuPopover>\n    </>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\MyAvatar.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\@material-extend\\MHidden.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\@material-extend\\MIconButton.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\@material-extend\\MBreadcrumbs.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\@material-extend\\MFab.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Pagination.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Accordion.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\IconButton.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Breadcrumbs.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Typography.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Checkbox.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Container.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\TreeView.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Progress.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Timeline.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Snackbar.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Skeleton.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Backdrop.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\DataGrid.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Pickers.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Stepper.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Popover.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Tooltip.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Switch.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\SvgIcon.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Select.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Button.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Slider.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Rating.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Avatar.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Drawer.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Dialog.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Input.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Radio.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Paper.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Badge.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Alert.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Table.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Lists.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Link.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Grid.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Tabs.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Menu.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Card.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Fab.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\theme\\overrides\\Chip.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\HeaderBreadcrumbs.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\Label.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\SearchNotFound.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\createAvatar.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\groupSubmittedFiles.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\group.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\user.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\AnnouncementsNewForm.js",["1454","1455","1456","1457","1458","1459","1460","1461","1462"],"import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { useCallback, useEffect } from 'react';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { styled } from '@mui/material/styles';\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Card,\n  Chip,\n  Grid,\n  Stack,\n  Radio,\n  Switch,\n  Select,\n  TextField,\n  InputLabel,\n  Typography,\n  RadioGroup,\n  FormControl,\n  Autocomplete,\n  InputAdornment,\n  FormHelperText,\n  FormControlLabel\n} from '@mui/material';\n// utils\nimport fakeRequest from '../../../utils/fakeRequest';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport { QuillEditor } from '../../editor';\nimport { UploadMultiFile } from '../../upload';\n\nimport axios from '../../../utils/axios';\nimport useAuth from '../../../hooks/useAuth';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getBatchesList, getStudentByBatch, getAllStudent } from '../../../redux/slices/batch';\nimport { saveNotification } from '../../../redux/slices/announcement';\n\n// ----------------------------------------------------------------------\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1)\n}));\n\n// ----------------------------------------------------------------------\n\nAnnouncementsNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentProduct: PropTypes.object\n};\n\nexport default function AnnouncementsNewForm({ isEdit, currentProduct }) {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n  const { batchesList } = useSelector((state) => state.batch);\n  const { studentList } = useSelector((state) => state.batch);\n  const NewProductSchema = Yup.object().shape({\n    title: Yup.string().required('title is required'),\n    description: Yup.string().required('Description is required')\n  });\n  useEffect(() => {\n    dispatch(getBatchesList());\n    dispatch(getAllStudent());\n  }, []);\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      title: currentProduct?.title || '',\n      description: currentProduct?.description || '',\n      batch: currentProduct?.batch || 'All',\n      images: currentProduct?.images || []\n    },\n    validationSchema: NewProductSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      console.log(user.user_name, values);\n      try {\n        // if (isEdit) {\n        //   await axios.post('http://localhost:8080/Announcement/saveAnnouncement', {\n        //     supervisor_id: user.id,\n        //     title: values.title,\n        //     description: values.description,\n        //     batch_id: batchesList?.find((batch) => batch.batch === values.batch)?.id || '',\n        //     is_deleted: 0\n        //   });\n        // } else {\n        const response = await axios.post('http://localhost:8080/Announcement/saveAnnouncement', {\n          supervisor_id: user.id,\n          title: values.title,\n          description: values.description,\n          batch_id:\n            values.batch === 'All' ? null : batchesList?.find((batch) => batch.batch === values.batch)?.id || '',\n          is_deleted: 0\n        });\n        console.log(studentList);\n        studentList.map((stud) => dispatch(saveNotification(response.data.announcement.id, stud.id)));\n        // }\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n        navigate(PATH_DASHBOARD.app.announcements);\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      setFieldValue(\n        'images',\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })\n        )\n      );\n    },\n    [setFieldValue]\n  );\n\n  const handleRemoveAll = () => {\n    setFieldValue('images', []);\n  };\n\n  const handleRemove = (file) => {\n    const filteredItems = values.images.filter((_file) => _file !== file);\n    setFieldValue('images', filteredItems);\n  };\n\n  const batchSelectHandler = (e) => {\n    if (e.target.value === 'All') {\n      dispatch(getAllStudent());\n    } else {\n      dispatch(getStudentByBatch(batchesList?.find((batch) => batch.batch === e.target.value)?.id || ''));\n    }\n  };\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <TextField\n                  fullWidth\n                  label=\"Annoucement Title\"\n                  {...getFieldProps('title')}\n                  error={Boolean(touched.title && errors.title)}\n                  helperText={touched.title && errors.title}\n                />\n\n                <div>\n                  <LabelStyle>Description</LabelStyle>\n                  <QuillEditor\n                    simple\n                    id=\"description\"\n                    value={values.description}\n                    onChange={(val) => setFieldValue('description', val)}\n                    error={Boolean(touched.description && errors.description)}\n                  />\n                  {touched.description && errors.description && (\n                    <FormHelperText error sx={{ px: 2 }}>\n                      {touched.description && errors.description}\n                    </FormHelperText>\n                  )}\n                </div>\n              </Stack>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <Stack spacing={3}>\n              <Card sx={{ p: 3 }}>\n                <Stack spacing={3}>\n                  <FormControl fullWidth>\n                    <InputLabel>Batch</InputLabel>\n                    <Select\n                      label=\"Batch\"\n                      native\n                      {...getFieldProps('batch')}\n                      onChange={(event) => {\n                        setFieldValue('batch', event.target.value);\n                        batchSelectHandler(event);\n                      }}\n                    >\n                      <option>All</option>\n                      {batchesList.map((batch) => (\n                        <option key={batch.id} value={batch.batch}>\n                          {batch.batch}\n                        </option>\n                      ))}\n                    </Select>\n                  </FormControl>\n                  <div>\n                    <LabelStyle>Add Files</LabelStyle>\n                    <UploadMultiFile\n                      showPreview\n                      maxSize={3145728}\n                      accept=\"image/*\"\n                      files={values.images}\n                      onDrop={handleDrop}\n                      onRemove={handleRemove}\n                      onRemoveAll={handleRemoveAll}\n                      error={Boolean(touched.images && errors.images)}\n                    />\n                  </div>\n                </Stack>\n              </Card>\n              <LoadingButton type=\"submit\" fullWidth variant=\"contained\" size=\"large\" loading={isSubmitting}>\n                {!isEdit ? 'Create Annoucement' : 'Save Changes'}\n              </LoadingButton>\n            </Stack>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\StudentNewForm.js",["1463","1464","1465","1466","1467","1468"],"import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n\n// material\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Box,\n  Card,\n  Grid,\n  Stack,\n  Switch,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Typography,\n  FormHelperText,\n  FormControlLabel\n} from '@mui/material';\n\nimport eyeFill from '@iconify/icons-eva/eye-fill';\n\nimport { Icon } from '@iconify/react';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\n// utils\nimport { fData } from '../../../utils/formatNumber';\nimport fakeRequest from '../../../utils/fakeRequest';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// redux\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getStudent } from '../../../redux/slices/student';\nimport { getUserList } from '../../../redux/slices/user';\nimport { getBatchesList } from '../../../redux/slices/batch';\nimport { getDepartmentList } from '../../../redux/slices/department';\nimport { getRoleList } from '../../../redux/slices/role';\n\nimport useAuth from '../../../hooks/useAuth';\n//\nimport Label from '../../Label';\n\nimport axios from '../../../utils/axios';\n\nimport { UploadAvatar } from '../../upload';\n\n// ----------------------------------------------------------------------\n\nStudentNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentUser: PropTypes.object\n};\n\nexport default function StudentNewForm({ isEdit, currentUser }) {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const { user } = useAuth();\n  let student;\n  const { departmentList } = useSelector((state) => state.department);\n  const { batchesList } = useSelector((state) => state.batch);\n  const { roleList } = useSelector((state) => state.role);\n  useSelector((state) => {\n    student = state.student.student;\n  });\n  const NewUserSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().required('Email is required').email(),\n    phoneNumber: Yup.string().required('Phone Number is required'),\n    password: Yup.string().required('Password is required'),\n    role: Yup.string().required('Role is required'),\n    batch: Yup.string().required('Batch is required'),\n    cmsId: Yup.string().required('CMS ID is required'),\n    department: Yup.string().required('Department is required')\n    // specialization: Yup.string().required('Specialization is required'),\n    // avatarUrl: Yup.mixed().required('Avatar is required')\n  });\n  useEffect(() => {\n    dispatch(getBatchesList());\n    dispatch(getDepartmentList());\n    dispatch(getRoleList());\n    dispatch(getStudent(currentUser ? currentUser.id : ''));\n  }, [dispatch]);\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      name: currentUser?.name || '',\n      email: currentUser?.email || '',\n      phoneNumber: currentUser?.phoneNumber || '',\n      password: currentUser?.password || '',\n      role: currentUser?.role?.role_name || 'Student' || 'Student',\n      cmsId: currentUser?.user_name || '',\n      department: currentUser\n        ? departmentList.find((dep) => dep.id === currentUser.department_id)?.department_name || ''\n        : departmentList[0]?.department_name || '',\n      avatarUrl: currentUser?.imgUrl || null,\n      isVerified: currentUser?.is_varified || 1,\n      status: currentUser?.isActive || 1,\n      batch: student ? batchesList.find((batch) => batch.id === student.batch_id)?.batch || '' : batchesList[0].batch\n    },\n    validationSchema: NewUserSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      try {\n        if (isEdit) {\n          const data = new FormData();\n          if (values.avatarUrl !== null) {\n            data.append('image', values.avatarUrl);\n          } else {\n            data.append('image', '');\n          }\n          data.append('id', currentUser.id);\n          data.append('user_name', values.cmsId);\n          data.append('name', values.name);\n          data.append('email', values.email);\n          data.append('password', values.password);\n          data.append('phoneNumber', values.phoneNumber);\n          data.append('batch_id', batchesList?.find((batch) => batch.batch === values.batch)?.id || '');\n          data.append('isActive', values.status);\n          data.append('is_varified', values.isVerified);\n          data.append('is_deleted', 0);\n          data.append('role_id', roleList ? roleList.find((rol) => rol.role_name === values.role)?.id || '' : '');\n          data.append(\n            'department_id',\n            departmentList?.find((dep) => dep.department_name === values.department)?.id || '' || ''\n          );\n          axios.post('http://localhost:8080/Student/updateStudent', data, {\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            }\n          });\n          dispatch(getUserList());\n        } else {\n          const data = new FormData();\n          if (values.avatarUrl !== null) {\n            data.append('image', values.avatarUrl);\n          } else {\n            data.append('image', '');\n          }\n          data.append('user_name', values.cmsId);\n          data.append('name', values.name);\n          data.append('email', values.email);\n          data.append('password', values.password);\n          data.append('phoneNumber', values.phoneNumber);\n          data.append('batch_id', batchesList?.find((batch) => batch.batch === values.batch)?.id || '');\n          data.append('isActive', values.status);\n          data.append('is_varified', values.isVerified);\n          data.append('is_deleted', 0);\n          data.append('role_id', roleList ? roleList.find((rol) => rol.role_name === values.role)?.id || '' : '');\n          data.append(\n            'department_id',\n            departmentList?.find((dep) => dep.department_name === values.department)?.id || '' || ''\n          );\n          axios.post('http://localhost:8080/Student/saveStudent', data, {\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            }\n          });\n        }\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n        navigate(\n          user.role.role_name === 'Super Admin' || user.role.role_name === 'Coordinator'\n            ? PATH_DASHBOARD.user.list\n            : PATH_DASHBOARD.general.studentProfile\n        );\n      } catch (error) {\n        console.error(error);\n        alert(error?.error?.errors[0].message || 'not submitted');\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      setFieldValue(\n        'avatarUrl',\n        Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        })\n      );\n    },\n    [setFieldValue]\n  );\n\n  const handleShowPassword = () => {\n    setShowPassword((show) => !show);\n  };\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <Card sx={{ py: 10, px: 3 }}>\n              <Label\n                color={values.status !== 1 ? 'error' : 'success'}\n                sx={{ textTransform: 'uppercase', position: 'absolute', top: 24, right: 24 }}\n              >\n                {values.status === 1 ? 'active' : 'banned'}\n              </Label>\n              <Box sx={{ mb: 5 }}>\n                <UploadAvatar\n                  accept=\"image/*\"\n                  file={values.avatarUrl}\n                  maxSize={3145728}\n                  onDrop={handleDrop}\n                  error={Boolean(touched.avatarUrl && errors.avatarUrl)}\n                  caption={\n                    <Typography\n                      variant=\"caption\"\n                      sx={{\n                        mt: 2,\n                        mx: 'auto',\n                        display: 'block',\n                        textAlign: 'center',\n                        color: 'text.secondary'\n                      }}\n                    >\n                      Allowed *.jpeg, *.jpg, *.png, *.gif\n                      <br /> max size of {fData(3145728)}\n                    </Typography>\n                  }\n                />\n\n                {/* <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\n                  {touched.avatarUrl && errors.avatarUrl}\n                </FormHelperText> */}\n              </Box>\n              <FormControlLabel\n                disabled={user.role.role_name === 'Student'}\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    onChange={(event) => setFieldValue('status', event.target.checked ? 1 : 0)}\n                    checked={values.status === 1}\n                  />\n                }\n                label={\n                  <>\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                      Banned\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                      Apply disable account\n                    </Typography>\n                  </>\n                }\n                sx={{ mx: 0, mb: 3, width: 1, justifyContent: 'space-between' }}\n              />\n\n              <FormControlLabel\n                disabled={user.role.role_name === 'Student'}\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    {...getFieldProps('isVerified')}\n                    onChange={(event) => setFieldValue('isVerified', event.target.checked ? 1 : 0)}\n                    checked={values.isVerified === 1}\n                  />\n                }\n                label={\n                  <>\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                      Verified Status\n                    </Typography>\n                  </>\n                }\n                sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\n              />\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Full Name\"\n                    {...getFieldProps('name')}\n                    error={Boolean(touched.name && errors.name)}\n                    helperText={touched.name && errors.name}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Email\"\n                    {...getFieldProps('email')}\n                    error={Boolean(touched.email && errors.email)}\n                    helperText={touched.email && errors.email}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Phone Number\"\n                    {...getFieldProps('phoneNumber')}\n                    error={Boolean(touched.phoneNumber && errors.phoneNumber)}\n                    helperText={touched.phoneNumber && errors.phoneNumber}\n                  />\n                  <TextField\n                    select\n                    disabled\n                    fullWidth\n                    label=\"Role\"\n                    placeholder=\"role\"\n                    {...getFieldProps('role')}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.role && errors.role)}\n                    helperText={touched.role && errors.role}\n                  >\n                    {roleList.map((row) => (\n                      <option>{row.role_name}</option>\n                    ))}\n                  </TextField>\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    disabled={user.role.role_name === 'Student'}\n                    fullWidth\n                    label=\"CMS ID\"\n                    {...getFieldProps('cmsId')}\n                    error={Boolean(touched.cmsId && errors.cmsId)}\n                    helperText={touched.cmsId && errors.cmsId}\n                  />\n                  <TextField\n                    disabled={user.role.role_name === 'Student'}\n                    select\n                    fullWidth\n                    label=\"department\"\n                    placeholder=\"department\"\n                    {...getFieldProps('department')}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.department && errors.department)}\n                    helperText={touched.department && errors.department}\n                  >\n                    {departmentList.map((row) => (\n                      <option>{row.department_name}</option>\n                    ))}\n                  </TextField>\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  {/* <TextField\n                    fullWidth\n                    label=\"Password\"\n                    {...getFieldProps('password')}\n                    error={Boolean(touched.password && errors.password)}\n                    helperText={touched.password && errors.password}\n                  /> */}\n                  <TextField\n                    fullWidth\n                    autoComplete=\"current-password\"\n                    type={showPassword ? 'text' : 'password'}\n                    label=\"Password\"\n                    {...getFieldProps('password')}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton onClick={handleShowPassword} edge=\"end\">\n                            <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                          </IconButton>\n                        </InputAdornment>\n                      )\n                    }}\n                    error={Boolean(touched.password && errors.password)}\n                    helperText={touched.password && errors.password}\n                  />\n                  <TextField\n                    disabled={user.role.role_name === 'Student'}\n                    select\n                    fullWidth\n                    label=\"batch\"\n                    placeholder=\"batch\"\n                    {...getFieldProps('batch')}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.batch && errors.batch)}\n                    helperText={touched.batch && errors.batch}\n                  >\n                    {batchesList.map((row) => (\n                      <option>{row.batch}</option>\n                    ))}\n                  </TextField>\n                </Stack>\n\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                    {!isEdit ? 'Create Student' : 'Save Changes'}\n                  </LoadingButton>\n                </Box>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\ReportMoreMenu.js",["1469","1470"],"import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { paramCase } from 'change-case';\nimport { useRef, useState } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n// material\nimport { Assignment } from '@mui/icons-material';\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\n\n// ----------------------------------------------------------------------\n\nReportMoreMenu.propTypes = {\n  onDelete: PropTypes.func,\n  userName: PropTypes.object\n};\n\nexport default function ReportMoreMenu({ onDelete, userName }) {\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' }\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuItem\n          component={RouterLink}\n          to={`${PATH_DASHBOARD.user.root}/${paramCase(String(userName.id))}/submitted-reports`}\n          sx={{ color: 'text.secondary' }}\n        >\n          <ListItemIcon>\n            <Assignment />\n          </ListItemIcon>\n          <ListItemText primary=\"Submitted Reports\" primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n\n        <MenuItem\n          component={RouterLink}\n          to={`${PATH_DASHBOARD.user.root}/${paramCase(String(userName.id))}/reportedit`}\n          sx={{ color: 'text.secondary' }}\n        >\n          <ListItemIcon>\n            <Icon icon={editFill} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Edit\" primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\product.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\UserNewForm.js",["1471","1472","1473","1474","1475","1476"],"import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Box,\n  Card,\n  Grid,\n  Stack,\n  Switch,\n  IconButton,\n  InputAdornment,\n  TextField,\n  Typography,\n  FormHelperText,\n  FormControlLabel\n} from '@mui/material';\n\nimport eyeFill from '@iconify/icons-eva/eye-fill';\n\nimport { Icon } from '@iconify/react';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\n// utils\nimport { fData } from '../../../utils/formatNumber';\nimport fakeRequest from '../../../utils/fakeRequest';\n// redux\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getInstructor, getInstructorList } from '../../../redux/slices/instructor';\nimport { getDepartmentList } from '../../../redux/slices/department';\nimport { getUserList } from '../../../redux/slices/user';\nimport { getRoleList } from '../../../redux/slices/role';\nimport useAuth from '../../../hooks/useAuth';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport Label from '../../Label';\n\nimport axios from '../../../utils/axios';\n\nimport { UploadAvatar } from '../../upload';\n\n// ----------------------------------------------------------------------\n\nUserNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentUser: PropTypes.object\n};\n\nexport default function UserNewForm({ isEdit, currentUser }) {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const { user } = useAuth();\n  const { enqueueSnackbar } = useSnackbar();\n  let instructor;\n  const { departmentList } = useSelector((state) => state.department);\n  const { roleList } = useSelector((state) => state.role);\n  useSelector((state) => {\n    instructor = state.instructor.users;\n  });\n  const NewUserSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().required('Email is required').email(),\n    phoneNumber: Yup.string().required('Phone Number is required'),\n    password: Yup.string().required('Password is required'),\n    role: Yup.string().required('Role is required'),\n    officeAddress: Yup.string().required('Office Address is required'),\n    cmsId: Yup.string().required('CMS ID is required'),\n    department: Yup.string().required('Department is required'),\n    specialization: Yup.string().required('Specialization is required')\n    // avatarUrl: Yup.mixed().required('Avatar is required')\n  });\n  useEffect(() => {\n    dispatch(getDepartmentList());\n    dispatch(getRoleList());\n    dispatch(getInstructor(currentUser ? currentUser.user_name : ''));\n  }, [dispatch]);\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      name: currentUser?.user.name || '',\n      email: currentUser?.user.email || '',\n      phoneNumber: currentUser?.user.phoneNumber || '',\n      password: currentUser?.user.password || '',\n      role: currentUser ? roleList.find((role) => role.id === currentUser.user.role_id)?.role_name : 'Supervisor',\n      cmsId: currentUser?.user.user_name || '',\n      department: currentUser\n        ? departmentList.find((dep) => dep.id === currentUser.user.department_id)?.department_name || 'Computer Science'\n        : 'Computer Science',\n      avatarUrl: currentUser?.user.imgUrl || null,\n      isVerified: currentUser?.user.is_varified || 1,\n      status: currentUser?.user.isActive || 1,\n      officeAddress: currentUser?.office || '' || '',\n      specialization: currentUser?.specialization || '' || ''\n    },\n    validationSchema: NewUserSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      console.log(values);\n      try {\n        if (isEdit) {\n          const data = new FormData();\n          if (values.avatarUrl !== null) {\n            data.append('image', values.avatarUrl);\n          } else {\n            data.append('image', '');\n          }\n          data.append('id', currentUser.id);\n          data.append('user_name', values.cmsId);\n          data.append('name', values.name);\n          data.append('email', values.email);\n          data.append('password', values.password);\n          data.append('phoneNumber', values.phoneNumber);\n          data.append('office', values.officeAddress);\n          data.append('isActive', values.status);\n          data.append('specialization', values.specialization);\n          data.append('is_varified', values.isVerified);\n          data.append('is_deleted', 0);\n          data.append('role_id', roleList ? roleList.find((rol) => rol.role_name === values.role)?.id || '' : '');\n          data.append(\n            'department_id',\n            departmentList?.find((dep) => dep.department_name === values.department)?.id || '' || ''\n          );\n          axios.post('http://localhost:8080/Supervisor/updateSupervisor', data, {\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            }\n          });\n          // axios.post('http://localhost:8080/Supervisor/updateSupervisor', {\n          //   id: currentUser.id,\n          //   user_name: values.cmsId,\n          //   name: values.name,\n          //   email: values.email,\n          //   password: values.password,\n          //   phoneNumber: values.phoneNumber,\n          //   office: values.officeAddress,\n          //   specialization: values.specialization,\n          //   is_varified: values.isVerified,\n          //   isActive: values.status,\n          //   imgUrl: values.imgUrl,\n          //   role_id: roleList ? roleList.find((rol) => rol.role_name === values.role)?.id || '' : '',\n          //   department_id: departmentList?.find((dep) => dep.department_name === values.department)?.id || '' || ''\n          // });\n          dispatch(getInstructorList());\n        } else {\n          const data = new FormData();\n          if (values.avatarUrl !== null) {\n            data.append('image', values.avatarUrl);\n          } else {\n            data.append('image', '');\n          }\n          data.append('user_name', values.cmsId);\n          data.append('name', values.name);\n          data.append('email', values.email);\n          data.append('password', values.password);\n          data.append('phoneNumber', values.phoneNumber);\n          data.append('office', values.officeAddress);\n          data.append('isActive', values.status);\n          data.append('specialization', values.specialization);\n          data.append('is_varified', values.isVerified);\n          data.append('is_deleted', 0);\n          data.append('role_id', roleList ? roleList.find((rol) => rol.role_name === values.role)?.id || '' : '');\n          data.append(\n            'department_id',\n            departmentList?.find((dep) => dep.department_name === values.department)?.id || '' || ''\n          );\n          axios.post('http://localhost:8080/Supervisor/saveSupervisor', data, {\n            headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json'\n            }\n          });\n          // axios.post('http://localhost:8080/Supervisor/saveSupervisor', {\n          //   user_name: values.cmsId,\n          //   name: values.name,\n          //   email: values.email,\n          //   password: values.password,\n          //   phoneNumber: values.phoneNumber,\n          //   office: values.officeAddress,\n          //   specialization: values.specialization,\n          //   isActive: values.status,\n          //   is_varified: values.isVerified,\n          //   imgUrl: values.imgUrl,\n          //   is_deleted: 0,\n          //   role_id: roleList ? roleList.find((rol) => rol.role_name === values.role)?.id || '' : '',\n          //   department_id: departmentList?.find((dep) => dep.department_name === values.department)?.id || '' || ''\n          // });\n        }\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n        navigate(\n          user.role.role_name === 'Super Admin' || user.role.role_name === 'Coordinator'\n            ? PATH_DASHBOARD.user.list\n            : PATH_DASHBOARD.general.userProfile\n        );\n      } catch (error) {\n        console.error(error);\n        alert(error.error.errors[0].message || 'not submitted');\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      setFieldValue(\n        'avatarUrl',\n        Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        })\n      );\n    },\n    [setFieldValue]\n  );\n  const handleShowPassword = () => {\n    setShowPassword((show) => !show);\n  };\n  const getRoleListFiltered = () =>\n    roleList.filter((role) => role.role_name !== 'Super Admin' && role.role_name !== 'Student');\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <Card sx={{ py: 10, px: 3 }}>\n              <Label\n                color={values.status !== 1 ? 'error' : 'success'}\n                sx={{ textTransform: 'uppercase', position: 'absolute', top: 24, right: 24 }}\n              >\n                {values.status === 1 ? 'active' : 'banned'}\n              </Label>\n              <Box sx={{ mb: 5 }}>\n                <UploadAvatar\n                  accept=\"image/*\"\n                  file={values.avatarUrl}\n                  maxSize={3145728}\n                  onDrop={handleDrop}\n                  error={Boolean(touched.avatarUrl && errors.avatarUrl)}\n                  caption={\n                    <Typography\n                      variant=\"caption\"\n                      sx={{\n                        mt: 2,\n                        mx: 'auto',\n                        display: 'block',\n                        textAlign: 'center',\n                        color: 'text.secondary'\n                      }}\n                    >\n                      Allowed *.jpeg, *.jpg, *.png, *.gif\n                      <br /> max size of {fData(3145728)}\n                    </Typography>\n                  }\n                />\n\n                {/* <FormHelperText error sx={{ px: 2, textAlign: 'center' }}>\n                  {touched.avatarUrl && errors.avatarUrl}\n                </FormHelperText> */}\n              </Box>\n              <FormControlLabel\n                disabled={user.role.role_name === 'Supervisor'}\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    onChange={(event) => setFieldValue('status', event.target.checked ? 1 : 0)}\n                    checked={values.status === 1}\n                  />\n                }\n                label={\n                  <>\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                      Banned\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                      Apply disable User\n                    </Typography>\n                  </>\n                }\n                sx={{ mx: 0, mb: 3, width: 1, justifyContent: 'space-between' }}\n              />\n\n              <FormControlLabel\n                disabled={user.role.role_name === 'Supervisor'}\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    {...getFieldProps('isVerified')}\n                    onChange={(event) => setFieldValue('isVerified', event.target.checked ? 1 : 0)}\n                    checked={values.isVerified === 1}\n                  />\n                }\n                label={\n                  <>\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                      Verified Status\n                    </Typography>\n                  </>\n                }\n                sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\n              />\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Full Name\"\n                    {...getFieldProps('name')}\n                    error={Boolean(touched.name && errors.name)}\n                    helperText={touched.name && errors.name}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Email\"\n                    {...getFieldProps('email')}\n                    error={Boolean(touched.email && errors.email)}\n                    helperText={touched.email && errors.email}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Phone Number\"\n                    {...getFieldProps('phoneNumber')}\n                    error={Boolean(touched.phoneNumber && errors.phoneNumber)}\n                    helperText={touched.phoneNumber && errors.phoneNumber}\n                  />\n                  <TextField\n                    disabled={user.role.role_name === 'Supervisor'}\n                    select\n                    fullWidth\n                    label=\"Role\"\n                    placeholder=\"role\"\n                    {...getFieldProps('role')}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.role && errors.role)}\n                    helperText={touched.role && errors.role}\n                  >\n                    {getRoleListFiltered().map((row) => (\n                      <option key={row.id}>{row.role_name}</option>\n                    ))}\n                  </TextField>\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    disabled={user.role.role_name === 'Supervisor'}\n                    fullWidth\n                    label=\"CMS ID\"\n                    {...getFieldProps('cmsId')}\n                    error={Boolean(touched.cmsId && errors.cmsId)}\n                    helperText={touched.cmsId && errors.cmsId}\n                  />\n                  <TextField\n                    disabled={user.role.role_name === 'Supervisor'}\n                    select\n                    fullWidth\n                    label=\"department\"\n                    placeholder=\"department\"\n                    {...getFieldProps('department')}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.department && errors.department)}\n                    helperText={touched.department && errors.department}\n                  >\n                    {departmentList.map((row) => (\n                      <option>{row.department_name}</option>\n                    ))}\n                  </TextField>\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  {/* <TextField\n                    fullWidth\n                    label=\"Password\"\n                    {...getFieldProps('password')}\n                    error={Boolean(touched.password && errors.password)}\n                    helperText={touched.password && errors.password}\n                  /> */}\n                  <TextField\n                    fullWidth\n                    autoComplete=\"current-password\"\n                    type={showPassword ? 'text' : 'password'}\n                    label=\"Password\"\n                    {...getFieldProps('password')}\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton onClick={handleShowPassword} edge=\"end\">\n                            <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                          </IconButton>\n                        </InputAdornment>\n                      )\n                    }}\n                    error={Boolean(touched.password && errors.password)}\n                    helperText={touched.password && errors.password}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Specialization\"\n                    {...getFieldProps('specialization')}\n                    error={Boolean(touched.specialization && errors.specialization)}\n                    helperText={touched.specialization && errors.specialization}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Office Address\"\n                    {...getFieldProps('officeAddress')}\n                    error={Boolean(touched.officeAddress && errors.officeAddress)}\n                    helperText={touched.officeAddress && errors.officeAddress}\n                  />\n                </Stack>\n\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                    {!isEdit ? 'Save' : 'Save Changes'}\n                  </LoadingButton>\n                </Box>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\meetings.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\instructor.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\reportType.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\assignedWork.js",["1477","1478"],"import { map, filter } from 'lodash';\nimport { createSlice } from '@reduxjs/toolkit';\n// utils\nimport axios from '../../utils/axios';\n\n// ----------------------------------------------------------------------\n\nconst initialState = {\n  isLoading: false,\n  error: false,\n  myProfile: null,\n  assignedWorkList: []\n};\n\nconst slice = createSlice({\n  name: 'assignedWork',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    // GET USERS\n    getAssignedWorkSuccess(state, action) {\n      state.isLoading = false;\n      state.batch = action.payload;\n    },\n\n    // DELETE USERS\n    deleteAssignedWork(state, action) {\n      const deleteUser = filter(state.batchList, (batch) => batch.id !== action.payload);\n      state.assignedWorkList = deleteUser;\n    },\n    saveAnnouncement(state, action) {\n      state.isLoading = false;\n    },\n\n    // GET MANAGE USERS\n    getAssignedWorkListSuccess(state, action) {\n      state.isLoading = false;\n      state.assignedWorkList = action.payload;\n    }\n  }\n});\n\n// Reducer\nexport default slice.reducer;\nexport const { deleteAssignedWork } = slice.actions;\n// ----------------------------------------------------------------------\n\nexport function getAssignedWorkList() {\n  return async (dispatch) => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('http://localhost:8080/AssignedWork/showAllAssignedWork');\n      console.log('assignedWork', response.data);\n      dispatch(slice.actions.getAssignedWorkListSuccess(response.data));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\nexport function getAssignedWorkByBatch(id) {\n  return async (dispatch) => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.post('http://localhost:8080/AssignedWork/showAssignedWorkByBatch', {\n        batch_id: id\n      });\n      console.log('assignedWork', response.data);\n      dispatch(slice.actions.getAssignedWorkListSuccess(response.data));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\AnnouncementMoreMenu.js",["1479","1480"],"import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { paramCase } from 'change-case';\nimport { useRef, useState } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n// material\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\n\n// ----------------------------------------------------------------------\n\nAnnouncementMoreMenu.propTypes = {\n  onDelete: PropTypes.func,\n  userName: PropTypes.object\n};\n\nexport default function AnnouncementMoreMenu({ onDelete, userName }) {\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' }\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuItem onClick={onDelete} sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={trash2Outline} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n\n        <MenuItem\n          component={RouterLink}\n          to={`${PATH_DASHBOARD.user.root}/announcementedit`}\n          sx={{ color: 'text.secondary' }}\n        >\n          <ListItemIcon>\n            <Icon icon={editFill} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Edit\" primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\batch.js",["1481"],"import { map, filter } from 'lodash';\nimport { createSlice } from '@reduxjs/toolkit';\n// utils\nimport axios from '../../utils/axios';\n\n// ----------------------------------------------------------------------\n\nconst initialState = {\n  isLoading: false,\n  error: false,\n  myProfile: null,\n  batch: [],\n  batchesList: [],\n  studentList: []\n};\n\nconst slice = createSlice({\n  name: 'batch',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    // GET USERS\n    getBatchSuccess(state, action) {\n      state.isLoading = false;\n      state.batch = action.payload;\n    },\n\n    // DELETE USERS\n    deleteBatch(state, action) {\n      const deleteUser = filter(state.batchList, (batch) => batch.id !== action.payload);\n      state.batchList = deleteUser;\n    },\n\n    // GET MANAGE USERS\n    getBatchListSuccess(state, action) {\n      state.isLoading = false;\n      state.batchesList = action.payload;\n    },\n    getStudentsSuccess(state, action) {\n      state.isLoading = false;\n      state.studentList = action.payload;\n    }\n  }\n});\n\n// Reducer\nexport default slice.reducer;\nexport const { deleteBatch } = slice.actions;\n// ----------------------------------------------------------------------\n\nexport function getBatchesList() {\n  return async (dispatch) => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('http://localhost:8080/Batch/showAllBatches');\n      dispatch(slice.actions.getBatchListSuccess(response.data));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\nexport function getBatch(id) {\n  return async (dispatch) => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.post('http://localhost:8080/Batch/showBatchById', {\n        id\n      });\n      dispatch(slice.actions.getBatchSuccess(response.data));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\nexport function getStudentByBatch(id) {\n  return async (dispatch) => {\n    dispatch(slice.actions.startLoading());\n    console.log('id', id);\n    try {\n      const response = await axios.post('http://localhost:8080/Batch/showStudentByBatch', {\n        id\n      });\n      console.log('batch', response.data);\n      dispatch(slice.actions.getStudentsSuccess(response.data.students));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n\nexport function getAllStudent() {\n  return async (dispatch) => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('http://localhost:8080/Student/showAllStudents');\n      console.log('batch', response.data);\n      dispatch(slice.actions.getStudentsSuccess(response.data));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\BatchNewForm.js",["1482","1483","1484","1485","1486","1487","1488"],"import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Box,\n  Card,\n  Grid,\n  Stack,\n  Switch,\n  TextField,\n  Typography,\n  FormHelperText,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  FormControl,\n  FormLabel\n} from '@mui/material';\n\n// utils\nimport { fData } from '../../../utils/formatNumber';\nimport fakeRequest from '../../../utils/fakeRequest';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport Label from '../../Label';\n\nimport { UploadAvatar } from '../../upload';\nimport axios from '../../../utils/axios';\n\nconst { yearsGenerator } = require('dates-generator');\n\n// ----------------------------------------------------------------------\n\nBatchNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentUser: PropTypes.object\n};\n\nexport default function BatchNewForm({ isEdit, currentUser }) {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const NewUserSchema = Yup.object().shape({\n    year: Yup.string().required('Year is required'),\n    batch: Yup.string().required('Batch is required')\n    // avatarUrl: Yup.mixed().required('Avatar is required')\n  });\n  const getBatchSeason = (temp) => {\n    const b = temp.batch;\n    const array = b.split('-');\n    return array[0];\n  };\n  const getBatchYear = (temp) => {\n    const b = temp.batch;\n    const array = b.split('-');\n    return array[1];\n  };\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      batch: currentUser ? getBatchSeason(currentUser) : '',\n      year: currentUser ? getBatchYear(currentUser) : '',\n      isActive: currentUser?.isActive || 0\n    },\n    validationSchema: NewUserSchema,\n\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      try {\n        console.log(String(values.batch).concat('-', String(values.year)), values);\n        if (isEdit) {\n          await axios.post('http://localhost:8080/Batch/updateBatch', {\n            id: currentUser.id,\n            batch: String(values.batch).concat('-', String(values.year)),\n            isActive: values.isActive\n          });\n        } else {\n          await axios.post('http://localhost:8080/Batch/saveBatch', {\n            batch: String(values.batch).concat('-', String(values.year)),\n            isActive: values.isActive,\n            is_deleted: 0\n          });\n        }\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n        navigate(PATH_DASHBOARD.user.userbatch);\n      } catch (error) {\n        alert(error.error.errors[0].message || 'not submitted');\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      if (file) {\n        setFieldValue('avatarUrl', {\n          ...file,\n          preview: URL.createObjectURL(file)\n        });\n      }\n    },\n    [setFieldValue]\n  );\n  const [valueRB, setValue] = React.useState('Fall');\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  // dates........\n  const presentDay = new Date();\n  const year = presentDay.getFullYear();\n  const years = yearsGenerator(year - 10, year);\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <Card sx={{ py: 10, px: 3 }}>\n              <Label\n                color={values.isActive !== 1 ? 'error' : 'success'}\n                sx={{ textTransform: 'uppercase', position: 'absolute', top: 24, right: 24 }}\n              >\n                {values.isActive === 1 ? 'active' : 'banned'}\n              </Label>\n              <FormControlLabel\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    onChange={(event) => setFieldValue('isActive', event.target.checked ? 1 : 0)}\n                    checked={values.isActive === 1}\n                  />\n                }\n                label={\n                  <>\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                      Banned\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                      Apply disable account\n                    </Typography>\n                  </>\n                }\n                sx={{ mx: 0, mb: 3, width: 1, justifyContent: 'space-between' }}\n              />\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <FormControl component=\"fieldset\" style={{ width: 200 }}>\n                    <FormLabel component=\"legend\">Batch</FormLabel>\n                    <RadioGroup\n                      aria-label=\"batch\"\n                      name=\"controlled-radio-buttons-group\"\n                      value={valueRB}\n                      onChange={(event) => setFieldValue('batch', event.target.value)}\n                    >\n                      <FormControlLabel\n                        value=\"Spring\"\n                        control={<Radio checked={values.batch === 'Spring'} />}\n                        label=\"Spring\"\n                      />\n                      <FormControlLabel\n                        value=\"Fall\"\n                        control={<Radio checked={values.batch === 'Fall'} />}\n                        label=\"Fall\"\n                      />\n                    </RadioGroup>\n                  </FormControl>\n\n                  <TextField\n                    style={{ width: 200 }}\n                    select\n                    label=\"Year\"\n                    {...getFieldProps('year')}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.isActive && errors.isActive)}\n                    helperText={touched.isActive && errors.isActive}\n                  >\n                    <option>Select Year</option>\n                    {years\n                      .sort()\n                      .reverse()\n                      .map((y) => (\n                        <option>{y}</option>\n                      ))}\n                  </TextField>\n                </Stack>\n\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                    {!isEdit ? 'Create Batch' : 'Save Changes'}\n                  </LoadingButton>\n                </Box>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\BatchMoreMenu.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\RoleNewForm.js",["1489","1490","1491","1492","1493"],"import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useCallback } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Card, Grid, Stack, Switch, TextField, Typography, FormHelperText, FormControlLabel } from '@mui/material';\n// utils\nimport { fData } from '../../../utils/formatNumber';\nimport fakeRequest from '../../../utils/fakeRequest';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport Label from '../../Label';\n// utils\nimport axios from '../../../utils/axios';\n\nimport { UploadAvatar } from '../../upload';\n\n// ----------------------------------------------------------------------\n\nUserNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentUser: PropTypes.object\n};\n\nexport default function UserNewForm({ isEdit, currentUser }) {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const NewUserSchema = Yup.object().shape({\n    role: Yup.string().required('role is required'),\n    roleDescription: Yup.string().required('Role Description is required'),\n    isActive: Yup.string().required('Active Status is required')\n  });\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      role: currentUser?.role_name || '',\n      roleDescription: currentUser?.role_description || '',\n      isActive: currentUser?.isActive || 0\n      // isVerified: currentUser?.isVerified || true,\n      // status: currentUser?.status\n    },\n    validationSchema: NewUserSchema,\n    onSubmit: (values, { setSubmitting, resetForm, setErrors }) => {\n      try {\n        if (isEdit) {\n          console.log('values', values);\n          axios.post('http://localhost:8080/Role/updateRole', {\n            id: currentUser.id,\n            role_name: values.role,\n            role_description: values.roleDescription,\n            isActive: values.isActive\n          });\n        } else {\n          axios.post('http://localhost:8080/Role/saveRole', {\n            role_name: values.role,\n            role_description: values.roleDescription,\n            isActive: values.isActive\n          });\n        }\n\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n        navigate(PATH_DASHBOARD.user.userRole);\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      if (file) {\n        setFieldValue('avatarUrl', {\n          ...file,\n          preview: URL.createObjectURL(file)\n        });\n      }\n    },\n    [setFieldValue]\n  );\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <Card sx={{ py: 10, px: 3 }}>\n              <Label\n                color={values.isActive !== 1 ? 'error' : 'success'}\n                sx={{ textTransform: 'uppercase', position: 'absolute', top: 24, right: 24 }}\n              >\n                {values.isActive === 1 ? 'active' : 'banned'}\n              </Label>\n              <FormControlLabel\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    onChange={(event) => setFieldValue('isActive', event.target.checked ? 1 : 0)}\n                    checked={values.isActive === 1}\n                  />\n                }\n                label={\n                  <>\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                      Banned\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                      Apply disable account\n                    </Typography>\n                  </>\n                }\n                sx={{ mx: 0, mb: 3, width: 1, justifyContent: 'space-between' }}\n              />\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Role\"\n                    {...getFieldProps('role')}\n                    error={Boolean(touched.role && errors.role)}\n                    helperText={touched.role && errors.role}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Role Description\"\n                    {...getFieldProps('roleDescription')}\n                    error={Boolean(touched.roleDescription && errors.roleDescription)}\n                    helperText={touched.roleDescription && errors.roleDescription}\n                  />\n                </Stack>\n\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                    {!isEdit ? 'Create Role' : 'Save Changes'}\n                  </LoadingButton>\n                </Box>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\role.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\ApproveGroupForm.js",["1494","1495","1496","1497","1498","1499","1500"],"import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useCallback, useEffect } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Card, Grid, Stack, Switch, TextField, Typography, FormHelperText, FormControlLabel } from '@mui/material';\n// utils\nimport { fData } from '../../../utils/formatNumber';\nimport fakeRequest from '../../../utils/fakeRequest';\n\n// redux\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getInstructorList } from '../../../redux/slices/instructor';\nimport { getDepartmentList } from '../../../redux/slices/department';\nimport { getRoleList } from '../../../redux/slices/role';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport Label from '../../Label';\n\nimport axios from '../../../utils/axios';\n\nimport { UploadAvatar } from '../../upload';\n\n// ----------------------------------------------------------------------\n\nApproveGroupForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentUser: PropTypes.object\n};\n\nexport default function ApproveGroupForm({ isEdit, currentUser }) {\n  console.log(currentUser);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const { departmentList } = useSelector((state) => state.department);\n  const { roleList } = useSelector((state) => state.role);\n  const { userList } = useSelector((state) => state.instructor);\n  const NewUserSchema = Yup.object().shape({\n    member1: Yup.string().required('Member 1 is required'),\n    member1cms: Yup.string().required('Member 1 CMS ID is required'),\n    member2: Yup.string().required('Member 2 is required'),\n    member2cms: Yup.string().required('Member 2 CMS ID is required'),\n    member3: Yup.string().required('Member 3 required'),\n    member3cms: Yup.string().required('Member 3 CMS ID is required'),\n    supervisor: Yup.string().required('Please select a supervisor')\n  });\n  useEffect(() => {\n    dispatch(getDepartmentList());\n    dispatch(getRoleList());\n    dispatch(getInstructorList());\n  }, [dispatch]);\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      member1: currentUser?.students[0]?.user.name || '' || '',\n      member1cms: currentUser?.students[0]?.user_id || '' || '',\n      member2: currentUser?.students[1]?.user.name || '',\n      member2cms: currentUser?.students[1]?.user_id || '' || '',\n      member3: currentUser?.students[2]?.user.name || '' || 'Not Available',\n      member3cms: currentUser?.students[2]?.user_id || '' || 'Not Available',\n      status: currentUser?.groupStatus || 1,\n      supervisor: currentUser?.supervisor_id\n        ? userList.find((user) => user.id === currentUser.supervisor_id)?.user.name\n        : '' || ''\n    },\n    validationSchema: NewUserSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      console.log(\n        'caluse',\n        userList.find((user) => user.id === values.supervisor)\n      );\n      try {\n        axios.post('http://localhost:8080/Group/addSupervisor', {\n          id: currentUser.id,\n          groupStatus: values.status,\n          supervisor_id: userList.find((user) => user.user.name === values.supervisor)?.user.id || '' || ''\n        });\n        //   if (isEdit) {\n        //     axios.post('http://localhost:8080/Supervisor/updateSupervisor', {\n        //       id: currentUser.id,\n        //       user_name: values.cmsId,\n        //       name: values.name,\n        //       email: values.email,\n        //       password: values.password,\n        //       phoneNumber: values.phoneNumber,\n        //       office: values.officeAddress,\n        //       specialization: values.specialization,\n        //       is_varified: values.isVerified,\n        //       isActive: values.status,\n        //       imgUrl: values.imgUrl,\n        //       role_id: roleList ? roleList.find((rol) => rol.role_name === values.role)?.id || '' : '',\n        //       department_id: departmentList?.find((dep) => dep.department_name === values.department)?.id || '' || ''\n        //     });\n        //   } else {\n        //     axios.post('http://localhost:8080/Supervisor/saveSupervisor', {\n        //       user_name: values.cmsId,\n        //       name: values.name,\n        //       email: values.email,\n        //       password: values.password,\n        //       phoneNumber: values.phoneNumber,\n        //       office: values.officeAddress,\n        //       specialization: values.specialization,\n        //       isActive: values.status,\n        //       is_varified: values.isVerified,\n        //       imgUrl: values.imgUrl,\n        //       is_deleted: 0,\n        //       role_id: roleList ? roleList.find((rol) => rol.role_name === values.role)?.id || '' : '',\n        //       department_id: departmentList?.find((dep) => dep.department_name === values.department)?.id || '' || ''\n        //     });\n        // }\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n        navigate(PATH_DASHBOARD.general.viewGroups);\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n      if (file) {\n        setFieldValue('avatarUrl', {\n          ...file,\n          preview: URL.createObjectURL(file)\n        });\n      }\n    },\n    [setFieldValue]\n  );\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={4}>\n            <Card sx={{ py: 10, px: 3 }}>\n              <Label\n                color={values.status !== 1 ? 'error' : 'success'}\n                sx={{ textTransform: 'uppercase', position: 'absolute', top: 24, right: 24 }}\n              >\n                {values.status === 1 ? 'approved' : 'rejected'}\n              </Label>\n\n              <FormControlLabel\n                labelPlacement=\"start\"\n                control={\n                  <Switch\n                    onChange={(event) => setFieldValue('status', event.target.checked ? 1 : 0)}\n                    checked={values.status === 1}\n                  />\n                }\n                label={\n                  <>\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                      Approval Status\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                      Approve or Reject Group\n                    </Typography>\n                  </>\n                }\n                sx={{ mx: 0, mb: 3, width: 1, justifyContent: 'space-between' }}\n              />\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Member 1\"\n                    {...getFieldProps('member1')}\n                    error={Boolean(touched.member1 && errors.member1)}\n                    helperText={touched.member1 && errors.member1}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Member 1 CMS ID\"\n                    {...getFieldProps('member1cms')}\n                    error={Boolean(touched.member1cms && errors.member1cms)}\n                    helperText={touched.member1cms && errors.member1cms}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Member 2\"\n                    {...getFieldProps('member2')}\n                    error={Boolean(touched.member2 && errors.member2)}\n                    helperText={touched.member2 && errors.member2}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Member 2 CMS ID\"\n                    {...getFieldProps('member2cms')}\n                    error={Boolean(touched.member2cms && errors.member2cms)}\n                    helperText={touched.member2cms && errors.member2cms}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    fullWidth\n                    label=\"Member 3\"\n                    {...getFieldProps('member3')}\n                    error={Boolean(touched.member3 && errors.member3)}\n                    helperText={touched.member3 && errors.member3}\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Member 3 CMS ID\"\n                    {...getFieldProps('member3cms')}\n                    error={Boolean(touched.member3cms && errors.member3cms)}\n                    helperText={touched.member3cms && errors.member3cms}\n                  />\n                </Stack>\n\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\n                  <TextField\n                    select\n                    fullWidth\n                    label=\"Assign Supervisor\"\n                    placeholder=\"role\"\n                    {...getFieldProps('supervisor')}\n                    SelectProps={{ native: true }}\n                    error={Boolean(touched.supervisor && errors.supervisor)}\n                    helperText={touched.supervisor && errors.supervisor}\n                  >\n                    {userList.map((row) => (\n                      <option key={row.id}>{row.user.name}</option>\n                    ))}\n                  </TextField>\n                </Stack>\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                    {!isEdit ? 'Save Changes' : 'Save Changes'}\n                  </LoadingButton>\n                </Box>\n              </Stack>\n            </Card>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageViewAnnouncementCard.js",["1501","1502","1503","1504","1505","1506","1507","1508","1509","1510","1511","1512"],"import { Icon } from '@iconify/react';\nimport { useEffect } from 'react';\nimport androidFilled from '@iconify/icons-ant-design/android-filled';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Card, Typography, Grid, Container } from '@mui/material';\n// hooks\nimport useSettings from '../hooks/useSettings';\n// utils\n\nimport { useDispatch, useSelector } from '../redux/store';\nimport { getUserList } from '../redux/slices/user';\nimport { getBatchesList } from '../redux/slices/batch';\nimport { fShortenNumber } from '../utils/formatNumber';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n  boxShadow: 'none',\n  // textAlign: 'center',\n  padding: theme.spacing(2, 3),\n  color: theme.palette.primary.darker,\n  backgroundColor: theme.palette.primary.lighter\n}));\n\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\n  margin: 'auto',\n  display: 'flex',\n  borderRadius: '50%',\n  alignItems: 'center',\n  width: theme.spacing(8),\n  height: theme.spacing(8),\n  justifyContent: 'center',\n  marginBottom: theme.spacing(3),\n  color: theme.palette.primary.dark,\n  backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.primary.dark, 0)} 0%, ${alpha(\n    theme.palette.primary.dark,\n    0.24\n  )} 100%)`\n}));\n\n// ----------------------------------------------------------------------\n\nconst TOTAL = 714000;\n\nexport default function PageViewAnnouncementCard({ data }) {\n  const dispatch = useDispatch();\n  const { userList } = useSelector((state) => state.user);\n  const { batchesList } = useSelector((state) => state.batch);\n  const { themeStretch } = useSettings();\n  useEffect(() => {\n    dispatch(getUserList());\n    dispatch(getBatchesList());\n  }, [dispatch]);\n  const getDate = (date) => {\n    const newDate = new Date(date);\n    return String(newDate.toLocaleString('en-US'));\n  };\n  return (\n    <RootStyle>\n      {/* <IconWrapperStyle>\n        <Icon icon={androidFilled} width={24} height={24} />\n      </IconWrapperStyle> */}\n      <Typography variant=\"h5\">{data.title}</Typography>\n      <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n        <div dangerouslySetInnerHTML={{ __html: data.description }} />\n      </Typography>\n      <br />\n      <br />\n      <Container maxWidth={themeStretch ? false : 'xl'}>\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={6} md={4}>\n            <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n              Batch: {batchesList?.find((batch) => batch.id === data.batch_id)?.batch || 'All' || ''}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n              Announced by: {userList?.find((user) => user.id === data.supervisor_id)?.name || '' || ''}\n            </Typography>\n          </Grid>\n          <Grid item xs={12} sm={6} md={4}>\n            <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n              Posted at: {getDate(data.createdAt)}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Container>\n    </RootStyle>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\student.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\pages\\PageSubmitReportStepper.js",["1513","1514","1515","1516"],"import * as React from 'react';\nimport { useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { SnackbarProvider } from 'notistack';\nimport SubmitReportsNewForm from '../components/_dashboard/user/SubmitReportsNewForm';\nimport useAuth from '../hooks/useAuth';\nimport { useDispatch, useSelector } from '../redux/store';\nimport { getReportsWithAssignedWorkByGroupId, getReportTypeList } from '../redux/slices/reportType';\nimport { getBatchesList } from '../redux/slices/batch';\nimport { getGroupList } from '../redux/slices/group';\n\nconst steps = ['Abstract', 'Proposal', 'SRS/SDS', 'Final Report'];\n\nexport default function HorizontalLinearStepper() {\n  const dispatch = useDispatch();\n  const { reportData, reportTypeList, student } = useSelector((state) => state.reportType);\n  const { batchesList } = useSelector((state) => state.batch);\n  const { groupList } = useSelector((state) => state.group);\n  const { user } = useAuth();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n\n  const callDispatch = () => {\n    dispatch(\n      user.role.role_name === 'Student' ? getReportsWithAssignedWorkByGroupId(user?.id || '') : getReportTypeList()\n    );\n  };\n\n  useEffect(() => {\n    callDispatch();\n    dispatch(getGroupList());\n    dispatch(getBatchesList());\n  }, [dispatch]);\n\n  const isStepOptional = (step) => step === 1;\n\n  const isStepSkipped = (step) => skipped.has(step);\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      // You probably want to guard against something like this,\n      // it should never occur unless someone's actively trying to break something.\n      throw new Error(\"You can't skip a step that isn't optional.\");\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Stepper activeStep={activeStep}>\n        {reportData.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          //   if (isStepOptional(index)) {\n          //     labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n          //   }\n          //   if (isStepSkipped(index)) {\n          //     stepProps.completed = false;\n          //   }\n          return (\n            <Step key={label.id} {...stepProps}>\n              <StepLabel {...labelProps}>{label.report_type}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      {activeStep === reportData.length ? (\n        <>\n          {/* <React.Fragment> */}\n          <Typography sx={{ mt: 2, mb: 1 }}>All steps completed - you&apos;re finished</Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n            <Box sx={{ flex: '1 1 auto' }} />\n            <Button onClick={handleReset}>Reset</Button>\n          </Box>\n          {/* </React.Fragment> */}\n        </>\n      ) : (\n        <>\n          {/* <React.Fragment> */}\n          <Typography sx={{ mt: 2, mb: 1 }}>Step {activeStep + 1}</Typography>\n          <SnackbarProvider>\n            <SubmitReportsNewForm\n              msg={activeStep + 1}\n              reportData={reportData[activeStep]}\n              batch={\n                user.role.role_name === 'Student'\n                  ? batchesList.find((batch) => batch.id === student?.batch_id)?.batch || 'Not Available'\n                  : 'Not Available'\n              }\n              group={\n                user.role.role_name === 'Student'\n                  ? groupList?.find((group) => group.id === student.group_id) || null\n                  : null\n              }\n              callDispatch={callDispatch}\n            />\n          </SnackbarProvider>\n\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n            <Button color=\"inherit\" disabled={activeStep === 0} onClick={handleBack} sx={{ mr: 1 }}>\n              Back\n            </Button>\n            <Box sx={{ flex: '1 1 auto' }} />\n            {/* {isStepOptional(activeStep) && (\n              <Button color=\"inherit\" onClick={handleSkip} sx={{ mr: 1 }}>\n                Skip\n              </Button>\n            )} */}\n\n            <Button onClick={handleNext} disabled={activeStep === steps.length - 1}>\n              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n            </Button>\n          </Box>\n          {/* </React.Fragment> */}\n        </>\n      )}\n    </Box>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\SubmitReportsNewForm.js",["1517","1518","1519","1520","1521","1522","1523","1524","1525","1526","1527","1528","1529","1530","1531","1532","1533","1534","1535","1536","1537","1538","1539","1540","1541","1542","1543","1544","1545","1546","1547","1548","1549","1550","1551","1552","1553","1554","1555","1556","1557","1558","1559","1560","1561","1562","1563","1564","1565","1566","1567","1568","1569","1570","1571","1572","1573","1574","1575","1576","1577","1578","1579","1580","1581","1582","1583","1584","1585","1586","1587","1588","1589","1590","1591","1592","1593","1594","1595","1596","1597","1598","1599","1600","1601","1602","1603","1604","1605","1606","1607","1608","1609","1610","1611","1612","1613","1614","1615","1616","1617","1618","1619","1620","1621","1622","1623","1624","1625","1626","1627","1628","1629","1630","1631"],"import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useCallback, useEffect } from 'react';\nimport { Form, FormikProvider, useFormik } from 'formik';\nimport { formatDistanceToNow, formatDistance } from 'date-fns';\n// material\nimport { useTheme, styled, alpha } from '@mui/material/styles';\nimport { Card, Grid, Stack, Button, Divider, CardContent, CardHeader, Typography, FormHelperText } from '@mui/material';\nimport { Assignment } from '@mui/icons-material';\nimport download from 'downloadjs';\nimport Label from '../../Label';\n// utils\n// routes\n\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport { UploadMultiFile } from '../../upload';\nimport axios from '../../../utils/axios';\n\n// ----------------------------------------------------------------------\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1)\n}));\n\n// ----------------------------------------------------------------------\n\nSubmitReportsNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentProduct: PropTypes.object\n};\n\nexport default function SubmitReportsNewForm({ isEdit, currentProduct, msg, reportData, batch, group, callDispatch }) {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n  const NewProductSchema = Yup.object().shape({\n    files: Yup.array().min(1, 'Files are required')\n  });\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      files: currentProduct?.files || []\n    },\n    validationSchema: NewProductSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      console.log(values.files[0]);\n      const formdata = new FormData();\n      let response;\n      try {\n        if (reportData.assigned_work.group_submitted_file === null) {\n          response = await axios.post('http://localhost:8080/saveGroupFiles/saveGroupSubmission', {\n            group_id: group.id,\n            assigned_work_id: reportData.assigned_work.id,\n            submission_date_time: String(new Date())\n          });\n          console.log(response);\n          values.files.map((file) => {\n            formdata.append('file', file);\n            formdata.append('group_submitted_files_id', response.data.id);\n            return axios.post('http://localhost:8080/File/saveFiles', formdata);\n          });\n        } else {\n          axios.post('http://localhost:8080/saveGroupFiles/updateGroupSubmission', {\n            id: reportData.assigned_work.group_submitted_file.id,\n            submission_date_time: String(new Date())\n          });\n          console.log(values.files);\n          values.files.map((file) => {\n            formdata.append('file', file);\n            formdata.append('group_submitted_files_id', reportData.assigned_work.group_submitted_file.id);\n            return axios.post('http://localhost:8080/File/updateFiles', formdata);\n          });\n        }\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(reportData.assigned_work.group_submitted_file === null ? 'Create success' : 'Update success', {\n          variant: 'success'\n        });\n        callDispatch();\n        navigate(PATH_DASHBOARD.eCommerce.list);\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      setFieldValue(\n        'files',\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })\n        )\n      );\n    },\n    [setFieldValue]\n  );\n\n  const handleRemoveAll = () => {\n    setFieldValue('files', []);\n  };\n\n  const handleRemove = (file) => {\n    const filteredItems = values.files.filter((_file) => _file !== file);\n    setFieldValue('files', filteredItems);\n  };\n\n  const getColor = () => {\n    let color = '';\n    if (reportData.assigned_work !== null) {\n      if (reportData.assigned_work.group_submitted_file !== null) {\n        if (\n          new Date(reportData.assigned_work.deadLine) >\n          new Date(reportData.assigned_work.group_submitted_file.submission_date_time)\n        ) {\n          color = 'success';\n        } else {\n          color = 'error';\n        }\n      } else {\n        const date = new Date(reportData.assigned_work.deadLine);\n        if (new Date(reportData.assigned_work.deadLine) < new Date()) {\n          color = 'error';\n        } else {\n          color = 'warning';\n        }\n      }\n    } else {\n      color = 'warning';\n    }\n    return color;\n  };\n  const getDisabledStatus = () => {\n    let result;\n    if (reportData.assigned_work === null) {\n      result = true;\n    } else if (group.groupStatus !== 1) {\n      result = true;\n    } else {\n      result = false;\n    }\n\n    return result;\n  };\n\n  const getStatus = () => {\n    let result = '';\n    if (reportData.assigned_work !== null) {\n      if (reportData.assigned_work.group_submitted_file !== null) {\n        if (\n          new Date(reportData.assigned_work.deadLine) >\n          new Date(reportData.assigned_work.group_submitted_file.submission_date_time)\n        ) {\n          result = String('submitted ').concat(\n            String(\n              formatDistance(\n                new Date(reportData.assigned_work.deadLine),\n                new Date(reportData.assigned_work.group_submitted_file.submission_date_time)\n              )\n            ),\n            ' before'\n          );\n        } else {\n          result = String('submitted ').concat(\n            String(\n              formatDistance(\n                new Date(reportData.assigned_work.deadLine),\n                new Date(reportData.assigned_work.group_submitted_file.submission_date_time)\n              )\n            ),\n            ' late'\n          );\n        }\n      } else {\n        const date = new Date(reportData.assigned_work.deadLine);\n        if (new Date(reportData.assigned_work.deadLine) < new Date()) {\n          result = String(formatDistanceToNow(new Date(reportData.assigned_work.deadLine))).concat(' ', 'late');\n        } else {\n          result = String(formatDistanceToNow(new Date(reportData.assigned_work.deadLine))).concat(' ', 'Remaining');\n        }\n      }\n    } else {\n      result = 'Not Posted yet.';\n    }\n    return result;\n  };\n  const getDate = (date) => {\n    const newDate = new Date(date);\n    return String(newDate.toLocaleString('en-US'));\n  };\n  const downloadFile = async (files) => {\n    const method = 'GET';\n    const url = `http://localhost:8080/File/download/${files[0].file_name}`;\n    axios\n      .request({\n        url,\n        method,\n        responseType: 'blob'\n      })\n      .then(({ data }) => {\n        const downloadUrl = window.URL.createObjectURL(new Blob([data]));\n        const link = document.createElement('a');\n        link.href = downloadUrl;\n        link.setAttribute('download', files[0].file_name);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n      });\n  };\n  const getGroupColor = () => {\n    let result;\n    console.log(group);\n    if (group !== null) {\n      if (group.groupStatus === 0) {\n        result = 'error';\n      } else if (group.groupStatus === 1) {\n        result = 'success';\n      } else {\n        result = 'warning';\n      }\n    } else {\n      result = 'error';\n    }\n    return result;\n  };\n  const getGroupStatus = () => {\n    let result;\n    console.log(group);\n    if (group !== null) {\n      if (group.groupStatus === 0) {\n        result = 'Rejected';\n      } else if (group.groupStatus === 1) {\n        result = 'Approved';\n      } else {\n        result = 'in Progress';\n      }\n    } else {\n      result = 'Not created yet';\n    }\n    return result;\n  };\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <LabelStyle>\n                  <b>{reportData.assigned_work?.title}</b>\n                  <div\n                    dangerouslySetInnerHTML={{ __html: reportData.assigned_work?.description || 'Not Posted Yet' }}\n                  />\n                </LabelStyle>\n                <div>\n                  <LabelStyle>Add Files</LabelStyle>\n                  <UploadMultiFile\n                    disabled={getDisabledStatus()}\n                    showPreview={false}\n                    files={values.files}\n                    onDrop={handleDrop}\n                    onRemove={handleRemove}\n                    onRemoveAll={handleRemoveAll}\n                    onUpload={handleSubmit}\n                    error={Boolean(touched.files && errors.files)}\n                  />\n                  {touched.files && errors.files && (\n                    <FormHelperText error sx={{ px: 2 }}>\n                      {touched.files && errors.files}\n                    </FormHelperText>\n                  )}\n                </div>\n              </Stack>\n            </Card>\n            {reportData.assigned_work?.group_submitted_file ? (\n              <Card sx={{ p: 3, mt: 3 }}>\n                <Stack spacing={3}>\n                  <Stack direction=\"row\">\n                    <Button\n                      sx={{ width: '100%', display: 'flex', justifyContent: 'flex-start' }}\n                      onClick={() => downloadFile(reportData.assigned_work?.group_submitted_file.files)}\n                    >\n                      <Assignment /> {reportData.assigned_work?.group_submitted_file.files[0].file_name}\n                    </Button>\n                  </Stack>\n                </Stack>\n              </Card>\n            ) : null}\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <Stack spacing={3}>\n              <Card sx={{ mb: 3 }}>\n                <CardHeader title={group?.project_title || 'Not Available'} />\n\n                <Divider />\n                <CardContent>\n                  <Stack spacing={2}>\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                        Group Status:\n                      </Typography>\n                      <Typography variant=\"subtitle2\">\n                        <Label variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'} color={getGroupColor()}>\n                          {getGroupStatus()}\n                        </Label>\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                        Member 1:\n                      </Typography>\n                      <Typography variant=\"subtitle2\">\n                        {group?.students ? group.students[0].user.name || 'Not Available' : 'Not Available'}\n                      </Typography>\n                    </Stack>\n\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                        Member 2:\n                      </Typography>\n                      <Typography variant=\"subtitle2\">\n                        {group?.students ? group.students[1].user.name || 'Not Available' : 'Not Available'}\n                      </Typography>\n                    </Stack>\n                    {group?.students?.length === 3 ? (\n                      <Stack direction=\"row\" justifyContent=\"space-between\">\n                        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                          Member 3:\n                        </Typography>\n                        <Typography variant=\"subtitle2\">\n                          {group?.students ? group.students[2]?.user.name || 'Not Available' : 'Not Available'}\n                        </Typography>\n                      </Stack>\n                    ) : null}\n                  </Stack>\n                </CardContent>\n              </Card>\n\n              <Card sx={{ mb: 2 }}>\n                <CardHeader title={`${reportData.report_type} Document`} />\n\n                <Divider />\n                <CardContent>\n                  <Stack spacing={2}>\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                        Status:\n                      </Typography>\n                      <Typography variant=\"subtitle2\">\n                        <Label variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'} color={getColor()}>\n                          {getStatus()}\n                        </Label>\n                      </Typography>\n                    </Stack>\n\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                        Posted on:\n                      </Typography>\n                      <Typography variant=\"subtitle2\">\n                        <Label variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}>\n                          {reportData.assigned_work ? getDate(reportData.assigned_work.createdAt) : 'Not Available'}\n                        </Label>\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                        Due Date:\n                      </Typography>\n                      <Typography variant=\"subtitle2\">\n                        <Label variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}>\n                          {reportData.assigned_work ? getDate(reportData.assigned_work.deadLine) : 'Not Available'}\n                        </Label>\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                        Submitted on:\n                      </Typography>\n                      <Typography variant=\"subtitle2\">\n                        <Label\n                          variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                          color={reportData.assigned_work?.group_submitted_file ? 'success' : 'error'}\n                        >\n                          {reportData.assigned_work?.group_submitted_file\n                            ? getDate(reportData.assigned_work?.group_submitted_file?.submission_date_time)\n                            : 'Not Submitted yet'}\n                        </Label>\n                      </Typography>\n                    </Stack>\n                  </Stack>\n                </CardContent>\n              </Card>\n              {/* <Card sx={{ p: 3 }}>\n                <Stack spacing={3}>\n                  <FormControl fullWidth>\n                    <LabelStyle>Group Info:</LabelStyle>\n                    <LabelStyle>Project title: {group?.project_title || 'Not Available'}</LabelStyle>\n                    <LabelStyle>\n                      Member 1: {group?.students ? group.students[0].user.name || 'Not Available' : 'Not Available'}\n                    </LabelStyle>\n                    <LabelStyle>\n                      Member 2: {group?.students ? group.students[1].user.name || 'Not Available' : 'Not Available'}\n                    </LabelStyle>\n                    <LabelStyle>\n                      Member 3: {group?.students ? group.students[2]?.user.name || 'Not Available' : 'Not Available'}\n                    </LabelStyle>\n                  </FormControl>\n                </Stack>\n              </Card> */}\n              {/* <Card sx={{ mt: 3 }}>\n                <Stack spacing={3}>\n                  <FormControl fullWidth>\n                    <LabelStyle>\n                      Status:\n                      <Label variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'} color={getColor()}>\n                        {getStatus()}\n                      </Label>\n                    </LabelStyle>\n                    <LabelStyle>\n                      Report Type:\n                      <Label variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}>\n                        {reportData.report_type} Document\n                      </Label>\n                    </LabelStyle>\n                    <LabelStyle>Batch: {batch}</LabelStyle>\n                    <LabelStyle>\n                      Posted on:\n                      <Label variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}>\n                        {reportData.assigned_work ? getDate(reportData.assigned_work.createdAt) : 'Not Available'}\n                      </Label>\n                    </LabelStyle>\n                    <LabelStyle>\n                      Submitted on:\n                      <Label\n                        variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                        color={reportData.assigned_work?.group_submitted_file ? 'success' : 'error'}\n                      >\n                        {reportData.assigned_work?.group_submitted_file\n                          ? getDate(reportData.assigned_work?.group_submitted_file?.submission_date_time)\n                          : 'Not Submitted yet'}\n                      </Label>\n                    </LabelStyle>\n                  </FormControl>\n                </Stack>\n              </Card> */}\n            </Stack>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\MeetingsNewForm.js",["1632","1633","1634","1635","1636","1637","1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651","1652","1653","1654","1655","1656","1657","1658","1659","1660","1661","1662","1663","1664","1665","1666","1667","1668","1669","1670","1671","1672","1673","1674","1675","1676","1677","1678","1679","1680","1681","1682","1683","1684","1685","1686","1687","1688","1689","1690","1691","1692","1693","1694"],"import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useCallback, useEffect } from 'react';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\n\nimport { useTheme, styled, alpha } from '@mui/material/styles';\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Card,\n  Grid,\n  Stack,\n  Select,\n  TextField,\n  FormHelperText,\n  InputLabel,\n  Typography,\n  Checkbox,\n  CardHeader,\n  CardContent,\n  Divider,\n  FormControl\n} from '@mui/material';\n\n// utils\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DatePicker from '@mui/lab/DatePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\n\nimport Label from '../../Label';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport useAuth from '../../../hooks/useAuth';\nimport { getReportTypeList } from '../../../redux/slices/reportType';\nimport { saveNotification } from '../../../redux/slices/announcement';\nimport { getBatchesList, getAllStudent } from '../../../redux/slices/batch';\nimport fakeRequest from '../../../utils/fakeRequest';\nimport axios from '../../../utils/axios';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport { QuillEditor } from '../../editor';\nimport { UploadMultiFile } from '../../upload';\n\n// ----------------------------------------------------------------------\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1)\n}));\n\n// ----------------------------------------------------------------------\n\nMeetingsNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentData: PropTypes.object\n};\n\nexport default function MeetingsNewForm({ isEdit, group }) {\n  console.log(group);\n  const theme = useTheme();\n  const { reportTypeList } = useSelector((state) => state.reportType);\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const { batchesList } = useSelector((state) => state.batch);\n  const { studentList } = useSelector((state) => state.batch);\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const NewProductSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required'),\n    description: Yup.string().required('Description is required'),\n    // images: Yup.array().min(1, 'Images is required'),\n    deadLine: Yup.string().required('deadLine is required')\n  });\n  const markAttendance = async (studentId, meetingId, mark, batchId) => {\n    axios.post('http://localhost:8080/Attendance/saveAttendance', {\n      student_id: studentId,\n      meeting_id: meetingId,\n      attendance: mark\n    });\n    if (mark === 0) {\n      const response = await axios.post('http://localhost:8080/Announcement/saveAnnouncement', {\n        supervisor_id: user.id,\n        title: 'You are Marked Absent',\n        description: String('you were marked absent on date').concat(' ', String(new Date())),\n        batch_id: batchId,\n        is_deleted: 0\n      });\n      console.log('response of data ', response.data);\n      dispatch(saveNotification(response.data.announcement.id, studentId));\n    }\n  };\n  useEffect(() => {\n    dispatch(getReportTypeList());\n    dispatch(getBatchesList());\n    dispatch(getAllStudent());\n  }, [dispatch]);\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      title: '',\n      description: '',\n      deadLine: '',\n      member1: 0,\n      member2: 0,\n      member3: 0\n    },\n    validationSchema: NewProductSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      console.log('values', values);\n      try {\n        //   const batchId = batchesList?.find((batch) => batch.batch === values.batch)?.id || '';\n        const date = new Date(values.deadLine);\n        date.setHours(23, 59, 59, 999);\n        const responseMeeting = await axios.post('http://localhost:8080/Meeting/saveMeeting', {\n          supervisor_id: user.id,\n          group_id: group?.id,\n          title: values.title,\n          description: values.description,\n          date\n        });\n        const response = await axios.post('http://localhost:8080/Announcement/saveAnnouncement', {\n          supervisor_id: user.id,\n          title: values.title,\n          description: String(values.description).concat(' ', `due Date ${date}`),\n          batch_id: group?.students[0].batch_id,\n          is_deleted: 0\n        });\n        dispatch(saveNotification(response.data.announcement.id, group?.students[0]?.id));\n        dispatch(saveNotification(response.data.announcement.id, group?.students[1]?.id));\n        if (group?.students?.length === 3) {\n          dispatch(saveNotification(response.data.announcement.id, group?.students[2]?.id));\n        }\n        // console.log(responseMeeting.data);\n        markAttendance(group?.students[0]?.id, responseMeeting.data.id, values.member1, group?.students[0].batch_id);\n        markAttendance(group?.students[1]?.id, responseMeeting.data.id, values.member2, group?.students[1].batch_id);\n        if (group?.students?.length === 3) {\n          markAttendance(group?.students[2]?.id, responseMeeting.data.id, values.member3, group?.students[2].batch_id);\n        }\n\n        // list.map((stud) => dispatch(saveNotification(response.data.announcement.id, stud.id)));\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n        navigate(`${PATH_DASHBOARD.app.root}/${String(group?.id)}/meeting-list`);\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  const getGroupColor = () => {\n    let result;\n    console.log(group);\n    if (group !== null) {\n      if (group?.groupStatus === 0) {\n        result = 'error';\n      } else if (group?.groupStatus === 1) {\n        result = 'success';\n      } else {\n        result = 'warning';\n      }\n    } else {\n      result = 'error';\n    }\n    return result;\n  };\n  const getGroupStatus = () => {\n    let result;\n    console.log(group);\n    if (group !== null) {\n      if (group?.groupStatus === 0) {\n        result = 'Rejected';\n      } else if (group?.groupStatus === 1) {\n        result = 'Approved';\n      } else {\n        result = 'in Progress';\n      }\n    } else {\n      result = 'Not created yet';\n    }\n    return result;\n  };\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <CardHeader title=\"Assign Work\" />\n              <Divider />\n              <Stack spacing={3}>\n                <TextField\n                  fullWidth\n                  label=\"Agenda\"\n                  {...getFieldProps('title')}\n                  error={Boolean(touched.title && errors.title)}\n                  helperText={touched.title && errors.title}\n                />\n\n                <div>\n                  <LabelStyle>Description</LabelStyle>\n                  <QuillEditor\n                    simple\n                    id=\"product-description\"\n                    value={values.description}\n                    onChange={(val) => setFieldValue('description', val)}\n                    error={Boolean(touched.description && errors.description)}\n                  />\n                  {touched.description && errors.description && (\n                    <FormHelperText error sx={{ px: 2 }}>\n                      {touched.description && errors.description}\n                    </FormHelperText>\n                  )}\n                </div>\n              </Stack>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <Stack spacing={3}>\n              <Card sx={{ mb: 1 }}>\n                <CardHeader title=\"Deadline\" />\n                <Divider />\n                <CardContent>\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <DatePicker\n                      label=\"Select Date\"\n                      {...getFieldProps('deadLine')}\n                      onChange={(newValue) => {\n                        setFieldValue('deadLine', newValue);\n                      }}\n                      renderInput={(params) => <TextField {...params} />}\n                      SelectProps={{ native: true }}\n                      error={Boolean(touched.deadLine && errors.deadLine)}\n                      helperText={touched.deadLine && errors.deadLine}\n                    />\n                  </LocalizationProvider>\n                </CardContent>\n              </Card>\n              <Card sx={{ mb: 3 }}>\n                <CardHeader title=\"Attendance\" />\n\n                <Divider />\n                <CardContent>\n                  <Stack spacing={2}>\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                        Name\n                      </Typography>\n                      <Typography variant=\"subtitle2\">\n                        <Label variant=\"subtitle2\">Mark</Label>\n                      </Typography>\n                    </Stack>\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <Typography variant=\"subtitle2\">\n                        {group?.students ? group.students[0].user.name || 'Not Available' : 'Not Available'}\n                      </Typography>\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                        {/* <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, row.project_title)} /> */}\n                        <Checkbox onChange={(event) => setFieldValue('member1', values.member1 === 0 ? 1 : 0)} />\n                      </Typography>\n                    </Stack>\n\n                    <Stack direction=\"row\" justifyContent=\"space-between\">\n                      <Typography variant=\"subtitle2\">\n                        {group?.students ? group.students[1].user.name || 'Not Available' : 'Not Available'}\n                      </Typography>\n                      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                        <Checkbox onChange={(event) => setFieldValue('member2', values.member2 === 0 ? 1 : 0)} />\n                      </Typography>\n                    </Stack>\n                    {group?.students?.length === 3 ? (\n                      <Stack direction=\"row\" justifyContent=\"space-between\">\n                        <Typography variant=\"subtitle2\">\n                          {group?.students ? group.students[2]?.user.name || 'Not Available' : 'Not Available'}\n                        </Typography>\n                        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                          <Checkbox\n                            disabled={group?.students?.length !== 3}\n                            onChange={(event) => setFieldValue('member3', values.member3 === 0 ? 1 : 0)}\n                          />\n                        </Typography>\n                      </Stack>\n                    ) : null}\n                  </Stack>\n                </CardContent>\n              </Card>\n              {/* <Card sx={{ p: 3 }}>\n\n                <Stack spacing={3}>\n\n                  <FormControl fullWidth>\n                    <InputLabel>Report Type</InputLabel>\n                    <Select\n                      label=\"Report Type\"\n                      native\n                      {...getFieldProps('reportType')}\n                      // SelectProps={{ native: true }}\n                      error={Boolean(touched.reportType && errors.reportType)}\n                      helperText={touched.reportType && errors.reportType}\n                    >\n                      {reportTypeList.map((reportType) => (\n                        <option>{reportType.report_type}</option>\n                      ))}\n                    </Select>\n                  </FormControl>\n\n                  <FormControl fullWidth>\n                    <InputLabel>Batch</InputLabel>\n                    <Select\n                      label=\"Batch\"\n                      native\n                      {...getFieldProps('batch')}\n                      SelectProps={{ native: true }}\n                      error={Boolean(touched.batch && errors.batch)}\n                      helperText={touched.batch && errors.batch}\n                    >\n                      {batchesList.map((row) => (\n                        <option>{row.batch}</option>\n                      ))}\n                    </Select>\n                  </FormControl>\n\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <DatePicker\n                      label=\"Deadline\"\n                      {...getFieldProps('deadLine')}\n                      onChange={(newValue) => {\n                        setFieldValue('deadLine', newValue);\n                      }}\n                      renderInput={(params) => <TextField {...params} />}\n                      SelectProps={{ native: true }}\n                      error={Boolean(touched.deadLine && errors.deadLine)}\n                      helperText={touched.deadLine && errors.deadLine}\n                    />\n                  </LocalizationProvider>\n                  <TextField\n                    fullWidth\n                    label=\"Total Points\"\n                    {...getFieldProps('points')}\n                    error={Boolean(touched.points && errors.points)}\n                    helperText={touched.points && errors.points}\n                  />\n                </Stack>\n              </Card> */}\n\n              <LoadingButton type=\"submit\" fullWidth variant=\"contained\" size=\"large\" loading={isSubmitting}>\n                {!isEdit ? 'Create Meeting' : 'Save Changes'}\n              </LoadingButton>\n            </Stack>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\ReportsNewForm.js",["1695","1696","1697","1698","1699","1700","1701","1702","1703","1704","1705","1706","1707","1708"],"import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useCallback, useEffect } from 'react';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { styled } from '@mui/material/styles';\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Card,\n  Chip,\n  Grid,\n  Stack,\n  Radio,\n  Switch,\n  Select,\n  TextField,\n  InputLabel,\n  Typography,\n  RadioGroup,\n  FormControl,\n  Autocomplete,\n  InputAdornment,\n  FormHelperText,\n  FormControlLabel\n} from '@mui/material';\n// utils\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DatePicker from '@mui/lab/DatePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport useAuth from '../../../hooks/useAuth';\nimport { getReportTypeList } from '../../../redux/slices/reportType';\nimport { saveNotification } from '../../../redux/slices/announcement';\nimport { getBatchesList, getAllStudent } from '../../../redux/slices/batch';\nimport fakeRequest from '../../../utils/fakeRequest';\nimport axios from '../../../utils/axios';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n//\nimport { QuillEditor } from '../../editor';\nimport { UploadMultiFile } from '../../upload';\n\n// ----------------------------------------------------------------------\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1)\n}));\n\n// ----------------------------------------------------------------------\n\nReportNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentData: PropTypes.object\n};\n\nexport default function ReportNewForm({ isEdit, currentData }) {\n  const { reportTypeList } = useSelector((state) => state.reportType);\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const { batchesList } = useSelector((state) => state.batch);\n  const { studentList } = useSelector((state) => state.batch);\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const NewProductSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required'),\n    description: Yup.string().required('Description is required'),\n    // images: Yup.array().min(1, 'Images is required'),\n    reportType: Yup.string().required('Report Type is required'),\n    batch: Yup.string().required('Batch is required'),\n    deadLine: Yup.string().required('deadLine is required'),\n    points: Yup.number().required('Points are required')\n  });\n  useEffect(() => {\n    dispatch(getReportTypeList());\n    dispatch(getBatchesList());\n    dispatch(getAllStudent());\n  }, [dispatch]);\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      title: currentData?.title || '',\n      description: currentData?.description || '',\n      images: currentData?.images || [],\n      reportType: currentData\n        ? reportTypeList.find((report) => report.id === currentData.report_type_id).report_type\n        : reportTypeList[0]?.report_type || '',\n      batch: currentData\n        ? batchesList.find((batch) => batch.id === currentData.batch_id).batch\n        : batchesList[0]?.batch || '',\n      deadLine: currentData?.deadLine || '',\n      points: currentData?.total_points || ''\n    },\n    validationSchema: NewProductSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      console.log(values);\n      try {\n        if (isEdit) {\n          const date = new Date(values.deadLine);\n          date.setHours(23, 59, 59, 999);\n          const batchId = batchesList?.find((batch) => batch.batch === values.batch)?.id || '';\n          await axios.post('http://localhost:8080/AssignedWork/updateAssignWork', {\n            id: currentData.id,\n            title: values.title,\n            description: values.description,\n            total_points: values.points,\n            deadLine: date,\n            report_type_id: reportTypeList.find((report) => report.report_type === values.reportType)?.id || '',\n            batch_id: batchesList.find((batch) => batch.batch === values.batch)?.id || ''\n          });\n          const response = await axios.post('http://localhost:8080/Announcement/saveAnnouncement', {\n            supervisor_id: user.id,\n            title: String('Update in').concat(' ', values.title),\n            description: String(values.description).concat(' ', `due Date ${date}`),\n            batch_id: batchId,\n            is_deleted: 0\n          });\n          console.log(studentList);\n          const list = studentList.filter((stud) => stud.batch_id === batchId);\n          list.map((stud) => dispatch(saveNotification(response.data.announcement.id, stud.id)));\n        } else {\n          const batchId = batchesList?.find((batch) => batch.batch === values.batch)?.id || '';\n          const date = new Date(values.deadLine);\n          date.setHours(23, 59, 59, 999);\n          await axios.post('http://localhost:8080/AssignedWork/saveAssignedWork', {\n            title: values.title,\n            description: values.description,\n            total_points: values.points,\n            deadLine: date,\n            report_type_id: reportTypeList.find((report) => report.report_type === values.reportType)?.id || '',\n            batch_id: batchId\n          });\n          // create announcement\n          const response = await axios.post('http://localhost:8080/Announcement/saveAnnouncement', {\n            supervisor_id: user.id,\n            title: values.title,\n            description: String(values.description).concat(' ', `due Date ${date}`),\n            batch_id: batchId,\n            is_deleted: 0\n          });\n          console.log(studentList);\n          const list = studentList.filter((stud) => stud.batch_id === batchId);\n          list.map((stud) => dispatch(saveNotification(response.data.announcement.id, stud.id)));\n        }\n\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n        navigate(PATH_DASHBOARD.general.reports);\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      setFieldValue(\n        'images',\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file)\n          })\n        )\n      );\n    },\n    [setFieldValue]\n  );\n\n  const handleRemoveAll = () => {\n    setFieldValue('images', []);\n  };\n\n  const handleRemove = (file) => {\n    const filteredItems = values.images.filter((_file) => _file !== file);\n    setFieldValue('images', filteredItems);\n  };\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={3}>\n                <TextField\n                  fullWidth\n                  label=\"Report Type Title\"\n                  {...getFieldProps('title')}\n                  error={Boolean(touched.title && errors.title)}\n                  helperText={touched.title && errors.title}\n                />\n\n                <div>\n                  <LabelStyle>Description</LabelStyle>\n                  <QuillEditor\n                    simple\n                    id=\"product-description\"\n                    value={values.description}\n                    onChange={(val) => setFieldValue('description', val)}\n                    error={Boolean(touched.description && errors.description)}\n                  />\n                  {touched.description && errors.description && (\n                    <FormHelperText error sx={{ px: 2 }}>\n                      {touched.description && errors.description}\n                    </FormHelperText>\n                  )}\n                </div>\n              </Stack>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            <Stack spacing={3}>\n              <Card sx={{ p: 3 }}>\n                {/* <FormControlLabel\n                  control={<Switch {...getFieldProps('inStock')} checked={values.inStock} />}\n                  label=\"In stock\"\n                  sx={{ mb: 2 }}\n                /> */}\n\n                <Stack spacing={3}>\n                  <FormControl fullWidth>\n                    <InputLabel>Report Type</InputLabel>\n                    <Select\n                      label=\"Report Type\"\n                      native\n                      {...getFieldProps('reportType')}\n                      // SelectProps={{ native: true }}\n                      error={Boolean(touched.reportType && errors.reportType)}\n                      helperText={touched.reportType && errors.reportType}\n                    >\n                      {reportTypeList.map((reportType) => (\n                        <option>{reportType.report_type}</option>\n                      ))}\n                    </Select>\n                  </FormControl>\n\n                  <FormControl fullWidth>\n                    <InputLabel>Batch</InputLabel>\n                    <Select\n                      label=\"Batch\"\n                      native\n                      {...getFieldProps('batch')}\n                      SelectProps={{ native: true }}\n                      error={Boolean(touched.batch && errors.batch)}\n                      helperText={touched.batch && errors.batch}\n                    >\n                      {batchesList.map((row) => (\n                        <option>{row.batch}</option>\n                      ))}\n                    </Select>\n                  </FormControl>\n\n                  <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <DatePicker\n                      label=\"Deadline\"\n                      {...getFieldProps('deadLine')}\n                      onChange={(newValue) => {\n                        setFieldValue('deadLine', newValue);\n                      }}\n                      renderInput={(params) => <TextField {...params} />}\n                      SelectProps={{ native: true }}\n                      error={Boolean(touched.deadLine && errors.deadLine)}\n                      helperText={touched.deadLine && errors.deadLine}\n                    />\n                  </LocalizationProvider>\n                  <TextField\n                    fullWidth\n                    label=\"Total Points\"\n                    {...getFieldProps('points')}\n                    error={Boolean(touched.points && errors.points)}\n                    helperText={touched.points && errors.points}\n                  />\n                </Stack>\n              </Card>\n\n              <LoadingButton type=\"submit\" fullWidth variant=\"contained\" size=\"large\" loading={isSubmitting}>\n                {!isEdit ? 'Create Report' : 'Save Changes'}\n              </LoadingButton>\n            </Stack>\n          </Grid>\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\SubmitIdeaNewForm.js",["1709","1710","1711","1712","1713","1714","1715","1716","1717","1718","1719","1720","1721","1722","1723","1724","1725","1726","1727","1728","1729","1730"],"import * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport React, { useCallback, useEffect } from 'react';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport { styled } from '@mui/material/styles';\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Card,\n  Chip,\n  Grid,\n  Stack,\n  Radio,\n  Switch,\n  Select,\n  TextField,\n  InputLabel,\n  Typography,\n  RadioGroup,\n  FormControl,\n  Autocomplete,\n  InputAdornment,\n  FormHelperText,\n  FormControlLabel\n} from '@mui/material';\n// utils\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DatePicker from '@mui/lab/DatePicker';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\n// routes\nimport axios from '../../../utils/axios';\nimport fakeRequest from '../../../utils/fakeRequest';\nimport useAuth from '../../../hooks/useAuth';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { SaveGroup, updateMembers } from '../../../redux/slices/group';\nimport { getStudentList } from '../../../redux/slices/student';\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n\n// ----------------------------------------------------------------------\n\nconst LabelStyle = styled(Typography)(({ theme }) => ({\n  ...theme.typography.subtitle2,\n  color: theme.palette.text.secondary,\n  marginBottom: theme.spacing(1)\n}));\n\n// ----------------------------------------------------------------------\n\nSubmitIdeaNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentUser: PropTypes.object\n};\n\nexport default function SubmitIdeaNewForm({ isEdit, currentUser }) {\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n  const { studentList } = useSelector((state) => state.student);\n  const NewProductSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required'),\n    memberOne: Yup.string().required('CMS ID is required'),\n    memberTwo: Yup.string().required('CMS ID is required')\n    // memberThree: Yup.string().required('Member 3 is required')\n  });\n  const checkMember = (member) => {\n    const s = studentList?.find((student) => student.user_id === member) || null;\n    const res = s?.user_id === member || false;\n    let result = 0;\n    if (res === true) {\n      if (s.group_id === null) {\n        result = 1;\n      } else {\n        result = 2;\n      }\n    } else {\n      result = 0;\n    }\n    console.log(result);\n    return result;\n  };\n  useEffect(() => {\n    dispatch(getStudentList());\n  }, [dispatch]);\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      title: currentUser?.name || '',\n      memberOne: user.role.role_name === 'Student' ? user.user_name : '',\n      memberTwo: currentUser?.memberTwo || '',\n      memberThree: currentUser?.memberThree || ''\n    },\n    validationSchema: NewProductSchema,\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\n      try {\n        let result = checkMember(values.memberOne.trim());\n        if (result === 0) {\n          alert(String(values.memberOne).concat(' ', 'is not registered!'));\n          throw NewProductSchema.fields.memberOne;\n        } else if (result === 2) {\n          alert(String(values.memberOne).concat(' ', 'is already in group!'));\n          throw NewProductSchema.fields.memberOne;\n        }\n        result = checkMember(values.memberTwo);\n        if (result === 0) {\n          alert(String(values.memberTwo).concat(' ', 'is not registered!'));\n          throw NewProductSchema.fields.memberOne;\n        } else if (result === 2) {\n          alert(String(values.memberTwo).concat(' ', 'is already in group!'));\n          throw NewProductSchema.fields.memberOne;\n        } else if (values.memberOne === values.memberTwo) {\n          alert(String(values.memberOne).concat(' and ', values.memberTwo.concat(' ', 'are same')));\n          throw NewProductSchema.fields.memberOne;\n        }\n        result = checkMember(values.memberThree.trim());\n        if (values.memberThree.trim() !== '') {\n          if (result === 0) {\n            alert(String(values.memberThree).concat(' ', 'is not registered!'));\n            throw NewProductSchema.fields.memberOne;\n          } else if (result === 2) {\n            alert(String(values.memberThree).concat(' ', 'is not registered!'));\n            throw NewProductSchema.fields.memberOne;\n          } else if (values.memberTwo === values.memberThree) {\n            alert(String(values.memberTwo).concat(' and ', values.memberThree.concat(' ', 'are same')));\n            throw NewProductSchema.fields.memberOne;\n          } else if (values.memberOne === values.memberThree) {\n            alert(String(values.memberOne).concat(' and ', values.memberThree.concat(' ', 'are same')));\n            throw NewProductSchema.fields.memberOne;\n          }\n        }\n\n        const response = await axios.post('http://localhost:8080/Group/saveGroup', {\n          project_title: values.title,\n          groupStatus: 2,\n          is_deleted: 0\n        });\n\n        await dispatch(updateMembers(values.memberOne, response.data.id));\n        await dispatch(updateMembers(values.memberTwo, response.data.id));\n        if (values.memberThree !== '') {\n          await dispatch(updateMembers(values.memberThree, response.data.id));\n        }\n\n        resetForm();\n        setSubmitting(false);\n        enqueueSnackbar(!isEdit ? 'Create success' : 'Update success', { variant: 'success' });\n        // navigate(PATH_DASHBOARD.user.list);\n      } catch (error) {\n        console.error(error);\n        setSubmitting(false);\n        setErrors(error);\n      }\n    }\n  });\n\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\n\n  return (\n    <FormikProvider value={formik}>\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={8}>\n            <Card sx={{ p: 3 }}>\n              <Stack spacing={4}>\n                <TextField\n                  fullWidth\n                  label=\"Project-Title\"\n                  {...getFieldProps('title')}\n                  error={Boolean(touched.title && errors.title)}\n                  helperText={touched.title && errors.title}\n                />\n                <TextField\n                  fullWidth\n                  label=\"CMS ID\"\n                  {...getFieldProps('memberOne')}\n                  disabled={user.role.role_name === 'Student'}\n                  error={Boolean(touched.memberOne && errors.memberOne)}\n                  helperText={touched.memberOne && errors.memberOne}\n                />\n                <TextField\n                  fullWidth\n                  label=\"CMS ID\"\n                  {...getFieldProps('memberTwo')}\n                  error={Boolean(touched.memberTwo && errors.memberTwo)}\n                  helperText={touched.memberTwo && errors.memberTwo}\n                />\n                <TextField\n                  fullWidth\n                  label=\"CMS ID\"\n                  {...getFieldProps('memberThree')}\n                  // error={Boolean(touched.memberThree && errors.memberThree)}\n                  // helperText={touched.memberThree && errors.memberThree}\n                />\n                <div>\n                  <LoadingButton type=\"submit\" fullWidth variant=\"contained\" size=\"large\" loading={isSubmitting}>\n                    {!isEdit ? 'Submit' : 'Save Changes'}\n                  </LoadingButton>\n                </div>\n              </Stack>\n            </Card>\n          </Grid>\n          {/* <Grid item xs={12} md={4}>\n            <Stack spacing={3}>\n              <Card sx={{ p: 3 }}>\n                <Stack spacing={3}>\n                  <FormControl fullWidth>\n                    <InputLabel>Supervisor</InputLabel>\n                    <Select label=\"Supervisor\" native {...getFieldProps('category')} value={values.category}>\n                      {userList.map((user) => (\n                        <option key={user.user.id} value={user.user.name}>\n                          {user.user.name}\n                        </option>\n                      ))}\n                    </Select>\n                  </FormControl>\n                  <div>\n                    <LabelStyle>Add Files</LabelStyle>\n                    <UploadMultiFile\n                      showPreview\n                      maxSize={3145728}\n                      accept=\"image/*\"\n                      files={values.images}\n                      onDrop={handleDrop}\n                      onRemove={handleRemove}\n                      onRemoveAll={handleRemoveAll}\n                      error={Boolean(touched.images && errors.images)}\n                    />\n                  </div>\n                </Stack>\n              </Card>\n              \n            </Stack>\n          </Grid> */}\n        </Grid>\n      </Form>\n    </FormikProvider>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\department.js",["1731","1732"],"import { map, filter } from 'lodash';\nimport { createSlice } from '@reduxjs/toolkit';\n// utils\nimport axios from '../../utils/axios';\n\n// ----------------------------------------------------------------------\n\nconst initialState = {\n  isLoading: false,\n  error: false,\n  departments: [],\n  departmentList: []\n};\n\nconst slice = createSlice({\n  name: 'role',\n  initialState,\n  reducers: {\n    // START LOADING\n    startLoading(state) {\n      state.isLoading = true;\n    },\n\n    // HAS ERROR\n    hasError(state, action) {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    // GET DEPARTMENT\n    getDepartmentSuccess(state, action) {\n      state.isLoading = false;\n      state.departments = action.payload;\n    },\n\n    // DELETE Department\n    deleteDepartment(state, action) {\n      const deleteUser = filter(state.departmentList, (department) => department.id !== action.payload);\n      state.departmentList = this.deleteDepartment;\n    },\n\n    // GET MANAGE Departments\n    getDepartmentListSuccess(state, action) {\n      state.isLoading = false;\n      state.departmentList = action.payload;\n    }\n  }\n});\n\n// Reducer\nexport default slice.reducer;\n\n// ----------------------------------------------------------------------\n\n// ----------------------------------------------------------------------\n\nexport function getDepartmentList() {\n  return async (dispatch) => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('http://localhost:8080/Department/showAllDepartments');\n      dispatch(slice.actions.getDepartmentListSuccess(response.data));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n// ----------------------------------------------------------------------\n\nexport function getDepartment() {\n  return async (dispatch) => {\n    dispatch(slice.actions.startLoading());\n    try {\n      const response = await axios.get('http://localhost:8080/Department/showAllDepartments');\n      dispatch(slice.actions.getDepartmentSuccess(response.data));\n    } catch (error) {\n      dispatch(slice.actions.hasError(error));\n    }\n  };\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\utils\\formatNumber.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\rootReducer.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\ButtonAnimate.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\TextAnimate.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\UserListHead.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\GroupsUnderSupervisionMoreMenu.js",["1733","1734"],"import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { paramCase } from 'change-case';\nimport { useRef, useState } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\n\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n// material\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\n\n// ----------------------------------------------------------------------\n\nGroupsUnderSupervisionMoreMenu.propTypes = {\n  onDelete: PropTypes.func,\n  userName: PropTypes.object\n};\n\nexport default function GroupsUnderSupervisionMoreMenu({ onDelete, userName }) {\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' }\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuItem\n          component={RouterLink}\n          to={`${PATH_DASHBOARD.app.root}/${paramCase(String(userName.id))}/meeting-list`}\n          sx={{ color: 'text.secondary' }}\n        >\n          <ListItemIcon>\n            <Icon icon={plusFill} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Meetings\" primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n        <MenuItem\n          component={RouterLink}\n          to={`${PATH_DASHBOARD.user.root}/${paramCase(String(userName.id))}/groups-under-supervision-progress`}\n          sx={{ color: 'text.secondary' }}\n        >\n          <ListItemIcon>\n            <Icon icon={editFill} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"See Progress\" primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\upload\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\RoleMoreMenu.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\GroupMoreMenu.js",["1735","1736"],"import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { paramCase } from 'change-case';\nimport { useRef, useState } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n// material\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\n\n// ----------------------------------------------------------------------\n\nGroupMoreMenu.propTypes = {\n  onDelete: PropTypes.func,\n  userName: PropTypes.object\n};\n\nexport default function GroupMoreMenu({ onDelete, userName }) {\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' }\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuItem\n          component={RouterLink}\n          to={`${PATH_DASHBOARD.user.root}/${paramCase(String(userName.id))}/approvegroup`}\n          sx={{ color: 'text.secondary' }}\n        >\n          <ListItemIcon>\n            <Icon icon={editFill} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Manage\" primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n        <MenuItem\n          component={RouterLink}\n          to={`${PATH_DASHBOARD.user.root}/${paramCase(String(userName.id))}/groups-under-supervision-progress`}\n          sx={{ color: 'text.secondary' }}\n        >\n          <ListItemIcon>\n            <Icon icon={editFill} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"See Progress\" primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\editor\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\DialogAnimate.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\UserMoreMenu.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\MotionContainer.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\user\\list\\UserListToolbar.js",["1737","1738","1739","1740","1741","1742","1743","1744"],"import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\n\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\n\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport { useTheme, styled } from '@mui/material/styles';\nimport {\n  Box,\n  Button,\n  Toolbar,\n  Tooltip,\n  TextField,\n  IconButton,\n  Typography,\n  OutlinedInput,\n  InputAdornment\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3)\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&.Mui-focused': { width: 320, boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nUserListToolbar.propTypes = {\n  numSelected: PropTypes.number,\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func\n};\n\nexport default function UserListToolbar({ numSelected, filterName, onFilterName }) {\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n\n  return (\n    <RootStyle\n      sx={{\n        ...(numSelected > 0 && {\n          color: isLight ? 'primary.main' : 'text.primary',\n          bgcolor: isLight ? 'primary.lighter' : 'primary.dark'\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography component=\"div\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <SearchStyle\n          value={filterName}\n          onChange={onFilterName}\n          placeholder=\"Search...\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          }\n        />\n      )}\n\n      {/* {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n            <Icon icon={trash2Fill} />\n          </IconButton>\n          <Button\n            variant=\"contained\"\n            // component={RouterLink}\n            // to={PATH_DASHBOARD.general.newAnnouncement}\n            startIcon={<Icon icon={plusFill} />}\n          >\n            Create Group\n          </Button>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton>\n            <Icon icon={roundFilterList} />\n          </IconButton>\n        </Tooltip>\n      )} */}\n    </RootStyle>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\MotionInView.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\AbsentAttendance.js",["1745","1746","1747","1748"],"import { Icon } from '@iconify/react';\nimport ReactApexChart from 'react-apexcharts';\nimport { useEffect } from 'react';\nimport trendingUpFill from '@iconify/icons-eva/trending-up-fill';\nimport trendingDownFill from '@iconify/icons-eva/trending-down-fill';\n// material\nimport { alpha, useTheme, styled } from '@mui/material/styles';\nimport { Box, Card, Typography, Stack } from '@mui/material';\n// utils\nimport { fNumber, fPercent } from './formatNumber';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getGroupByBatch, getGroupList } from '../../../redux/slices/group';\n\n// ----------------------------------------------------------------------\n\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\n  width: 24,\n  height: 24,\n  display: 'flex',\n  borderRadius: '50%',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: theme.palette.success.main,\n  backgroundColor: alpha(theme.palette.success.main, 0.16)\n}));\n\n// ----------------------------------------------------------------------\n\nconst PERCENT = -0.06;\nconst TOTAL_DOWNLOAD = 21;\nconst CHART_DATA = [{ data: [8, 9, 31, 8, 16, 37, 8, 33, 46, 31] }];\n\nexport default function AbsentAttendance({ attendance }) {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { groupList } = useSelector((state) => state.group);\n  useEffect(() => {\n    dispatch(getGroupList());\n  }, [dispatch]);\n  const chartOptions = {\n    colors: [theme.palette.chart.red[0]],\n    chart: { sparkline: { enabled: true } },\n    plotOptions: { bar: { columnWidth: '68%', borderRadius: 2 } },\n    labels: ['1', '2', '3', '4', '5', '6', '7', '8'],\n    tooltip: {\n      x: { show: false },\n      y: {\n        formatter: (seriesName) => fNumber(seriesName),\n        title: {\n          formatter: () => ''\n        }\n      },\n      marker: { show: false }\n    }\n  };\n  const getTotal = () => groupList.filter((group) => group.projectStatus === 'rejected').length;\n  return (\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3 }}>\n      <Box sx={{ flexGrow: 1 }}>\n        <Typography variant=\"subtitle2\">Total Absents</Typography>\n\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mt: 2, mb: 1 }}>\n          <IconWrapperStyle\n            sx={{\n              ...(PERCENT < 0 && {\n                color: 'error.main',\n                bgcolor: alpha(theme.palette.error.main, 0.16)\n              })\n            }}\n          >\n            <Icon width={16} height={16} icon={PERCENT >= 0 ? trendingUpFill : trendingDownFill} />\n          </IconWrapperStyle>\n          <Typography component=\"span\" variant=\"subtitle2\">\n            {PERCENT > 0 && '+'}\n            {fPercent(PERCENT)}\n          </Typography>\n        </Stack>\n\n        <Typography variant=\"h3\">{fNumber(attendance)}</Typography>\n      </Box>\n\n      <ReactApexChart type=\"bar\" series={CHART_DATA} options={chartOptions} width={60} height={36} />\n    </Card>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\AppWelcome.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\AppTotalInstalled.js",["1749","1750"],"import { Icon } from '@iconify/react';\nimport ReactApexChart from 'react-apexcharts';\nimport { useEffect } from 'react';\nimport trendingUpFill from '@iconify/icons-eva/trending-up-fill';\nimport trendingDownFill from '@iconify/icons-eva/trending-down-fill';\n// material\nimport { alpha, useTheme, styled } from '@mui/material/styles';\nimport { Box, Card, Typography, Stack } from '@mui/material';\n// utils\nimport { fNumber, fPercent } from './formatNumber';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getGroupByBatch, getGroupList } from '../../../redux/slices/group';\n// ----------------------------------------------------------------------\n\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\n  width: 24,\n  height: 24,\n  display: 'flex',\n  borderRadius: '50%',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: theme.palette.success.main,\n  backgroundColor: alpha(theme.palette.success.main, 0.16)\n}));\n\n// ----------------------------------------------------------------------\n\nconst PERCENT = 0.15;\nconst TOTAL_INSTALLED = 45;\nconst CHART_DATA = [{ data: [5, 18, 12, 51, 68, 11, 39, 37, 27, 20] }];\n\nexport default function AppTotalInstalled() {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { groupList } = useSelector((state) => state.group);\n  useEffect(() => {\n    dispatch(getGroupList());\n  }, [dispatch]);\n  const chartOptions = {\n    colors: [theme.palette.chart.blue[0]],\n    chart: { sparkline: { enabled: true } },\n    plotOptions: { bar: { columnWidth: '68%', borderRadius: 2 } },\n    labels: ['1', '2', '3', '4', '5', '6', '7', '8'],\n    tooltip: {\n      x: { show: false },\n      y: {\n        formatter: (seriesName) => fNumber(seriesName),\n        title: {\n          formatter: () => ''\n        }\n      },\n      marker: { show: false }\n    }\n  };\n  const getTotal = () => groupList.filter((group) => group.projectStatus === 'in progress').length;\n  return (\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3 }}>\n      <Box sx={{ flexGrow: 1 }}>\n        <Typography variant=\"subtitle2\">Current Projects</Typography>\n\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mt: 2, mb: 1 }}>\n          <IconWrapperStyle\n            sx={{\n              ...(PERCENT < 0 && {\n                color: 'error.main',\n                bgcolor: alpha(theme.palette.error.main, 0.16)\n              })\n            }}\n          >\n            <Icon width={16} height={16} icon={PERCENT >= 0 ? trendingUpFill : trendingDownFill} />\n          </IconWrapperStyle>\n          <Typography component=\"span\" variant=\"subtitle2\">\n            {PERCENT > 0 && '+'}\n            {fPercent(PERCENT)}\n          </Typography>\n        </Stack>\n\n        <Typography variant=\"h3\">{fNumber(getTotal())}</Typography>\n      </Box>\n\n      <ReactApexChart type=\"bar\" series={CHART_DATA} options={chartOptions} width={60} height={36} />\n    </Card>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\AppTotalActiveUsers.js",["1751","1752"],"import { Icon } from '@iconify/react';\nimport ReactApexChart from 'react-apexcharts';\nimport { useEffect } from 'react';\nimport trendingUpFill from '@iconify/icons-eva/trending-up-fill';\nimport trendingDownFill from '@iconify/icons-eva/trending-down-fill';\n// material\nimport { alpha, useTheme, styled } from '@mui/material/styles';\nimport { Box, Card, Typography, Stack } from '@mui/material';\n// utils\nimport { fNumber, fPercent } from './formatNumber';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getGroupByBatch, getGroupList } from '../../../redux/slices/group';\n\n// ----------------------------------------------------------------------\n\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\n  width: 24,\n  height: 24,\n  display: 'flex',\n  borderRadius: '50%',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: theme.palette.success.main,\n  backgroundColor: alpha(theme.palette.success.main, 0.16)\n}));\n\n// ----------------------------------------------------------------------\n\nconst PERCENT = 2.6;\nconst TOTAL_USER = 50;\nconst CHART_DATA = [{ data: [20, 41, 63, 33, 28, 35, 50, 46, 11, 26] }];\n\nexport default function AppTotalActiveUsers() {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { groupList } = useSelector((state) => state.group);\n  useEffect(() => {\n    dispatch(getGroupList());\n  }, [dispatch]);\n  const chartOptions = {\n    colors: [theme.palette.primary.main],\n    chart: { sparkline: { enabled: true } },\n    plotOptions: { bar: { columnWidth: '68%', borderRadius: 2 } },\n    labels: ['1', '2', '3', '4', '5', '6', '7', '8'],\n    tooltip: {\n      x: { show: false },\n      y: {\n        formatter: (seriesName) => fNumber(seriesName),\n        title: {\n          formatter: () => ''\n        }\n      },\n      marker: { show: false }\n    }\n  };\n  const getTotal = () => groupList.filter((group) => group.projectStatus === 'completed').length;\n\n  return (\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3 }}>\n      <Box sx={{ flexGrow: 1 }}>\n        <Typography variant=\"subtitle2\">Completed Projects</Typography>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mt: 2, mb: 1 }}>\n          <IconWrapperStyle\n            sx={{\n              ...(PERCENT < 0 && {\n                color: 'error.main',\n                bgcolor: alpha(theme.palette.error.main, 0.16)\n              })\n            }}\n          >\n            <Icon width={16} height={16} icon={PERCENT >= 0 ? trendingUpFill : trendingDownFill} />\n          </IconWrapperStyle>\n          <Typography component=\"span\" variant=\"subtitle2\">\n            {PERCENT > 0 && '+'}\n            {fPercent(PERCENT)}\n          </Typography>\n        </Stack>\n\n        <Typography variant=\"h3\">{fNumber(getTotal())}</Typography>\n      </Box>\n\n      <ReactApexChart type=\"bar\" series={CHART_DATA} options={chartOptions} width={60} height={36} />\n    </Card>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\PresentAttendance.js",["1753","1754","1755","1756"],"import { Icon } from '@iconify/react';\nimport ReactApexChart from 'react-apexcharts';\nimport { useEffect } from 'react';\nimport trendingUpFill from '@iconify/icons-eva/trending-up-fill';\nimport trendingDownFill from '@iconify/icons-eva/trending-down-fill';\n// material\nimport { alpha, useTheme, styled } from '@mui/material/styles';\nimport { Box, Card, Typography, Stack } from '@mui/material';\n// utils\nimport { fNumber, fPercent } from './formatNumber';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getGroupByBatch, getGroupList } from '../../../redux/slices/group';\n\n// ----------------------------------------------------------------------\n\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\n  width: 24,\n  height: 24,\n  display: 'flex',\n  borderRadius: '50%',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: theme.palette.success.main,\n  backgroundColor: alpha(theme.palette.success.main, 0.16)\n}));\n\n// ----------------------------------------------------------------------\n\nconst PERCENT = 2.6;\nconst TOTAL_USER = 50;\nconst CHART_DATA = [{ data: [20, 41, 63, 33, 28, 35, 50, 46, 11, 26] }];\n\nexport default function PresentAttendance({ attendance }) {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { groupList } = useSelector((state) => state.group);\n  useEffect(() => {\n    dispatch(getGroupList());\n  }, [dispatch]);\n  const chartOptions = {\n    colors: [theme.palette.primary.main],\n    chart: { sparkline: { enabled: true } },\n    plotOptions: { bar: { columnWidth: '68%', borderRadius: 2 } },\n    labels: ['1', '2', '3', '4', '5', '6', '7', '8'],\n    tooltip: {\n      x: { show: false },\n      y: {\n        formatter: (seriesName) => fNumber(seriesName),\n        title: {\n          formatter: () => ''\n        }\n      },\n      marker: { show: false }\n    }\n  };\n  const getTotal = () => groupList.filter((group) => group.projectStatus === 'completed').length;\n\n  return (\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3 }}>\n      <Box sx={{ flexGrow: 1 }}>\n        <Typography variant=\"subtitle2\">Total Presents</Typography>\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mt: 2, mb: 1 }}>\n          <IconWrapperStyle\n            sx={{\n              ...(PERCENT < 0 && {\n                color: 'error.main',\n                bgcolor: alpha(theme.palette.error.main, 0.16)\n              })\n            }}\n          >\n            <Icon width={16} height={16} icon={PERCENT >= 0 ? trendingUpFill : trendingDownFill} />\n          </IconWrapperStyle>\n          <Typography component=\"span\" variant=\"subtitle2\">\n            {PERCENT > 0 && '+'}\n            {fPercent(PERCENT)}\n          </Typography>\n        </Stack>\n\n        <Typography variant=\"h3\">{fNumber(attendance)}</Typography>\n      </Box>\n\n      <ReactApexChart type=\"bar\" series={CHART_DATA} options={chartOptions} width={60} height={36} />\n    </Card>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\AppTotalDownloads.js",["1757","1758"],"import { Icon } from '@iconify/react';\nimport ReactApexChart from 'react-apexcharts';\nimport { useEffect } from 'react';\nimport trendingUpFill from '@iconify/icons-eva/trending-up-fill';\nimport trendingDownFill from '@iconify/icons-eva/trending-down-fill';\n// material\nimport { alpha, useTheme, styled } from '@mui/material/styles';\nimport { Box, Card, Typography, Stack } from '@mui/material';\n// utils\nimport { fNumber, fPercent } from './formatNumber';\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getGroupByBatch, getGroupList } from '../../../redux/slices/group';\n\n// ----------------------------------------------------------------------\n\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\n  width: 24,\n  height: 24,\n  display: 'flex',\n  borderRadius: '50%',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: theme.palette.success.main,\n  backgroundColor: alpha(theme.palette.success.main, 0.16)\n}));\n\n// ----------------------------------------------------------------------\n\nconst PERCENT = -0.06;\nconst TOTAL_DOWNLOAD = 21;\nconst CHART_DATA = [{ data: [8, 9, 31, 8, 16, 37, 8, 33, 46, 31] }];\n\nexport default function AppTotalDownloads() {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { groupList } = useSelector((state) => state.group);\n  useEffect(() => {\n    dispatch(getGroupList());\n  }, [dispatch]);\n  const chartOptions = {\n    colors: [theme.palette.chart.red[0]],\n    chart: { sparkline: { enabled: true } },\n    plotOptions: { bar: { columnWidth: '68%', borderRadius: 2 } },\n    labels: ['1', '2', '3', '4', '5', '6', '7', '8'],\n    tooltip: {\n      x: { show: false },\n      y: {\n        formatter: (seriesName) => fNumber(seriesName),\n        title: {\n          formatter: () => ''\n        }\n      },\n      marker: { show: false }\n    }\n  };\n  const getTotal = () => groupList.filter((group) => group.projectStatus === 'rejected').length;\n  return (\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3 }}>\n      <Box sx={{ flexGrow: 1 }}>\n        <Typography variant=\"subtitle2\">Cancelled Projects</Typography>\n\n        <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mt: 2, mb: 1 }}>\n          <IconWrapperStyle\n            sx={{\n              ...(PERCENT < 0 && {\n                color: 'error.main',\n                bgcolor: alpha(theme.palette.error.main, 0.16)\n              })\n            }}\n          >\n            <Icon width={16} height={16} icon={PERCENT >= 0 ? trendingUpFill : trendingDownFill} />\n          </IconWrapperStyle>\n          <Typography component=\"span\" variant=\"subtitle2\">\n            {PERCENT > 0 && '+'}\n            {fPercent(PERCENT)}\n          </Typography>\n        </Stack>\n\n        <Typography variant=\"h3\">{fNumber(getTotal())}</Typography>\n      </Box>\n\n      <ReactApexChart type=\"bar\" series={CHART_DATA} options={chartOptions} width={60} height={36} />\n    </Card>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\AppNewInvoice.js",["1759","1760","1761","1762","1763","1764","1765","1766","1767","1768","1769","1770","1771","1772","1773","1774","1775","1776","1777","1778"],"import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { useRef, useState, useEffect } from 'react';\nimport { sentenceCase } from 'change-case';\nimport { Link as RouterLink } from 'react-router-dom';\nimport shareFill from '@iconify/icons-eva/share-fill';\nimport printerFill from '@iconify/icons-eva/printer-fill';\nimport archiveFill from '@iconify/icons-eva/archive-fill';\nimport downloadFill from '@iconify/icons-eva/download-fill';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n\n// material\nimport { useTheme, styled, alpha } from '@mui/material/styles';\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\n\nimport {\n  Box,\n  Menu,\n  Card,\n  Table,\n  Button,\n  Divider,\n  TablePagination,\n  Stack,\n  Checkbox,\n  MenuItem,\n  Toolbar,\n  TextField,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHead,\n  Typography,\n  CardHeader,\n  TableContainer\n} from '@mui/material';\n\nimport { Assignment, CloudDownload } from '@mui/icons-material';\nimport { isAfter } from 'date-fns';\n// redux\nimport { useDispatch, useSelector } from '../../../redux/store';\nimport { getGroupByBatch, getGroupList } from '../../../redux/slices/group';\nimport { getSubmittedFilesByAllGroup } from '../../../redux/slices/groupSubmittedFiles';\nimport { getBatchesList } from '../../../redux/slices/batch';\nimport { UserListHead, UserListToolbar, GroupMoreMenu } from '../user/list';\nimport { getInstructorList } from '../../../redux/slices/instructor';\nimport axios from '../../../utils/axios';\n// utils\nimport Label from '../../Label';\nimport Scrollbar from '../../Scrollbar';\nimport { MIconButton } from '../../@material-extend';\n\nimport SearchNotFound from '../../SearchNotFound';\n\n// ----------------------------------------------------------------------\n\nconst TABLE_HEAD = [\n  { id: 'title', label: 'Project Title', alignRight: false },\n  { id: 'batch', label: 'Batch', alignRight: false },\n  { id: 'supervisor', label: 'Supervisor', alignRight: false },\n  { id: 'status', label: 'Status', alignRight: false },\n  { id: 'abstract', label: 'Abstract', alignRight: false },\n  { id: '', label: '', alignRight: false }\n];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction applySortFilter(array, comparator, query) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  if (query) {\n    return filter(array, (_user) => _user.project_title.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n  return stabilizedThis.map((el) => el[0]);\n}\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction MoreMenuButton() {\n  const menuRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <>\n        <MIconButton ref={menuRef} size=\"large\" onClick={handleOpen}>\n          <Icon icon={moreVerticalFill} width={20} height={20} />\n        </MIconButton>\n      </>\n\n      {/* <Menu\n        open={open}\n        anchorEl={menuRef.current}\n        onClose={handleClose}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' }\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuItem>\n          <Icon icon={downloadFill} width={20} height={20} />\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\n            Download\n          </Typography>\n        </MenuItem>\n        <MenuItem>\n          <Icon icon={printerFill} width={20} height={20} />\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\n            Print\n          </Typography>\n        </MenuItem>\n        <MenuItem>\n          <Icon icon={shareFill} width={20} height={20} />\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\n            Share\n          </Typography>\n        </MenuItem>\n        <MenuItem>\n          <Icon icon={archiveFill} width={20} height={20} />\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\n            Archive\n          </Typography>\n        </MenuItem>\n\n        <Divider />\n        <MenuItem sx={{ color: 'error.main' }}>\n          <Icon icon={trash2Outline} width={20} height={20} />\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\n            Delete\n          </Typography>\n        </MenuItem>\n      </Menu> */}\n    </>\n  );\n}\n\nexport default function AppNewInvoice() {\n  const theme = useTheme();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const [selected, setSelected] = useState([]);\n  const dispatch = useDispatch();\n  const { submittedFilesByGroups } = useSelector((state) => state.groupSubmittedFiles);\n  const { groupList } = useSelector((state) => state.group);\n  const { batchesList } = useSelector((state) => state.batch);\n  const { userList } = useSelector((state) => state.instructor);\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const filteredUsers = applySortFilter(groupList, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - groupList.length) : 0;\n  useEffect(() => {\n    dispatch(getGroupList());\n    dispatch(getBatchesList());\n    dispatch(getInstructorList());\n    dispatch(getSubmittedFilesByAllGroup());\n  }, [dispatch]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const downloadFile = async (id) => {\n    if (submittedFilesByGroups.length > 0) {\n      const data = submittedFilesByGroups.find(\n        (submission) => submission.assigned_work.group_submitted_file.group_id === id\n      );\n      console.log(id, submittedFilesByGroups);\n      if (data !== undefined) {\n        const file = data.assigned_work.group_submitted_file.files;\n        const method = 'GET';\n        const url = `http://localhost:8080/File/download/${file[0].file_name}`;\n        axios\n          .request({\n            url,\n            method,\n            responseType: 'blob'\n          })\n          .then(({ data }) => {\n            const downloadUrl = window.URL.createObjectURL(new Blob([data]));\n            const link = document.createElement('a');\n            link.href = downloadUrl;\n            link.setAttribute('download', file[0].file_name);\n            document.body.appendChild(link);\n            link.click();\n            link.remove();\n          });\n      } else {\n        alert('not Submitted yet');\n      }\n    } else {\n      alert('not Submitted yet');\n    }\n  };\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = groupList.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n  const getColor = (status) => {\n    let result;\n    if (status === 'in progress') {\n      result = 'warning';\n    } else if (status === 'completed') {\n      result = 'success';\n    } else {\n      result = 'error';\n    }\n    return result;\n  };\n  const getGroupStatus = (status) => {\n    let result;\n    if (status === 0) {\n      result = 'Inprogress';\n    } else if (status === 1) {\n      result = 'Approved';\n    } else {\n      result = 'Rejected';\n    }\n    return result;\n  };\n  const getSupervisorName = (row) => {\n    const id = row.supervisor_id ? row.supervisor_id : -1;\n    let result = '';\n    if (id === -1) {\n      result = 'Not Available';\n    } else {\n      const data = userList.find((user) => user.id === id);\n      result = data?.user.name || 'Not Available';\n    }\n    return result;\n  };\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n    setSelected(newSelected);\n  };\n  const [batchState, setBatchState] = useState('All');\n  const RootStyle = styled(Toolbar)(({ theme }) => ({\n    height: 96,\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: theme.spacing(0, 1, 0, 3)\n  }));\n  const batchSelectHandler = (e) => {\n    setBatchState(e.target.value);\n    if (e.target.value === 'All') {\n      dispatch(getGroupList());\n    } else {\n      dispatch(getGroupByBatch(batchesList?.find((batch) => batch.batch === e.target.value)?.id));\n    }\n  };\n  return (\n    <Card>\n      <CardHeader title=\"Projects List\" sx={{ mb: 3 }} />\n      <RootStyle>\n        <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\n\n        <TextField\n          select\n          style={{ width: '250px' }}\n          label=\"Select Batch\"\n          placeholder=\"Select Batch\"\n          value={batchState}\n          SelectProps={{ native: true }}\n          onChange={(e) => batchSelectHandler(e)}\n        >\n          <option>All</option>\n          {batchesList.map((row) => (\n            <option>{row.batch}</option>\n          ))}\n        </TextField>\n      </RootStyle>\n      <Scrollbar>\n        <TableContainer sx={{ minWidth: 800 }}>\n          <Table>\n            <UserListHead\n              order={order}\n              orderBy={orderBy}\n              headLabel={TABLE_HEAD}\n              rowCount={groupList.length}\n              numSelected={selected.length}\n              onRequestSort={handleRequestSort}\n              onSelectAllClick={handleSelectAllClick}\n            />\n            <TableBody>\n              {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                const isItemSelected = selected.indexOf(row.id) !== -1;\n\n                return (\n                  <TableRow\n                    hover\n                    key={row.id}\n                    tabIndex={-1}\n                    role=\"checkbox\"\n                    selected={isItemSelected}\n                    aria-checked={isItemSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox checked={isItemSelected} onChange={(event) => handleClick(event, row.project_title)} />\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                      <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                        <Typography variant=\"subtitle2\" noWrap>\n                          {row.project_title}\n                        </Typography>\n                      </Stack>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <Label variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}>\n                        {batchesList?.find((batch) => batch.id === row.students[0]?.batch_id)?.batch}\n                      </Label>\n                    </TableCell>\n                    <TableCell align=\"left\">{sentenceCase(getSupervisorName(row))}</TableCell>\n                    <TableCell align=\"left\">\n                      <Label\n                        variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                        color={getColor(row.projectStatus)}\n                      >\n                        {sentenceCase(row.projectStatus)}\n                      </Label>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <Button onClick={() => downloadFile(row.id)}>\n                        <CloudDownload color=\"primary\" />\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            {isUserNotFound && (\n              <TableBody>\n                <TableRow>\n                  <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                    <SearchNotFound searchQuery={filterName} />\n                  </TableCell>\n                </TableRow>\n              </TableBody>\n            )}\n          </Table>\n        </TableContainer>\n        {/* <TableContainer sx={{ minWidth: 720 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Project Title</TableCell>\n                <TableCell>Technology</TableCell>\n                <TableCell>Supervisor</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell />\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {MOCK_INVOICES.map((row) => (\n                <TableRow key={row.id}>\n                  <TableCell>{`${row.id}`}</TableCell>\n                  <TableCell>{row.category}</TableCell>\n                  <TableCell>{row.price}</TableCell>\n                  <TableCell>\n                    <Label\n                      variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\n                      color={\n                        (row.status === 'in_progress' && 'warning') ||\n                        (row.status === 'cancelled' && 'error') ||\n                        'success'\n                      }\n                    >\n                      {sentenceCase(row.status)}\n                    </Label>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <MoreMenuButton />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer> */}\n      </Scrollbar>\n\n      <Divider />\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={groupList.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n      {/* <Box sx={{ p: 2, textAlign: 'right' }}>\n        <Button\n          to=\"#\"\n          size=\"small\"\n          color=\"inherit\"\n          component={RouterLink}\n          endIcon={<Icon icon={arrowIosForwardFill} />}\n        >\n          View All\n        </Button> \n      </Box>\n      */}\n    </Card>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\AppTopRelated.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\AppTopInstalledCountries.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\kanban.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\blog.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\chat.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\mail.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\redux\\slices\\calendar.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\upload\\UploadMultiFile.js",["1779"],"import { isString } from 'lodash';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport { useDropzone } from 'react-dropzone';\nimport fileFill from '@iconify/icons-eva/file-fill';\nimport closeFill from '@iconify/icons-eva/close-fill';\nimport { motion, AnimatePresence } from 'framer-motion';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport {\n  Box,\n  List,\n  Stack,\n  Paper,\n  Button,\n  ListItem,\n  Typography,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction\n} from '@mui/material';\n// utils\nimport { fData } from '../../utils/formatNumber';\n//\nimport { MIconButton } from '../@material-extend';\nimport { varFadeInRight } from '../animate';\nimport { UploadIllustration } from '../../assets';\n\n// ----------------------------------------------------------------------\n\nconst DropZoneStyle = styled('div')(({ theme }) => ({\n  outline: 'none',\n  display: 'flex',\n  textAlign: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(5, 1),\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: theme.palette.background.neutral,\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\n  '&:hover': { opacity: 0.72, cursor: 'pointer' },\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' }\n}));\n\n// ----------------------------------------------------------------------\n\nUploadMultiFile.propTypes = {\n  error: PropTypes.bool,\n  showPreview: PropTypes.bool,\n  files: PropTypes.array,\n  onRemove: PropTypes.func,\n  onRemoveAll: PropTypes.func,\n  sx: PropTypes.object\n};\n\nexport default function UploadMultiFile({\n  error,\n  showPreview = false,\n  files,\n  onRemove,\n  onRemoveAll,\n  onUpload,\n  sx,\n  ...other\n}) {\n  const hasFile = files.length > 0;\n\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\n    ...other\n  });\n\n  const ShowRejectionItems = () => (\n    <Paper\n      variant=\"outlined\"\n      sx={{\n        py: 1,\n        px: 2,\n        mt: 3,\n        borderColor: 'error.light',\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\n      }}\n    >\n      {fileRejections.map(({ file, errors }) => {\n        const { path, size } = file;\n        return (\n          <Box key={path} sx={{ my: 1 }}>\n            <Typography variant=\"subtitle2\" noWrap>\n              {path} - {fData(size)}\n            </Typography>\n            {errors.map((e) => (\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\n                - {e.message}\n              </Typography>\n            ))}\n          </Box>\n        );\n      })}\n    </Paper>\n  );\n\n  return (\n    <Box sx={{ width: '100%', ...sx }}>\n      <DropZoneStyle\n        {...getRootProps()}\n        sx={{\n          ...(isDragActive && { opacity: 0.72 }),\n          ...((isDragReject || error) && {\n            color: 'error.main',\n            borderColor: 'error.light',\n            bgcolor: 'error.lighter'\n          })\n        }}\n      >\n        <input {...getInputProps()} />\n\n        <UploadIllustration sx={{ width: 220 }} />\n\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\n          <Typography gutterBottom variant=\"h5\">\n            Drop or Select file\n          </Typography>\n\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Drop files here or click&nbsp;\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\n              browse\n            </Typography>\n            &nbsp;thorough your machine\n          </Typography>\n        </Box>\n      </DropZoneStyle>\n\n      {fileRejections.length > 0 && <ShowRejectionItems />}\n\n      <List disablePadding sx={{ ...(hasFile && { my: 3 }) }}>\n        <AnimatePresence>\n          {files.map((file) => {\n            const { name, size, preview } = file;\n            const key = isString(file) ? file : name;\n\n            if (showPreview) {\n              return (\n                <ListItem\n                  key={key}\n                  component={motion.div}\n                  {...varFadeInRight}\n                  sx={{\n                    p: 0,\n                    m: 0.5,\n                    width: 80,\n                    height: 80,\n                    borderRadius: 1.5,\n                    overflow: 'hidden',\n                    position: 'relative',\n                    display: 'inline-flex'\n                  }}\n                >\n                  <Paper\n                    variant=\"outlined\"\n                    component=\"img\"\n                    src={isString(file) ? file : preview}\n                    sx={{ width: '100%', height: '100%', objectFit: 'cover', position: 'absolute' }}\n                  />\n                  <Box sx={{ top: 6, right: 6, position: 'absolute' }}>\n                    <MIconButton\n                      size=\"small\"\n                      onClick={() => onRemove(file)}\n                      sx={{\n                        p: '2px',\n                        color: 'common.white',\n                        bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\n                        '&:hover': {\n                          bgcolor: (theme) => alpha(theme.palette.grey[900], 0.48)\n                        }\n                      }}\n                    >\n                      <Icon icon={closeFill} />\n                    </MIconButton>\n                  </Box>\n                </ListItem>\n              );\n            }\n\n            return (\n              <ListItem\n                key={key}\n                component={motion.div}\n                {...varFadeInRight}\n                sx={{\n                  my: 1,\n                  py: 0.75,\n                  px: 2,\n                  borderRadius: 1,\n                  border: (theme) => `solid 1px ${theme.palette.divider}`,\n                  bgcolor: 'background.paper'\n                }}\n              >\n                <ListItemIcon>\n                  <Icon icon={fileFill} width={28} height={28} />\n                </ListItemIcon>\n                <ListItemText\n                  primary={isString(file) ? file : name}\n                  secondary={isString(file) ? '' : fData(size)}\n                  primaryTypographyProps={{ variant: 'subtitle2' }}\n                  secondaryTypographyProps={{ variant: 'caption' }}\n                />\n                <ListItemSecondaryAction>\n                  <MIconButton edge=\"end\" size=\"small\" onClick={() => onRemove(file)}>\n                    <Icon icon={closeFill} />\n                  </MIconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            );\n          })}\n        </AnimatePresence>\n      </List>\n\n      {hasFile && (\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\n          <Button onClick={onRemoveAll} sx={{ mr: 1.5 }}>\n            Remove all\n          </Button>\n          <Button variant=\"contained\" onClick={onUpload}>\n            Upload files\n          </Button>\n        </Stack>\n      )}\n    </Box>\n  );\n}\n","D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\upload\\UploadSingleFile.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\upload\\UploadAvatar.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\_dashboard\\general-app\\formatNumber.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\Wrap.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\Actions.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\Path.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\editor\\quill\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\editor\\draft\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\scale\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\rotate\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\flip\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\zoom\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\bounce\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\background\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\fade\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\slide\\index.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\editor\\draft\\DraftEditorStyle.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\editor\\draft\\DraftEditorToolbar.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\editor\\quill\\QuillEditorToolbar.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\scale\\ScaleIn.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\flip\\FlipIn.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\rotate\\RotateIn.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\flip\\FlipOut.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\rotate\\RotateOut.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\zoom\\In.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\scale\\ScaleOut.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\bounce\\BounceIn.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\bounce\\BounceOut.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\zoom\\Out.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\background\\BackgroundKenburns.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\slide\\SlideOut.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\slide\\SlideIn.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\fade\\FadeIn.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\fade\\FadeOut.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\editor\\quill\\QuillEditorToolbarStyle.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\background\\BackgroundPan.js",[],"D:\\FYP\\FYP-MS-Project-main\\FYP-MS-Project-main\\client\\src\\components\\animate\\variants\\background\\BackgroundColor.js",[],{"ruleId":"1780","severity":1,"message":"1781","line":8,"column":8,"nodeType":"1782","messageId":"1783","endLine":8,"endColumn":12},{"ruleId":"1780","severity":1,"message":"1784","line":1,"column":10,"nodeType":"1782","messageId":"1783","endLine":1,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1781","line":5,"column":8,"nodeType":"1782","messageId":"1783","endLine":5,"endColumn":12},{"ruleId":"1780","severity":1,"message":"1785","line":74,"column":8,"nodeType":"1782","messageId":"1783","endLine":74,"endColumn":28},{"ruleId":"1780","severity":1,"message":"1786","line":2,"column":10,"nodeType":"1782","messageId":"1783","endLine":2,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1787","line":3,"column":10,"nodeType":"1782","messageId":"1783","endLine":3,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1788","line":5,"column":8,"nodeType":"1782","messageId":"1783","endLine":5,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1789","line":6,"column":18,"nodeType":"1782","messageId":"1783","endLine":6,"endColumn":28},{"ruleId":"1780","severity":1,"message":"1790","line":8,"column":8,"nodeType":"1782","messageId":"1783","endLine":8,"endColumn":29},{"ruleId":"1780","severity":1,"message":"1791","line":11,"column":8,"nodeType":"1782","messageId":"1783","endLine":11,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1792","line":12,"column":8,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1793","line":13,"column":8,"nodeType":"1782","messageId":"1783","endLine":13,"endColumn":20},{"ruleId":"1780","severity":1,"message":"1794","line":14,"column":8,"nodeType":"1782","messageId":"1783","endLine":14,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1795","line":15,"column":8,"nodeType":"1782","messageId":"1783","endLine":15,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1796","line":16,"column":8,"nodeType":"1782","messageId":"1783","endLine":16,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1797","line":17,"column":8,"nodeType":"1782","messageId":"1783","endLine":17,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1798","line":25,"column":3,"nodeType":"1782","messageId":"1783","endLine":25,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1799","line":27,"column":3,"nodeType":"1782","messageId":"1783","endLine":27,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1800","line":34,"column":3,"nodeType":"1782","messageId":"1783","endLine":34,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1801","line":42,"column":26,"nodeType":"1782","messageId":"1783","endLine":42,"endColumn":37},{"ruleId":"1780","severity":1,"message":"1802","line":44,"column":10,"nodeType":"1782","messageId":"1783","endLine":44,"endColumn":27},{"ruleId":"1803","severity":1,"message":"1804","line":119,"column":6,"nodeType":"1805","endLine":119,"endColumn":16,"suggestions":"1806"},{"ruleId":"1780","severity":1,"message":"1807","line":177,"column":9,"nodeType":"1782","messageId":"1783","endLine":177,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1808","line":178,"column":9,"nodeType":"1782","messageId":"1783","endLine":178,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1809","line":181,"column":9,"nodeType":"1782","messageId":"1783","endLine":181,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1810","line":186,"column":9,"nodeType":"1782","messageId":"1783","endLine":186,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1811","line":224,"column":9,"nodeType":"1782","messageId":"1783","endLine":224,"endColumn":17},{"ruleId":"1780","severity":1,"message":"1812","line":235,"column":9,"nodeType":"1782","messageId":"1783","endLine":235,"endColumn":23},{"ruleId":"1780","severity":1,"message":"1813","line":263,"column":9,"nodeType":"1782","messageId":"1783","endLine":263,"endColumn":26},{"ruleId":"1814","severity":1,"message":"1815","line":297,"column":17,"nodeType":"1816","messageId":"1817","endLine":297,"endColumn":45},{"ruleId":"1780","severity":1,"message":"1786","line":2,"column":10,"nodeType":"1782","messageId":"1783","endLine":2,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1788","line":5,"column":8,"nodeType":"1782","messageId":"1783","endLine":5,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1789","line":6,"column":18,"nodeType":"1782","messageId":"1783","endLine":6,"endColumn":28},{"ruleId":"1780","severity":1,"message":"1790","line":8,"column":8,"nodeType":"1782","messageId":"1783","endLine":8,"endColumn":29},{"ruleId":"1780","severity":1,"message":"1791","line":11,"column":8,"nodeType":"1782","messageId":"1783","endLine":11,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1792","line":12,"column":8,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1793","line":13,"column":8,"nodeType":"1782","messageId":"1783","endLine":13,"endColumn":20},{"ruleId":"1780","severity":1,"message":"1794","line":14,"column":8,"nodeType":"1782","messageId":"1783","endLine":14,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1795","line":15,"column":8,"nodeType":"1782","messageId":"1783","endLine":15,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1796","line":16,"column":8,"nodeType":"1782","messageId":"1783","endLine":16,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1797","line":17,"column":8,"nodeType":"1782","messageId":"1783","endLine":17,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1798","line":25,"column":3,"nodeType":"1782","messageId":"1783","endLine":25,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1799","line":27,"column":3,"nodeType":"1782","messageId":"1783","endLine":27,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1800","line":34,"column":3,"nodeType":"1782","messageId":"1783","endLine":34,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1801","line":41,"column":26,"nodeType":"1782","messageId":"1783","endLine":41,"endColumn":37},{"ruleId":"1780","severity":1,"message":"1807","line":176,"column":9,"nodeType":"1782","messageId":"1783","endLine":176,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1808","line":177,"column":9,"nodeType":"1782","messageId":"1783","endLine":177,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1809","line":180,"column":9,"nodeType":"1782","messageId":"1783","endLine":180,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1810","line":185,"column":9,"nodeType":"1782","messageId":"1783","endLine":185,"endColumn":19},{"ruleId":"1814","severity":1,"message":"1815","line":294,"column":17,"nodeType":"1816","messageId":"1817","endLine":294,"endColumn":45},{"ruleId":"1780","severity":1,"message":"1818","line":66,"column":31,"nodeType":"1782","messageId":"1783","endLine":66,"endColumn":49},{"ruleId":"1780","severity":1,"message":"1819","line":66,"column":51,"nodeType":"1782","messageId":"1783","endLine":66,"endColumn":73},{"ruleId":"1780","severity":1,"message":"1820","line":2,"column":10,"nodeType":"1782","messageId":"1783","endLine":2,"endColumn":19},{"ruleId":"1803","severity":1,"message":"1821","line":32,"column":6,"nodeType":"1805","endLine":32,"endColumn":16,"suggestions":"1822"},{"ruleId":"1780","severity":1,"message":"1823","line":7,"column":10,"nodeType":"1782","messageId":"1783","endLine":7,"endColumn":26},{"ruleId":"1780","severity":1,"message":"1824","line":11,"column":10,"nodeType":"1782","messageId":"1783","endLine":11,"endColumn":24},{"ruleId":"1780","severity":1,"message":"1825","line":16,"column":8,"nodeType":"1782","messageId":"1783","endLine":16,"endColumn":25},{"ruleId":"1780","severity":1,"message":"1826","line":17,"column":8,"nodeType":"1782","messageId":"1783","endLine":17,"endColumn":28},{"ruleId":"1780","severity":1,"message":"1827","line":27,"column":9,"nodeType":"1782","messageId":"1783","endLine":27,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1828","line":28,"column":9,"nodeType":"1782","messageId":"1783","endLine":28,"endColumn":20},{"ruleId":"1780","severity":1,"message":"1786","line":2,"column":10,"nodeType":"1782","messageId":"1783","endLine":2,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1787","line":3,"column":10,"nodeType":"1782","messageId":"1783","endLine":3,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1788","line":5,"column":8,"nodeType":"1782","messageId":"1783","endLine":5,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1789","line":6,"column":18,"nodeType":"1782","messageId":"1783","endLine":6,"endColumn":28},{"ruleId":"1780","severity":1,"message":"1790","line":8,"column":8,"nodeType":"1782","messageId":"1783","endLine":8,"endColumn":29},{"ruleId":"1780","severity":1,"message":"1791","line":11,"column":8,"nodeType":"1782","messageId":"1783","endLine":11,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1792","line":12,"column":8,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1793","line":13,"column":8,"nodeType":"1782","messageId":"1783","endLine":13,"endColumn":20},{"ruleId":"1780","severity":1,"message":"1794","line":14,"column":8,"nodeType":"1782","messageId":"1783","endLine":14,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1795","line":15,"column":8,"nodeType":"1782","messageId":"1783","endLine":15,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1796","line":16,"column":8,"nodeType":"1782","messageId":"1783","endLine":16,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1797","line":17,"column":8,"nodeType":"1782","messageId":"1783","endLine":17,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1829","line":21,"column":3,"nodeType":"1782","messageId":"1783","endLine":21,"endColumn":7},{"ruleId":"1780","severity":1,"message":"1830","line":22,"column":3,"nodeType":"1782","messageId":"1783","endLine":22,"endColumn":8},{"ruleId":"1780","severity":1,"message":"1831","line":23,"column":3,"nodeType":"1782","messageId":"1783","endLine":23,"endColumn":8},{"ruleId":"1780","severity":1,"message":"1798","line":24,"column":3,"nodeType":"1782","messageId":"1783","endLine":24,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1799","line":25,"column":3,"nodeType":"1782","messageId":"1783","endLine":25,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1832","line":26,"column":3,"nodeType":"1782","messageId":"1783","endLine":26,"endColumn":11},{"ruleId":"1780","severity":1,"message":"1833","line":27,"column":3,"nodeType":"1782","messageId":"1783","endLine":27,"endColumn":11},{"ruleId":"1780","severity":1,"message":"1834","line":28,"column":3,"nodeType":"1782","messageId":"1783","endLine":28,"endColumn":12},{"ruleId":"1780","severity":1,"message":"1835","line":29,"column":3,"nodeType":"1782","messageId":"1783","endLine":29,"endColumn":12},{"ruleId":"1780","severity":1,"message":"1836","line":32,"column":3,"nodeType":"1782","messageId":"1783","endLine":32,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1837","line":33,"column":3,"nodeType":"1782","messageId":"1783","endLine":33,"endColumn":17},{"ruleId":"1780","severity":1,"message":"1838","line":34,"column":3,"nodeType":"1782","messageId":"1783","endLine":34,"endColumn":18},{"ruleId":"1780","severity":1,"message":"1839","line":38,"column":10,"nodeType":"1782","messageId":"1783","endLine":38,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1840","line":44,"column":10,"nodeType":"1782","messageId":"1783","endLine":44,"endColumn":20},{"ruleId":"1780","severity":1,"message":"1824","line":47,"column":10,"nodeType":"1782","messageId":"1783","endLine":47,"endColumn":24},{"ruleId":"1780","severity":1,"message":"1841","line":52,"column":8,"nodeType":"1782","messageId":"1783","endLine":52,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1842","line":53,"column":8,"nodeType":"1782","messageId":"1783","endLine":53,"endColumn":17},{"ruleId":"1780","severity":1,"message":"1843","line":54,"column":8,"nodeType":"1782","messageId":"1783","endLine":54,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1825","line":55,"column":8,"nodeType":"1782","messageId":"1783","endLine":55,"endColumn":25},{"ruleId":"1780","severity":1,"message":"1844","line":60,"column":7,"nodeType":"1782","messageId":"1783","endLine":60,"endColumn":17},{"ruleId":"1780","severity":1,"message":"1845","line":103,"column":9,"nodeType":"1782","messageId":"1783","endLine":103,"endColumn":14},{"ruleId":"1803","severity":1,"message":"1846","line":118,"column":6,"nodeType":"1805","endLine":118,"endColumn":16,"suggestions":"1847"},{"ruleId":"1780","severity":1,"message":"1848","line":120,"column":9,"nodeType":"1782","messageId":"1783","endLine":120,"endColumn":26},{"ruleId":"1780","severity":1,"message":"1849","line":126,"column":9,"nodeType":"1782","messageId":"1783","endLine":126,"endColumn":29},{"ruleId":"1780","severity":1,"message":"1850","line":135,"column":9,"nodeType":"1782","messageId":"1783","endLine":135,"endColumn":20},{"ruleId":"1780","severity":1,"message":"1851","line":150,"column":9,"nodeType":"1782","messageId":"1783","endLine":150,"endColumn":25},{"ruleId":"1780","severity":1,"message":"1852","line":154,"column":9,"nodeType":"1782","messageId":"1783","endLine":154,"endColumn":32},{"ruleId":"1780","severity":1,"message":"1853","line":159,"column":9,"nodeType":"1782","messageId":"1783","endLine":159,"endColumn":27},{"ruleId":"1780","severity":1,"message":"1854","line":163,"column":9,"nodeType":"1782","messageId":"1783","endLine":163,"endColumn":25},{"ruleId":"1780","severity":1,"message":"1855","line":167,"column":9,"nodeType":"1782","messageId":"1783","endLine":167,"endColumn":18},{"ruleId":"1780","severity":1,"message":"1856","line":171,"column":9,"nodeType":"1782","messageId":"1783","endLine":171,"endColumn":23},{"ruleId":"1780","severity":1,"message":"1807","line":176,"column":9,"nodeType":"1782","messageId":"1783","endLine":176,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1808","line":177,"column":9,"nodeType":"1782","messageId":"1783","endLine":177,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1809","line":180,"column":9,"nodeType":"1782","messageId":"1783","endLine":180,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1810","line":185,"column":9,"nodeType":"1782","messageId":"1783","endLine":185,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1857","line":223,"column":9,"nodeType":"1782","messageId":"1783","endLine":223,"endColumn":12},{"ruleId":"1780","severity":1,"message":"1858","line":231,"column":41,"nodeType":"1782","messageId":"1783","endLine":231,"endColumn":46},{"ruleId":"1814","severity":1,"message":"1815","line":232,"column":15,"nodeType":"1816","messageId":"1817","endLine":235,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1858","line":237,"column":41,"nodeType":"1782","messageId":"1783","endLine":237,"endColumn":46},{"ruleId":"1814","severity":1,"message":"1815","line":238,"column":15,"nodeType":"1816","messageId":"1817","endLine":241,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1831","line":2,"column":27,"nodeType":"1782","messageId":"1783","endLine":2,"endColumn":32},{"ruleId":"1780","severity":1,"message":"1859","line":11,"column":3,"nodeType":"1782","messageId":"1783","endLine":11,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1860","line":14,"column":3,"nodeType":"1782","messageId":"1783","endLine":14,"endColumn":27},{"ruleId":"1780","severity":1,"message":"1861","line":9,"column":24,"nodeType":"1782","messageId":"1783","endLine":9,"endColumn":35},{"ruleId":"1780","severity":1,"message":"1862","line":6,"column":8,"nodeType":"1782","messageId":"1783","endLine":6,"endColumn":23},{"ruleId":"1780","severity":1,"message":"1800","line":19,"column":3,"nodeType":"1782","messageId":"1783","endLine":19,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1863","line":23,"column":3,"nodeType":"1782","messageId":"1783","endLine":23,"endColumn":10},{"ruleId":"1780","severity":1,"message":"1864","line":181,"column":9,"nodeType":"1782","messageId":"1783","endLine":181,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1865","line":182,"column":9,"nodeType":"1782","messageId":"1783","endLine":182,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1866","line":185,"column":9,"nodeType":"1782","messageId":"1783","endLine":185,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1867","line":231,"column":11,"nodeType":"1782","messageId":"1783","endLine":231,"endColumn":12},{"ruleId":"1814","severity":1,"message":"1815","line":358,"column":21,"nodeType":"1816","messageId":"1817","endLine":358,"endColumn":49},{"ruleId":"1814","severity":1,"message":"1815","line":374,"column":19,"nodeType":"1816","messageId":"1817","endLine":374,"endColumn":51},{"ruleId":"1780","severity":1,"message":"1787","line":3,"column":10,"nodeType":"1782","messageId":"1783","endLine":3,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1841","line":33,"column":8,"nodeType":"1782","messageId":"1783","endLine":33,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1845","line":80,"column":9,"nodeType":"1782","messageId":"1783","endLine":80,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1787","line":3,"column":10,"nodeType":"1782","messageId":"1783","endLine":3,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1868","line":37,"column":41,"nodeType":"1782","messageId":"1783","endLine":37,"endColumn":53},{"ruleId":"1780","severity":1,"message":"1787","line":3,"column":10,"nodeType":"1782","messageId":"1783","endLine":3,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1790","line":8,"column":8,"nodeType":"1782","messageId":"1783","endLine":8,"endColumn":29},{"ruleId":"1780","severity":1,"message":"1869","line":9,"column":20,"nodeType":"1782","messageId":"1783","endLine":9,"endColumn":26},{"ruleId":"1780","severity":1,"message":"1784","line":9,"column":28,"nodeType":"1782","messageId":"1783","endLine":9,"endColumn":33},{"ruleId":"1780","severity":1,"message":"1870","line":10,"column":8,"nodeType":"1782","messageId":"1783","endLine":10,"endColumn":12},{"ruleId":"1780","severity":1,"message":"1791","line":11,"column":8,"nodeType":"1782","messageId":"1783","endLine":11,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1792","line":12,"column":8,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1793","line":13,"column":8,"nodeType":"1782","messageId":"1783","endLine":13,"endColumn":20},{"ruleId":"1780","severity":1,"message":"1794","line":14,"column":8,"nodeType":"1782","messageId":"1783","endLine":14,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1795","line":15,"column":8,"nodeType":"1782","messageId":"1783","endLine":15,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1796","line":16,"column":8,"nodeType":"1782","messageId":"1783","endLine":16,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1797","line":17,"column":8,"nodeType":"1782","messageId":"1783","endLine":17,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1798","line":26,"column":3,"nodeType":"1782","messageId":"1783","endLine":26,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1841","line":47,"column":8,"nodeType":"1782","messageId":"1783","endLine":47,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1871","line":51,"column":41,"nodeType":"1782","messageId":"1783","endLine":51,"endColumn":53},{"ruleId":"1780","severity":1,"message":"1872","line":52,"column":8,"nodeType":"1782","messageId":"1783","endLine":52,"endColumn":28},{"ruleId":"1780","severity":1,"message":"1845","line":95,"column":9,"nodeType":"1782","messageId":"1783","endLine":95,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1854","line":162,"column":9,"nodeType":"1782","messageId":"1783","endLine":162,"endColumn":25},{"ruleId":"1780","severity":1,"message":"1873","line":175,"column":10,"nodeType":"1782","messageId":"1783","endLine":175,"endColumn":18},{"ruleId":"1780","severity":1,"message":"1874","line":175,"column":20,"nodeType":"1782","messageId":"1783","endLine":175,"endColumn":31},{"ruleId":"1780","severity":1,"message":"1786","line":38,"column":10,"nodeType":"1782","messageId":"1783","endLine":38,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1787","line":39,"column":10,"nodeType":"1782","messageId":"1783","endLine":39,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1869","line":42,"column":20,"nodeType":"1782","messageId":"1783","endLine":42,"endColumn":26},{"ruleId":"1780","severity":1,"message":"1784","line":42,"column":28,"nodeType":"1782","messageId":"1783","endLine":42,"endColumn":33},{"ruleId":"1780","severity":1,"message":"1798","line":49,"column":3,"nodeType":"1782","messageId":"1783","endLine":49,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1799","line":50,"column":3,"nodeType":"1782","messageId":"1783","endLine":50,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1875","line":52,"column":3,"nodeType":"1782","messageId":"1783","endLine":52,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1871","line":77,"column":41,"nodeType":"1782","messageId":"1783","endLine":77,"endColumn":53},{"ruleId":"1780","severity":1,"message":"1872","line":78,"column":8,"nodeType":"1782","messageId":"1783","endLine":78,"endColumn":28},{"ruleId":"1780","severity":1,"message":"1876","line":122,"column":11,"nodeType":"1782","messageId":"1783","endLine":122,"endColumn":22},{"ruleId":"1803","severity":1,"message":"1804","line":132,"column":6,"nodeType":"1805","endLine":132,"endColumn":16,"suggestions":"1877"},{"ruleId":"1780","severity":1,"message":"1873","line":189,"column":10,"nodeType":"1782","messageId":"1783","endLine":189,"endColumn":18},{"ruleId":"1780","severity":1,"message":"1874","line":189,"column":20,"nodeType":"1782","messageId":"1783","endLine":189,"endColumn":31},{"ruleId":"1780","severity":1,"message":"1786","line":2,"column":10,"nodeType":"1782","messageId":"1783","endLine":2,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1787","line":3,"column":10,"nodeType":"1782","messageId":"1783","endLine":3,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1784","line":6,"column":28,"nodeType":"1782","messageId":"1783","endLine":6,"endColumn":33},{"ruleId":"1780","severity":1,"message":"1799","line":14,"column":3,"nodeType":"1782","messageId":"1783","endLine":14,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1871","line":40,"column":41,"nodeType":"1782","messageId":"1783","endLine":40,"endColumn":53},{"ruleId":"1780","severity":1,"message":"1872","line":41,"column":8,"nodeType":"1782","messageId":"1783","endLine":41,"endColumn":28},{"ruleId":"1780","severity":1,"message":"1873","line":166,"column":10,"nodeType":"1782","messageId":"1783","endLine":166,"endColumn":18},{"ruleId":"1780","severity":1,"message":"1874","line":166,"column":20,"nodeType":"1782","messageId":"1783","endLine":166,"endColumn":31},{"ruleId":"1814","severity":1,"message":"1815","line":190,"column":17,"nodeType":"1816","messageId":"1817","endLine":190,"endColumn":45},{"ruleId":"1780","severity":1,"message":"1786","line":2,"column":10,"nodeType":"1782","messageId":"1783","endLine":2,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1787","line":3,"column":10,"nodeType":"1782","messageId":"1783","endLine":3,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1788","line":5,"column":8,"nodeType":"1782","messageId":"1783","endLine":5,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1789","line":6,"column":18,"nodeType":"1782","messageId":"1783","endLine":6,"endColumn":28},{"ruleId":"1780","severity":1,"message":"1790","line":8,"column":8,"nodeType":"1782","messageId":"1783","endLine":8,"endColumn":29},{"ruleId":"1780","severity":1,"message":"1869","line":9,"column":20,"nodeType":"1782","messageId":"1783","endLine":9,"endColumn":26},{"ruleId":"1780","severity":1,"message":"1784","line":9,"column":28,"nodeType":"1782","messageId":"1783","endLine":9,"endColumn":33},{"ruleId":"1780","severity":1,"message":"1870","line":10,"column":8,"nodeType":"1782","messageId":"1783","endLine":10,"endColumn":12},{"ruleId":"1780","severity":1,"message":"1791","line":11,"column":8,"nodeType":"1782","messageId":"1783","endLine":11,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1792","line":12,"column":8,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1793","line":13,"column":8,"nodeType":"1782","messageId":"1783","endLine":13,"endColumn":20},{"ruleId":"1780","severity":1,"message":"1794","line":14,"column":8,"nodeType":"1782","messageId":"1783","endLine":14,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1795","line":15,"column":8,"nodeType":"1782","messageId":"1783","endLine":15,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1796","line":16,"column":8,"nodeType":"1782","messageId":"1783","endLine":16,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1797","line":17,"column":8,"nodeType":"1782","messageId":"1783","endLine":17,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1878","line":19,"column":8,"nodeType":"1782","messageId":"1783","endLine":19,"endColumn":34},{"ruleId":"1780","severity":1,"message":"1798","line":26,"column":3,"nodeType":"1782","messageId":"1783","endLine":26,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1799","line":27,"column":3,"nodeType":"1782","messageId":"1783","endLine":27,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1841","line":46,"column":8,"nodeType":"1782","messageId":"1783","endLine":46,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1871","line":50,"column":41,"nodeType":"1782","messageId":"1783","endLine":50,"endColumn":53},{"ruleId":"1780","severity":1,"message":"1872","line":51,"column":8,"nodeType":"1782","messageId":"1783","endLine":51,"endColumn":28},{"ruleId":"1780","severity":1,"message":"1845","line":93,"column":9,"nodeType":"1782","messageId":"1783","endLine":93,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1879","line":112,"column":9,"nodeType":"1782","messageId":"1783","endLine":112,"endColumn":33},{"ruleId":"1780","severity":1,"message":"1880","line":125,"column":9,"nodeType":"1782","messageId":"1783","endLine":125,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1873","line":163,"column":10,"nodeType":"1782","messageId":"1783","endLine":163,"endColumn":18},{"ruleId":"1780","severity":1,"message":"1874","line":163,"column":20,"nodeType":"1782","messageId":"1783","endLine":163,"endColumn":31},{"ruleId":"1780","severity":1,"message":"1787","line":3,"column":10,"nodeType":"1782","messageId":"1783","endLine":3,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1790","line":8,"column":8,"nodeType":"1782","messageId":"1783","endLine":8,"endColumn":29},{"ruleId":"1780","severity":1,"message":"1784","line":9,"column":28,"nodeType":"1782","messageId":"1783","endLine":9,"endColumn":33},{"ruleId":"1780","severity":1,"message":"1878","line":12,"column":8,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":34},{"ruleId":"1780","severity":1,"message":"1798","line":20,"column":3,"nodeType":"1782","messageId":"1783","endLine":20,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1841","line":43,"column":8,"nodeType":"1782","messageId":"1783","endLine":43,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1871","line":47,"column":41,"nodeType":"1782","messageId":"1783","endLine":47,"endColumn":53},{"ruleId":"1780","severity":1,"message":"1845","line":93,"column":9,"nodeType":"1782","messageId":"1783","endLine":93,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1873","line":183,"column":10,"nodeType":"1782","messageId":"1783","endLine":183,"endColumn":18},{"ruleId":"1780","severity":1,"message":"1874","line":183,"column":20,"nodeType":"1782","messageId":"1783","endLine":183,"endColumn":31},{"ruleId":"1814","severity":1,"message":"1815","line":217,"column":17,"nodeType":"1816","messageId":"1817","endLine":217,"endColumn":45},{"ruleId":"1780","severity":1,"message":"1820","line":2,"column":10,"nodeType":"1782","messageId":"1783","endLine":2,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1881","line":26,"column":11,"nodeType":"1782","messageId":"1783","endLine":26,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1882","line":7,"column":41,"nodeType":"1782","messageId":"1783","endLine":7,"endColumn":52},{"ruleId":"1780","severity":1,"message":"1790","line":9,"column":8,"nodeType":"1782","messageId":"1783","endLine":9,"endColumn":29},{"ruleId":"1780","severity":1,"message":"1784","line":10,"column":28,"nodeType":"1782","messageId":"1783","endLine":10,"endColumn":33},{"ruleId":"1780","severity":1,"message":"1798","line":19,"column":3,"nodeType":"1782","messageId":"1783","endLine":19,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1883","line":20,"column":3,"nodeType":"1782","messageId":"1783","endLine":20,"endColumn":12},{"ruleId":"1780","severity":1,"message":"1845","line":85,"column":9,"nodeType":"1782","messageId":"1783","endLine":85,"endColumn":14},{"ruleId":"1803","severity":1,"message":"1821","line":99,"column":6,"nodeType":"1805","endLine":99,"endColumn":16,"suggestions":"1884"},{"ruleId":"1780","severity":1,"message":"1885","line":153,"column":10,"nodeType":"1782","messageId":"1783","endLine":153,"endColumn":20},{"ruleId":"1780","severity":1,"message":"1886","line":153,"column":22,"nodeType":"1782","messageId":"1783","endLine":153,"endColumn":35},{"ruleId":"1780","severity":1,"message":"1873","line":161,"column":10,"nodeType":"1782","messageId":"1783","endLine":161,"endColumn":18},{"ruleId":"1780","severity":1,"message":"1874","line":161,"column":20,"nodeType":"1782","messageId":"1783","endLine":161,"endColumn":31},{"ruleId":"1780","severity":1,"message":"1786","line":2,"column":10,"nodeType":"1782","messageId":"1783","endLine":2,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1787","line":3,"column":10,"nodeType":"1782","messageId":"1783","endLine":3,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1882","line":4,"column":21,"nodeType":"1782","messageId":"1783","endLine":4,"endColumn":32},{"ruleId":"1780","severity":1,"message":"1788","line":6,"column":8,"nodeType":"1782","messageId":"1783","endLine":6,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1790","line":8,"column":8,"nodeType":"1782","messageId":"1783","endLine":8,"endColumn":29},{"ruleId":"1780","severity":1,"message":"1869","line":9,"column":20,"nodeType":"1782","messageId":"1783","endLine":9,"endColumn":26},{"ruleId":"1780","severity":1,"message":"1784","line":9,"column":28,"nodeType":"1782","messageId":"1783","endLine":9,"endColumn":33},{"ruleId":"1780","severity":1,"message":"1878","line":12,"column":8,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":34},{"ruleId":"1780","severity":1,"message":"1798","line":21,"column":3,"nodeType":"1782","messageId":"1783","endLine":21,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1887","line":33,"column":8,"nodeType":"1782","messageId":"1783","endLine":33,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1824","line":42,"column":10,"nodeType":"1782","messageId":"1783","endLine":42,"endColumn":24},{"ruleId":"1780","severity":1,"message":"1825","line":50,"column":8,"nodeType":"1782","messageId":"1783","endLine":50,"endColumn":25},{"ruleId":"1780","severity":1,"message":"1871","line":51,"column":41,"nodeType":"1782","messageId":"1783","endLine":51,"endColumn":53},{"ruleId":"1780","severity":1,"message":"1888","line":52,"column":8,"nodeType":"1782","messageId":"1783","endLine":52,"endColumn":22},{"ruleId":"1803","severity":1,"message":"1821","line":114,"column":6,"nodeType":"1805","endLine":114,"endColumn":16,"suggestions":"1889"},{"ruleId":"1780","severity":1,"message":"1820","line":2,"column":10,"nodeType":"1782","messageId":"1783","endLine":2,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1881","line":26,"column":11,"nodeType":"1782","messageId":"1783","endLine":26,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1890","line":3,"column":10,"nodeType":"1782","messageId":"1783","endLine":3,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1891","line":11,"column":10,"nodeType":"1782","messageId":"1783","endLine":11,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1892","line":25,"column":9,"nodeType":"1782","messageId":"1783","endLine":25,"endColumn":17},{"ruleId":"1780","severity":1,"message":"1893","line":17,"column":7,"nodeType":"1782","messageId":"1783","endLine":17,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1894","line":30,"column":11,"nodeType":"1782","messageId":"1783","endLine":30,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1895","line":1,"column":18,"nodeType":"1782","messageId":"1783","endLine":1,"endColumn":24},{"ruleId":"1780","severity":1,"message":"1882","line":4,"column":21,"nodeType":"1782","messageId":"1783","endLine":4,"endColumn":32},{"ruleId":"1780","severity":1,"message":"1784","line":5,"column":28,"nodeType":"1782","messageId":"1783","endLine":5,"endColumn":33},{"ruleId":"1780","severity":1,"message":"1798","line":15,"column":3,"nodeType":"1782","messageId":"1783","endLine":15,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1896","line":16,"column":3,"nodeType":"1782","messageId":"1783","endLine":16,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1897","line":18,"column":3,"nodeType":"1782","messageId":"1783","endLine":18,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1887","line":32,"column":8,"nodeType":"1782","messageId":"1783","endLine":32,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1824","line":39,"column":10,"nodeType":"1782","messageId":"1783","endLine":39,"endColumn":24},{"ruleId":"1780","severity":1,"message":"1825","line":47,"column":8,"nodeType":"1782","messageId":"1783","endLine":47,"endColumn":25},{"ruleId":"1780","severity":1,"message":"1898","line":48,"column":24,"nodeType":"1782","messageId":"1783","endLine":48,"endColumn":39},{"ruleId":"1780","severity":1,"message":"1871","line":48,"column":41,"nodeType":"1782","messageId":"1783","endLine":48,"endColumn":53},{"ruleId":"1780","severity":1,"message":"1888","line":49,"column":8,"nodeType":"1782","messageId":"1783","endLine":49,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1899","line":61,"column":7,"nodeType":"1782","messageId":"1783","endLine":61,"endColumn":17},{"ruleId":"1803","severity":1,"message":"1821","line":116,"column":6,"nodeType":"1805","endLine":116,"endColumn":16,"suggestions":"1900"},{"ruleId":"1780","severity":1,"message":"1853","line":157,"column":9,"nodeType":"1782","messageId":"1783","endLine":157,"endColumn":27},{"ruleId":"1780","severity":1,"message":"1854","line":161,"column":9,"nodeType":"1782","messageId":"1783","endLine":161,"endColumn":25},{"ruleId":"1780","severity":1,"message":"1901","line":5,"column":34,"nodeType":"1782","messageId":"1783","endLine":5,"endColumn":39},{"ruleId":"1780","severity":1,"message":"1781","line":7,"column":8,"nodeType":"1782","messageId":"1783","endLine":7,"endColumn":12},{"ruleId":"1780","severity":1,"message":"1781","line":11,"column":8,"nodeType":"1782","messageId":"1783","endLine":11,"endColumn":12},{"ruleId":"1780","severity":1,"message":"1902","line":8,"column":10,"nodeType":"1782","messageId":"1783","endLine":8,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1903","line":18,"column":8,"nodeType":"1782","messageId":"1783","endLine":18,"endColumn":23},{"ruleId":"1780","severity":1,"message":"1904","line":5,"column":3,"nodeType":"1782","messageId":"1783","endLine":5,"endColumn":10},{"ruleId":"1780","severity":1,"message":"1905","line":6,"column":3,"nodeType":"1782","messageId":"1783","endLine":6,"endColumn":12},{"ruleId":"1780","severity":1,"message":"1906","line":10,"column":3,"nodeType":"1782","messageId":"1783","endLine":10,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1907","line":11,"column":3,"nodeType":"1782","messageId":"1783","endLine":11,"endColumn":6},{"ruleId":"1780","severity":1,"message":"1908","line":24,"column":5,"nodeType":"1782","messageId":"1783","endLine":24,"endColumn":10},{"ruleId":"1780","severity":1,"message":"1909","line":25,"column":10,"nodeType":"1782","messageId":"1783","endLine":25,"endColumn":17},{"ruleId":"1780","severity":1,"message":"1910","line":35,"column":7,"nodeType":"1782","messageId":"1783","endLine":35,"endColumn":12},{"ruleId":"1780","severity":1,"message":"1911","line":39,"column":3,"nodeType":"1782","messageId":"1783","endLine":39,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1912","line":80,"column":10,"nodeType":"1782","messageId":"1783","endLine":80,"endColumn":23},{"ruleId":"1780","severity":1,"message":"1913","line":172,"column":10,"nodeType":"1782","messageId":"1783","endLine":172,"endColumn":23},{"ruleId":"1780","severity":1,"message":"1914","line":172,"column":25,"nodeType":"1782","messageId":"1783","endLine":172,"endColumn":41},{"ruleId":"1803","severity":1,"message":"1846","line":181,"column":6,"nodeType":"1805","endLine":181,"endColumn":16,"suggestions":"1915"},{"ruleId":"1780","severity":1,"message":"1916","line":1,"column":10,"nodeType":"1782","messageId":"1783","endLine":1,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1917","line":41,"column":29,"nodeType":"1782","messageId":"1783","endLine":41,"endColumn":35},{"ruleId":"1780","severity":1,"message":"1858","line":195,"column":31,"nodeType":"1782","messageId":"1783","endLine":195,"endColumn":36},{"ruleId":"1780","severity":1,"message":"1918","line":6,"column":8,"nodeType":"1782","messageId":"1783","endLine":6,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1919","line":12,"column":3,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":7},{"ruleId":"1780","severity":1,"message":"1920","line":15,"column":3,"nodeType":"1782","messageId":"1783","endLine":15,"endColumn":8},{"ruleId":"1780","severity":1,"message":"1921","line":16,"column":3,"nodeType":"1782","messageId":"1783","endLine":16,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1922","line":21,"column":3,"nodeType":"1782","messageId":"1783","endLine":21,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1923","line":23,"column":3,"nodeType":"1782","messageId":"1783","endLine":23,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1924","line":24,"column":3,"nodeType":"1782","messageId":"1783","endLine":24,"endColumn":17},{"ruleId":"1780","severity":1,"message":"1925","line":26,"column":3,"nodeType":"1782","messageId":"1783","endLine":26,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1926","line":29,"column":8,"nodeType":"1782","messageId":"1783","endLine":29,"endColumn":19},{"ruleId":"1803","severity":1,"message":"1927","line":71,"column":6,"nodeType":"1805","endLine":71,"endColumn":8,"suggestions":"1928"},{"ruleId":"1780","severity":1,"message":"1929","line":20,"column":3,"nodeType":"1782","messageId":"1783","endLine":20,"endColumn":17},{"ruleId":"1780","severity":1,"message":"1926","line":30,"column":8,"nodeType":"1782","messageId":"1783","endLine":30,"endColumn":19},{"ruleId":"1803","severity":1,"message":"1930","line":88,"column":6,"nodeType":"1805","endLine":88,"endColumn":16,"suggestions":"1931"},{"ruleId":"1814","severity":1,"message":"1815","line":325,"column":23,"nodeType":"1816","messageId":"1817","endLine":325,"endColumn":55},{"ruleId":"1814","severity":1,"message":"1815","line":351,"column":23,"nodeType":"1816","messageId":"1817","endLine":351,"endColumn":61},{"ruleId":"1814","severity":1,"message":"1815","line":394,"column":23,"nodeType":"1816","messageId":"1817","endLine":394,"endColumn":51},{"ruleId":"1780","severity":1,"message":"1932","line":7,"column":8,"nodeType":"1782","messageId":"1783","endLine":7,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1933","line":22,"column":42,"nodeType":"1782","messageId":"1783","endLine":22,"endColumn":50},{"ruleId":"1780","severity":1,"message":"1929","line":19,"column":3,"nodeType":"1782","messageId":"1783","endLine":19,"endColumn":17},{"ruleId":"1780","severity":1,"message":"1926","line":29,"column":8,"nodeType":"1782","messageId":"1783","endLine":29,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1839","line":34,"column":10,"nodeType":"1782","messageId":"1783","endLine":34,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1934","line":60,"column":7,"nodeType":"1782","messageId":"1783","endLine":60,"endColumn":17},{"ruleId":"1803","severity":1,"message":"1930","line":82,"column":6,"nodeType":"1805","endLine":82,"endColumn":16,"suggestions":"1935"},{"ruleId":"1814","severity":1,"message":"1815","line":380,"column":23,"nodeType":"1816","messageId":"1817","endLine":380,"endColumn":61},{"ruleId":"1780","severity":1,"message":"1916","line":1,"column":10,"nodeType":"1782","messageId":"1783","endLine":1,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1917","line":40,"column":29,"nodeType":"1782","messageId":"1783","endLine":40,"endColumn":35},{"ruleId":"1780","severity":1,"message":"1820","line":3,"column":10,"nodeType":"1782","messageId":"1783","endLine":3,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1936","line":21,"column":58,"nodeType":"1782","messageId":"1783","endLine":21,"endColumn":66},{"ruleId":"1780","severity":1,"message":"1916","line":1,"column":10,"nodeType":"1782","messageId":"1783","endLine":1,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1929","line":17,"column":3,"nodeType":"1782","messageId":"1783","endLine":17,"endColumn":17},{"ruleId":"1780","severity":1,"message":"1937","line":26,"column":10,"nodeType":"1782","messageId":"1783","endLine":26,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1926","line":27,"column":8,"nodeType":"1782","messageId":"1783","endLine":27,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1938","line":33,"column":10,"nodeType":"1782","messageId":"1783","endLine":33,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1939","line":103,"column":9,"nodeType":"1782","messageId":"1783","endLine":103,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1940","line":116,"column":9,"nodeType":"1782","messageId":"1783","endLine":116,"endColumn":21},{"ruleId":"1814","severity":1,"message":"1815","line":199,"column":25,"nodeType":"1816","messageId":"1817","endLine":199,"endColumn":45},{"ruleId":"1780","severity":1,"message":"1929","line":9,"column":65,"nodeType":"1782","messageId":"1783","endLine":9,"endColumn":79},{"ruleId":"1780","severity":1,"message":"1937","line":11,"column":10,"nodeType":"1782","messageId":"1783","endLine":11,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1926","line":12,"column":8,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1938","line":20,"column":10,"nodeType":"1782","messageId":"1783","endLine":20,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1939","line":81,"column":9,"nodeType":"1782","messageId":"1783","endLine":81,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1929","line":9,"column":65,"nodeType":"1782","messageId":"1783","endLine":9,"endColumn":79},{"ruleId":"1780","severity":1,"message":"1937","line":11,"column":10,"nodeType":"1782","messageId":"1783","endLine":11,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1926","line":12,"column":8,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1938","line":26,"column":10,"nodeType":"1782","messageId":"1783","endLine":26,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1941","line":40,"column":11,"nodeType":"1782","messageId":"1783","endLine":40,"endColumn":25},{"ruleId":"1780","severity":1,"message":"1942","line":41,"column":11,"nodeType":"1782","messageId":"1783","endLine":41,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1939","line":130,"column":9,"nodeType":"1782","messageId":"1783","endLine":130,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1786","line":1,"column":10,"nodeType":"1782","messageId":"1783","endLine":1,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1943","line":3,"column":8,"nodeType":"1782","messageId":"1783","endLine":3,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1944","line":14,"column":10,"nodeType":"1782","messageId":"1783","endLine":14,"endColumn":24},{"ruleId":"1780","severity":1,"message":"1945","line":26,"column":7,"nodeType":"1782","messageId":"1783","endLine":26,"endColumn":23},{"ruleId":"1780","severity":1,"message":"1946","line":44,"column":7,"nodeType":"1782","messageId":"1783","endLine":44,"endColumn":12},{"ruleId":"1947","severity":1,"message":"1948","line":46,"column":52,"nodeType":"1949","messageId":"1950","endLine":46,"endColumn":56},{"ruleId":"1947","severity":1,"message":"1951","line":64,"column":38,"nodeType":"1782","messageId":"1950","endLine":64,"endColumn":43},{"ruleId":"1952","severity":1,"message":"1953","line":66,"column":14,"nodeType":"1954","messageId":"1955","endLine":66,"endColumn":68},{"ruleId":"1947","severity":1,"message":"1956","line":66,"column":54,"nodeType":"1782","messageId":"1950","endLine":66,"endColumn":65},{"ruleId":"1947","severity":1,"message":"1957","line":74,"column":70,"nodeType":"1782","messageId":"1950","endLine":74,"endColumn":78},{"ruleId":"1947","severity":1,"message":"1958","line":79,"column":72,"nodeType":"1782","messageId":"1950","endLine":79,"endColumn":85},{"ruleId":"1947","severity":1,"message":"1959","line":84,"column":40,"nodeType":"1782","messageId":"1950","endLine":84,"endColumn":49},{"ruleId":"1780","severity":1,"message":"1960","line":21,"column":23,"nodeType":"1782","messageId":"1783","endLine":21,"endColumn":37},{"ruleId":"1803","severity":1,"message":"1961","line":38,"column":6,"nodeType":"1805","endLine":38,"endColumn":16,"suggestions":"1962"},{"ruleId":"1780","severity":1,"message":"1963","line":59,"column":9,"nodeType":"1782","messageId":"1783","endLine":59,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1858","line":81,"column":33,"nodeType":"1782","messageId":"1783","endLine":81,"endColumn":38},{"ruleId":"1780","severity":1,"message":"1890","line":5,"column":30,"nodeType":"1782","messageId":"1783","endLine":5,"endColumn":39},{"ruleId":"1780","severity":1,"message":"1784","line":9,"column":28,"nodeType":"1782","messageId":"1783","endLine":9,"endColumn":33},{"ruleId":"1780","severity":1,"message":"1887","line":12,"column":8,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1964","line":37,"column":48,"nodeType":"1782","messageId":"1783","endLine":37,"endColumn":54},{"ruleId":"1947","severity":1,"message":"1965","line":37,"column":72,"nodeType":"1949","messageId":"1950","endLine":37,"endColumn":75},{"ruleId":"1780","severity":1,"message":"1966","line":37,"column":72,"nodeType":"1782","messageId":"1783","endLine":37,"endColumn":75},{"ruleId":"1947","severity":1,"message":"1967","line":37,"column":77,"nodeType":"1949","messageId":"1950","endLine":37,"endColumn":87},{"ruleId":"1947","severity":1,"message":"1968","line":37,"column":89,"nodeType":"1949","messageId":"1950","endLine":37,"endColumn":94},{"ruleId":"1780","severity":1,"message":"1969","line":37,"column":89,"nodeType":"1782","messageId":"1783","endLine":37,"endColumn":94},{"ruleId":"1947","severity":1,"message":"1970","line":37,"column":96,"nodeType":"1949","messageId":"1950","endLine":37,"endColumn":101},{"ruleId":"1947","severity":1,"message":"1971","line":37,"column":103,"nodeType":"1949","messageId":"1950","endLine":37,"endColumn":115},{"ruleId":"1947","severity":1,"message":"1972","line":56,"column":24,"nodeType":"1782","messageId":"1950","endLine":56,"endColumn":37},{"ruleId":"1947","severity":1,"message":"1973","line":56,"column":38,"nodeType":"1782","messageId":"1950","endLine":56,"endColumn":58},{"ruleId":"1947","severity":1,"message":"1974","line":58,"column":29,"nodeType":"1782","messageId":"1950","endLine":58,"endColumn":31},{"ruleId":"1947","severity":1,"message":"1972","line":59,"column":42,"nodeType":"1782","messageId":"1950","endLine":59,"endColumn":55},{"ruleId":"1947","severity":1,"message":"1975","line":59,"column":56,"nodeType":"1782","messageId":"1950","endLine":59,"endColumn":58},{"ruleId":"1947","severity":1,"message":"1972","line":70,"column":28,"nodeType":"1782","messageId":"1950","endLine":70,"endColumn":41},{"ruleId":"1947","severity":1,"message":"1973","line":70,"column":42,"nodeType":"1782","messageId":"1950","endLine":70,"endColumn":62},{"ruleId":"1947","severity":1,"message":"1976","line":70,"column":63,"nodeType":"1782","messageId":"1950","endLine":70,"endColumn":65},{"ruleId":"1947","severity":1,"message":"1972","line":76,"column":68,"nodeType":"1782","messageId":"1950","endLine":76,"endColumn":81},{"ruleId":"1947","severity":1,"message":"1973","line":76,"column":82,"nodeType":"1782","messageId":"1950","endLine":76,"endColumn":102},{"ruleId":"1947","severity":1,"message":"1976","line":76,"column":103,"nodeType":"1782","messageId":"1950","endLine":76,"endColumn":105},{"ruleId":"1947","severity":1,"message":"1972","line":82,"column":36,"nodeType":"1782","messageId":"1950","endLine":82,"endColumn":49},{"ruleId":"1947","severity":1,"message":"1973","line":82,"column":50,"nodeType":"1782","messageId":"1950","endLine":82,"endColumn":70},{"ruleId":"1780","severity":1,"message":"1977","line":95,"column":50,"nodeType":"1782","messageId":"1783","endLine":95,"endColumn":62},{"ruleId":"1780","severity":1,"message":"1978","line":95,"column":79,"nodeType":"1782","messageId":"1783","endLine":95,"endColumn":92},{"ruleId":"1947","severity":1,"message":"1972","line":122,"column":20,"nodeType":"1782","messageId":"1950","endLine":122,"endColumn":33},{"ruleId":"1947","severity":1,"message":"1972","line":123,"column":22,"nodeType":"1782","messageId":"1950","endLine":123,"endColumn":35},{"ruleId":"1947","severity":1,"message":"1973","line":123,"column":36,"nodeType":"1782","messageId":"1950","endLine":123,"endColumn":56},{"ruleId":"1947","severity":1,"message":"1972","line":125,"column":31,"nodeType":"1782","messageId":"1950","endLine":125,"endColumn":44},{"ruleId":"1947","severity":1,"message":"1979","line":125,"column":45,"nodeType":"1782","messageId":"1950","endLine":125,"endColumn":53},{"ruleId":"1947","severity":1,"message":"1972","line":126,"column":31,"nodeType":"1782","messageId":"1950","endLine":126,"endColumn":44},{"ruleId":"1947","severity":1,"message":"1973","line":126,"column":45,"nodeType":"1782","messageId":"1950","endLine":126,"endColumn":65},{"ruleId":"1947","severity":1,"message":"1980","line":126,"column":66,"nodeType":"1782","messageId":"1950","endLine":126,"endColumn":86},{"ruleId":"1780","severity":1,"message":"1981","line":133,"column":15,"nodeType":"1782","messageId":"1783","endLine":133,"endColumn":19},{"ruleId":"1947","severity":1,"message":"1972","line":133,"column":42,"nodeType":"1782","messageId":"1950","endLine":133,"endColumn":55},{"ruleId":"1947","severity":1,"message":"1979","line":133,"column":56,"nodeType":"1782","messageId":"1950","endLine":133,"endColumn":64},{"ruleId":"1947","severity":1,"message":"1972","line":134,"column":33,"nodeType":"1782","messageId":"1950","endLine":134,"endColumn":46},{"ruleId":"1947","severity":1,"message":"1979","line":134,"column":47,"nodeType":"1782","messageId":"1950","endLine":134,"endColumn":55},{"ruleId":"1947","severity":1,"message":"1972","line":147,"column":20,"nodeType":"1782","messageId":"1950","endLine":147,"endColumn":33},{"ruleId":"1947","severity":1,"message":"1982","line":149,"column":22,"nodeType":"1782","messageId":"1950","endLine":149,"endColumn":33},{"ruleId":"1947","severity":1,"message":"1972","line":160,"column":20,"nodeType":"1782","messageId":"1950","endLine":160,"endColumn":33},{"ruleId":"1947","severity":1,"message":"1972","line":161,"column":22,"nodeType":"1782","messageId":"1950","endLine":161,"endColumn":35},{"ruleId":"1947","severity":1,"message":"1973","line":161,"column":36,"nodeType":"1782","messageId":"1950","endLine":161,"endColumn":56},{"ruleId":"1947","severity":1,"message":"1972","line":163,"column":31,"nodeType":"1782","messageId":"1950","endLine":163,"endColumn":44},{"ruleId":"1947","severity":1,"message":"1979","line":163,"column":45,"nodeType":"1782","messageId":"1950","endLine":163,"endColumn":53},{"ruleId":"1947","severity":1,"message":"1972","line":164,"column":31,"nodeType":"1782","messageId":"1950","endLine":164,"endColumn":44},{"ruleId":"1947","severity":1,"message":"1973","line":164,"column":45,"nodeType":"1782","messageId":"1950","endLine":164,"endColumn":65},{"ruleId":"1947","severity":1,"message":"1980","line":164,"column":66,"nodeType":"1782","messageId":"1950","endLine":164,"endColumn":86},{"ruleId":"1947","severity":1,"message":"1972","line":169,"column":37,"nodeType":"1782","messageId":"1950","endLine":169,"endColumn":50},{"ruleId":"1947","severity":1,"message":"1979","line":169,"column":51,"nodeType":"1782","messageId":"1950","endLine":169,"endColumn":59},{"ruleId":"1947","severity":1,"message":"1972","line":170,"column":37,"nodeType":"1782","messageId":"1950","endLine":170,"endColumn":50},{"ruleId":"1947","severity":1,"message":"1973","line":170,"column":51,"nodeType":"1782","messageId":"1950","endLine":170,"endColumn":71},{"ruleId":"1947","severity":1,"message":"1980","line":170,"column":72,"nodeType":"1782","messageId":"1950","endLine":170,"endColumn":92},{"ruleId":"1947","severity":1,"message":"1972","line":179,"column":37,"nodeType":"1782","messageId":"1950","endLine":179,"endColumn":50},{"ruleId":"1947","severity":1,"message":"1979","line":179,"column":51,"nodeType":"1782","messageId":"1950","endLine":179,"endColumn":59},{"ruleId":"1947","severity":1,"message":"1972","line":180,"column":37,"nodeType":"1782","messageId":"1950","endLine":180,"endColumn":50},{"ruleId":"1947","severity":1,"message":"1973","line":180,"column":51,"nodeType":"1782","messageId":"1950","endLine":180,"endColumn":71},{"ruleId":"1947","severity":1,"message":"1980","line":180,"column":72,"nodeType":"1782","messageId":"1950","endLine":180,"endColumn":92},{"ruleId":"1780","severity":1,"message":"1981","line":187,"column":15,"nodeType":"1782","messageId":"1783","endLine":187,"endColumn":19},{"ruleId":"1947","severity":1,"message":"1972","line":187,"column":42,"nodeType":"1782","messageId":"1950","endLine":187,"endColumn":55},{"ruleId":"1947","severity":1,"message":"1979","line":187,"column":56,"nodeType":"1782","messageId":"1950","endLine":187,"endColumn":64},{"ruleId":"1947","severity":1,"message":"1972","line":188,"column":33,"nodeType":"1782","messageId":"1950","endLine":188,"endColumn":46},{"ruleId":"1947","severity":1,"message":"1979","line":188,"column":47,"nodeType":"1782","messageId":"1950","endLine":188,"endColumn":55},{"ruleId":"1947","severity":1,"message":"1972","line":189,"column":67,"nodeType":"1782","messageId":"1950","endLine":189,"endColumn":80},{"ruleId":"1947","severity":1,"message":"1979","line":189,"column":81,"nodeType":"1782","messageId":"1950","endLine":189,"endColumn":89},{"ruleId":"1947","severity":1,"message":"1972","line":191,"column":67,"nodeType":"1782","messageId":"1950","endLine":191,"endColumn":80},{"ruleId":"1947","severity":1,"message":"1979","line":191,"column":81,"nodeType":"1782","messageId":"1950","endLine":191,"endColumn":89},{"ruleId":"1947","severity":1,"message":"1982","line":226,"column":17,"nodeType":"1782","messageId":"1950","endLine":226,"endColumn":28},{"ruleId":"1947","severity":1,"message":"1982","line":228,"column":24,"nodeType":"1782","messageId":"1950","endLine":228,"endColumn":35},{"ruleId":"1947","severity":1,"message":"1982","line":242,"column":17,"nodeType":"1782","messageId":"1950","endLine":242,"endColumn":28},{"ruleId":"1947","severity":1,"message":"1982","line":244,"column":24,"nodeType":"1782","messageId":"1950","endLine":244,"endColumn":35},{"ruleId":"1947","severity":1,"message":"1972","line":262,"column":34,"nodeType":"1782","messageId":"1950","endLine":262,"endColumn":47},{"ruleId":"1947","severity":1,"message":"1983","line":262,"column":49,"nodeType":"1782","messageId":"1950","endLine":262,"endColumn":54},{"ruleId":"1952","severity":1,"message":"1953","line":264,"column":21,"nodeType":"1954","messageId":"1955","endLine":264,"endColumn":116},{"ruleId":"1947","severity":1,"message":"1972","line":264,"column":67,"nodeType":"1782","messageId":"1950","endLine":264,"endColumn":80},{"ruleId":"1947","severity":1,"message":"1984","line":264,"column":82,"nodeType":"1782","messageId":"1950","endLine":264,"endColumn":93},{"ruleId":"1947","severity":1,"message":"1972","line":287,"column":25,"nodeType":"1782","messageId":"1950","endLine":287,"endColumn":38},{"ruleId":"1947","severity":1,"message":"1973","line":287,"column":40,"nodeType":"1782","messageId":"1950","endLine":287,"endColumn":60},{"ruleId":"1947","severity":1,"message":"1972","line":293,"column":62,"nodeType":"1782","messageId":"1950","endLine":293,"endColumn":75},{"ruleId":"1947","severity":1,"message":"1973","line":293,"column":77,"nodeType":"1782","messageId":"1950","endLine":293,"endColumn":97},{"ruleId":"1947","severity":1,"message":"1985","line":293,"column":98,"nodeType":"1782","messageId":"1950","endLine":293,"endColumn":103},{"ruleId":"1947","severity":1,"message":"1972","line":295,"column":50,"nodeType":"1782","messageId":"1950","endLine":295,"endColumn":63},{"ruleId":"1947","severity":1,"message":"1973","line":295,"column":65,"nodeType":"1782","messageId":"1950","endLine":295,"endColumn":85},{"ruleId":"1947","severity":1,"message":"1985","line":295,"column":86,"nodeType":"1782","messageId":"1950","endLine":295,"endColumn":91},{"ruleId":"1947","severity":1,"message":"1986","line":295,"column":95,"nodeType":"1782","messageId":"1950","endLine":295,"endColumn":104},{"ruleId":"1947","severity":1,"message":"1987","line":306,"column":43,"nodeType":"1782","messageId":"1950","endLine":306,"endColumn":56},{"ruleId":"1947","severity":1,"message":"1988","line":326,"column":33,"nodeType":"1782","messageId":"1950","endLine":326,"endColumn":41},{"ruleId":"1947","severity":1,"message":"1988","line":326,"column":50,"nodeType":"1782","messageId":"1950","endLine":326,"endColumn":58},{"ruleId":"1947","severity":1,"message":"1989","line":326,"column":62,"nodeType":"1782","messageId":"1950","endLine":326,"endColumn":66},{"ruleId":"1947","severity":1,"message":"1990","line":326,"column":67,"nodeType":"1782","messageId":"1950","endLine":326,"endColumn":71},{"ruleId":"1947","severity":1,"message":"1988","line":335,"column":33,"nodeType":"1782","messageId":"1950","endLine":335,"endColumn":41},{"ruleId":"1947","severity":1,"message":"1988","line":335,"column":50,"nodeType":"1782","messageId":"1950","endLine":335,"endColumn":58},{"ruleId":"1947","severity":1,"message":"1989","line":335,"column":62,"nodeType":"1782","messageId":"1950","endLine":335,"endColumn":66},{"ruleId":"1947","severity":1,"message":"1990","line":335,"column":67,"nodeType":"1782","messageId":"1950","endLine":335,"endColumn":71},{"ruleId":"1947","severity":1,"message":"1988","line":338,"column":29,"nodeType":"1782","messageId":"1950","endLine":338,"endColumn":37},{"ruleId":"1947","severity":1,"message":"1991","line":338,"column":39,"nodeType":"1782","messageId":"1950","endLine":338,"endColumn":45},{"ruleId":"1947","severity":1,"message":"1988","line":344,"column":35,"nodeType":"1782","messageId":"1950","endLine":344,"endColumn":43},{"ruleId":"1947","severity":1,"message":"1988","line":344,"column":52,"nodeType":"1782","messageId":"1950","endLine":344,"endColumn":60},{"ruleId":"1947","severity":1,"message":"1989","line":344,"column":65,"nodeType":"1782","messageId":"1950","endLine":344,"endColumn":69},{"ruleId":"1947","severity":1,"message":"1990","line":344,"column":70,"nodeType":"1782","messageId":"1950","endLine":344,"endColumn":74},{"ruleId":"1947","severity":1,"message":"1992","line":353,"column":50,"nodeType":"1782","messageId":"1950","endLine":353,"endColumn":61},{"ruleId":"1947","severity":1,"message":"1972","line":375,"column":39,"nodeType":"1782","messageId":"1950","endLine":375,"endColumn":52},{"ruleId":"1947","severity":1,"message":"1972","line":375,"column":74,"nodeType":"1782","messageId":"1950","endLine":375,"endColumn":87},{"ruleId":"1947","severity":1,"message":"1993","line":375,"column":88,"nodeType":"1782","messageId":"1950","endLine":375,"endColumn":97},{"ruleId":"1947","severity":1,"message":"1972","line":385,"column":39,"nodeType":"1782","messageId":"1950","endLine":385,"endColumn":52},{"ruleId":"1947","severity":1,"message":"1972","line":385,"column":74,"nodeType":"1782","messageId":"1950","endLine":385,"endColumn":87},{"ruleId":"1947","severity":1,"message":"1979","line":385,"column":88,"nodeType":"1782","messageId":"1950","endLine":385,"endColumn":96},{"ruleId":"1947","severity":1,"message":"1972","line":396,"column":45,"nodeType":"1782","messageId":"1950","endLine":396,"endColumn":58},{"ruleId":"1947","severity":1,"message":"1973","line":396,"column":60,"nodeType":"1782","messageId":"1950","endLine":396,"endColumn":80},{"ruleId":"1947","severity":1,"message":"1972","line":398,"column":39,"nodeType":"1782","messageId":"1950","endLine":398,"endColumn":52},{"ruleId":"1947","severity":1,"message":"1973","line":398,"column":54,"nodeType":"1782","messageId":"1950","endLine":398,"endColumn":74},{"ruleId":"1947","severity":1,"message":"1972","line":399,"column":50,"nodeType":"1782","messageId":"1950","endLine":399,"endColumn":63},{"ruleId":"1947","severity":1,"message":"1973","line":399,"column":65,"nodeType":"1782","messageId":"1950","endLine":399,"endColumn":85},{"ruleId":"1947","severity":1,"message":"1980","line":399,"column":87,"nodeType":"1782","messageId":"1950","endLine":399,"endColumn":107},{"ruleId":"1780","severity":1,"message":"1994","line":5,"column":17,"nodeType":"1782","messageId":"1783","endLine":5,"endColumn":28},{"ruleId":"1780","severity":1,"message":"1784","line":9,"column":28,"nodeType":"1782","messageId":"1783","endLine":9,"endColumn":33},{"ruleId":"1780","severity":1,"message":"1995","line":15,"column":3,"nodeType":"1782","messageId":"1783","endLine":15,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1996","line":18,"column":3,"nodeType":"1782","messageId":"1783","endLine":18,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1897","line":24,"column":3,"nodeType":"1782","messageId":"1783","endLine":24,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1926","line":38,"column":8,"nodeType":"1782","messageId":"1783","endLine":38,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1997","line":44,"column":10,"nodeType":"1782","messageId":"1783","endLine":44,"endColumn":25},{"ruleId":"1947","severity":1,"message":"1970","line":61,"column":51,"nodeType":"1949","messageId":"1950","endLine":61,"endColumn":56},{"ruleId":"1780","severity":1,"message":"1845","line":63,"column":9,"nodeType":"1782","messageId":"1783","endLine":63,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1960","line":64,"column":11,"nodeType":"1782","messageId":"1783","endLine":64,"endColumn":25},{"ruleId":"1780","severity":1,"message":"1876","line":67,"column":11,"nodeType":"1782","messageId":"1783","endLine":67,"endColumn":22},{"ruleId":"1780","severity":1,"message":"1998","line":68,"column":11,"nodeType":"1782","messageId":"1783","endLine":68,"endColumn":22},{"ruleId":"1947","severity":1,"message":"1974","line":120,"column":28,"nodeType":"1782","messageId":"1950","endLine":120,"endColumn":30},{"ruleId":"1947","severity":1,"message":"1988","line":129,"column":28,"nodeType":"1782","messageId":"1950","endLine":129,"endColumn":36},{"ruleId":"1947","severity":1,"message":"1999","line":129,"column":40,"nodeType":"1782","messageId":"1950","endLine":129,"endColumn":48},{"ruleId":"1947","severity":1,"message":"1988","line":132,"column":73,"nodeType":"1782","messageId":"1950","endLine":132,"endColumn":81},{"ruleId":"1947","severity":1,"message":"2000","line":132,"column":86,"nodeType":"1782","messageId":"1950","endLine":132,"endColumn":88},{"ruleId":"1947","severity":1,"message":"1988","line":133,"column":73,"nodeType":"1782","messageId":"1950","endLine":133,"endColumn":81},{"ruleId":"1947","severity":1,"message":"2000","line":133,"column":86,"nodeType":"1782","messageId":"1950","endLine":133,"endColumn":88},{"ruleId":"1947","severity":1,"message":"1988","line":134,"column":20,"nodeType":"1782","messageId":"1950","endLine":134,"endColumn":28},{"ruleId":"1947","severity":1,"message":"1991","line":134,"column":30,"nodeType":"1782","messageId":"1950","endLine":134,"endColumn":36},{"ruleId":"1947","severity":1,"message":"1988","line":135,"column":75,"nodeType":"1782","messageId":"1950","endLine":135,"endColumn":83},{"ruleId":"1947","severity":1,"message":"2000","line":135,"column":88,"nodeType":"1782","messageId":"1950","endLine":135,"endColumn":90},{"ruleId":"1947","severity":1,"message":"1988","line":138,"column":31,"nodeType":"1782","messageId":"1950","endLine":138,"endColumn":39},{"ruleId":"1947","severity":1,"message":"2000","line":138,"column":44,"nodeType":"1782","messageId":"1950","endLine":138,"endColumn":46},{"ruleId":"1947","severity":1,"message":"1988","line":138,"column":96,"nodeType":"1782","messageId":"1950","endLine":138,"endColumn":104},{"ruleId":"1947","severity":1,"message":"1999","line":138,"column":108,"nodeType":"1782","messageId":"1950","endLine":138,"endColumn":116},{"ruleId":"1947","severity":1,"message":"1988","line":139,"column":31,"nodeType":"1782","messageId":"1950","endLine":139,"endColumn":39},{"ruleId":"1947","severity":1,"message":"2000","line":139,"column":44,"nodeType":"1782","messageId":"1950","endLine":139,"endColumn":46},{"ruleId":"1947","severity":1,"message":"1988","line":139,"column":96,"nodeType":"1782","messageId":"1950","endLine":139,"endColumn":104},{"ruleId":"1947","severity":1,"message":"1999","line":139,"column":108,"nodeType":"1782","messageId":"1950","endLine":139,"endColumn":116},{"ruleId":"1947","severity":1,"message":"1988","line":140,"column":20,"nodeType":"1782","messageId":"1950","endLine":140,"endColumn":28},{"ruleId":"1947","severity":1,"message":"1991","line":140,"column":30,"nodeType":"1782","messageId":"1950","endLine":140,"endColumn":36},{"ruleId":"1947","severity":1,"message":"1988","line":141,"column":33,"nodeType":"1782","messageId":"1950","endLine":141,"endColumn":41},{"ruleId":"1947","severity":1,"message":"2000","line":141,"column":46,"nodeType":"1782","messageId":"1950","endLine":141,"endColumn":48},{"ruleId":"1947","severity":1,"message":"1988","line":141,"column":98,"nodeType":"1782","messageId":"1950","endLine":141,"endColumn":106},{"ruleId":"1947","severity":1,"message":"1999","line":141,"column":110,"nodeType":"1782","messageId":"1950","endLine":141,"endColumn":118},{"ruleId":"1947","severity":1,"message":"1974","line":148,"column":62,"nodeType":"1782","messageId":"1950","endLine":148,"endColumn":64},{"ruleId":"1780","severity":1,"message":"2001","line":159,"column":9,"nodeType":"1782","messageId":"1783","endLine":159,"endColumn":22},{"ruleId":"1947","severity":1,"message":"1982","line":163,"column":18,"nodeType":"1782","messageId":"1950","endLine":163,"endColumn":29},{"ruleId":"1947","severity":1,"message":"1982","line":165,"column":25,"nodeType":"1782","messageId":"1950","endLine":165,"endColumn":36},{"ruleId":"1780","severity":1,"message":"1812","line":175,"column":9,"nodeType":"1782","messageId":"1783","endLine":175,"endColumn":23},{"ruleId":"1947","severity":1,"message":"1982","line":179,"column":18,"nodeType":"1782","messageId":"1950","endLine":179,"endColumn":29},{"ruleId":"1947","severity":1,"message":"1982","line":181,"column":25,"nodeType":"1782","messageId":"1950","endLine":181,"endColumn":36},{"ruleId":"1947","severity":1,"message":"1988","line":265,"column":33,"nodeType":"1782","messageId":"1950","endLine":265,"endColumn":41},{"ruleId":"1947","severity":1,"message":"1988","line":265,"column":50,"nodeType":"1782","messageId":"1950","endLine":265,"endColumn":58},{"ruleId":"1947","severity":1,"message":"1989","line":265,"column":62,"nodeType":"1782","messageId":"1950","endLine":265,"endColumn":66},{"ruleId":"1947","severity":1,"message":"1990","line":265,"column":67,"nodeType":"1782","messageId":"1950","endLine":265,"endColumn":71},{"ruleId":"1780","severity":1,"message":"2002","line":269,"column":46,"nodeType":"1782","messageId":"1783","endLine":269,"endColumn":51},{"ruleId":"1947","severity":1,"message":"1988","line":275,"column":33,"nodeType":"1782","messageId":"1950","endLine":275,"endColumn":41},{"ruleId":"1947","severity":1,"message":"1988","line":275,"column":50,"nodeType":"1782","messageId":"1950","endLine":275,"endColumn":58},{"ruleId":"1947","severity":1,"message":"1989","line":275,"column":62,"nodeType":"1782","messageId":"1950","endLine":275,"endColumn":66},{"ruleId":"1947","severity":1,"message":"1990","line":275,"column":67,"nodeType":"1782","messageId":"1950","endLine":275,"endColumn":71},{"ruleId":"1780","severity":1,"message":"2002","line":278,"column":46,"nodeType":"1782","messageId":"1783","endLine":278,"endColumn":51},{"ruleId":"1947","severity":1,"message":"1988","line":281,"column":29,"nodeType":"1782","messageId":"1950","endLine":281,"endColumn":37},{"ruleId":"1947","severity":1,"message":"1991","line":281,"column":39,"nodeType":"1782","messageId":"1950","endLine":281,"endColumn":45},{"ruleId":"1947","severity":1,"message":"1988","line":284,"column":35,"nodeType":"1782","messageId":"1950","endLine":284,"endColumn":43},{"ruleId":"1947","severity":1,"message":"1988","line":284,"column":52,"nodeType":"1782","messageId":"1950","endLine":284,"endColumn":60},{"ruleId":"1947","severity":1,"message":"1989","line":284,"column":65,"nodeType":"1782","messageId":"1950","endLine":284,"endColumn":69},{"ruleId":"1947","severity":1,"message":"1990","line":284,"column":70,"nodeType":"1782","messageId":"1950","endLine":284,"endColumn":74},{"ruleId":"1947","severity":1,"message":"1988","line":288,"column":46,"nodeType":"1782","messageId":"1950","endLine":288,"endColumn":54},{"ruleId":"1947","severity":1,"message":"1991","line":288,"column":56,"nodeType":"1782","messageId":"1950","endLine":288,"endColumn":62},{"ruleId":"1780","severity":1,"message":"2002","line":289,"column":40,"nodeType":"1782","messageId":"1783","endLine":289,"endColumn":45},{"ruleId":"1780","severity":1,"message":"1919","line":12,"column":3,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":7},{"ruleId":"1780","severity":1,"message":"1920","line":15,"column":3,"nodeType":"1782","messageId":"1783","endLine":15,"endColumn":8},{"ruleId":"1780","severity":1,"message":"1921","line":16,"column":3,"nodeType":"1782","messageId":"1783","endLine":16,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1922","line":21,"column":3,"nodeType":"1782","messageId":"1783","endLine":21,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1923","line":23,"column":3,"nodeType":"1782","messageId":"1783","endLine":23,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1924","line":24,"column":3,"nodeType":"1782","messageId":"1783","endLine":24,"endColumn":17},{"ruleId":"1780","severity":1,"message":"1925","line":26,"column":3,"nodeType":"1782","messageId":"1783","endLine":26,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1926","line":37,"column":8,"nodeType":"1782","messageId":"1783","endLine":37,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1997","line":43,"column":10,"nodeType":"1782","messageId":"1783","endLine":43,"endColumn":25},{"ruleId":"1780","severity":1,"message":"1939","line":164,"column":9,"nodeType":"1782","messageId":"1783","endLine":164,"endColumn":19},{"ruleId":"1780","severity":1,"message":"2003","line":178,"column":9,"nodeType":"1782","messageId":"1783","endLine":178,"endColumn":24},{"ruleId":"1780","severity":1,"message":"2004","line":182,"column":9,"nodeType":"1782","messageId":"1783","endLine":182,"endColumn":21},{"ruleId":"1814","severity":1,"message":"1815","line":241,"column":25,"nodeType":"1816","messageId":"1817","endLine":241,"endColumn":66},{"ruleId":"1814","severity":1,"message":"1815","line":257,"column":25,"nodeType":"1816","messageId":"1817","endLine":257,"endColumn":53},{"ruleId":"1780","severity":1,"message":"1994","line":5,"column":17,"nodeType":"1782","messageId":"1783","endLine":5,"endColumn":28},{"ruleId":"1780","severity":1,"message":"1919","line":12,"column":3,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":7},{"ruleId":"1780","severity":1,"message":"1920","line":15,"column":3,"nodeType":"1782","messageId":"1783","endLine":15,"endColumn":8},{"ruleId":"1780","severity":1,"message":"1921","line":16,"column":3,"nodeType":"1782","messageId":"1783","endLine":16,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1995","line":17,"column":3,"nodeType":"1782","messageId":"1783","endLine":17,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1996","line":19,"column":3,"nodeType":"1782","messageId":"1783","endLine":19,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1922","line":21,"column":3,"nodeType":"1782","messageId":"1783","endLine":21,"endColumn":13},{"ruleId":"1780","severity":1,"message":"1897","line":22,"column":3,"nodeType":"1782","messageId":"1783","endLine":22,"endColumn":14},{"ruleId":"1780","severity":1,"message":"1923","line":23,"column":3,"nodeType":"1782","messageId":"1783","endLine":23,"endColumn":15},{"ruleId":"1780","severity":1,"message":"1924","line":24,"column":3,"nodeType":"1782","messageId":"1783","endLine":24,"endColumn":17},{"ruleId":"1780","severity":1,"message":"1929","line":25,"column":3,"nodeType":"1782","messageId":"1783","endLine":25,"endColumn":17},{"ruleId":"1780","severity":1,"message":"1925","line":26,"column":3,"nodeType":"1782","messageId":"1783","endLine":26,"endColumn":19},{"ruleId":"1780","severity":1,"message":"2005","line":29,"column":8,"nodeType":"1782","messageId":"1783","endLine":29,"endColumn":22},{"ruleId":"1780","severity":1,"message":"2006","line":30,"column":8,"nodeType":"1782","messageId":"1783","endLine":30,"endColumn":18},{"ruleId":"1780","severity":1,"message":"2007","line":31,"column":8,"nodeType":"1782","messageId":"1783","endLine":31,"endColumn":28},{"ruleId":"1780","severity":1,"message":"1926","line":34,"column":8,"nodeType":"1782","messageId":"1783","endLine":34,"endColumn":19},{"ruleId":"1780","severity":1,"message":"2008","line":37,"column":10,"nodeType":"1782","messageId":"1783","endLine":37,"endColumn":19},{"ruleId":"1780","severity":1,"message":"1824","line":39,"column":10,"nodeType":"1782","messageId":"1783","endLine":39,"endColumn":24},{"ruleId":"1780","severity":1,"message":"1899","line":43,"column":7,"nodeType":"1782","messageId":"1783","endLine":43,"endColumn":17},{"ruleId":"1780","severity":1,"message":"2009","line":57,"column":9,"nodeType":"1782","messageId":"1783","endLine":57,"endColumn":17},{"ruleId":"1780","severity":1,"message":"2010","line":158,"column":19,"nodeType":"1782","messageId":"1783","endLine":158,"endColumn":25},{"ruleId":"1780","severity":1,"message":"2011","line":158,"column":64,"nodeType":"1782","messageId":"1783","endLine":158,"endColumn":77},{"ruleId":"1780","severity":1,"message":"1916","line":1,"column":10,"nodeType":"1782","messageId":"1783","endLine":1,"endColumn":13},{"ruleId":"1780","severity":1,"message":"2012","line":38,"column":13,"nodeType":"1782","messageId":"1783","endLine":38,"endColumn":23},{"ruleId":"1780","severity":1,"message":"1932","line":9,"column":8,"nodeType":"1782","messageId":"1783","endLine":9,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1933","line":23,"column":58,"nodeType":"1782","messageId":"1783","endLine":23,"endColumn":66},{"ruleId":"1780","severity":1,"message":"1932","line":7,"column":8,"nodeType":"1782","messageId":"1783","endLine":7,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1933","line":21,"column":41,"nodeType":"1782","messageId":"1783","endLine":21,"endColumn":49},{"ruleId":"1780","severity":1,"message":"2013","line":4,"column":8,"nodeType":"1782","messageId":"1783","endLine":4,"endColumn":18},{"ruleId":"1780","severity":1,"message":"1788","line":6,"column":8,"nodeType":"1782","messageId":"1783","endLine":6,"endColumn":16},{"ruleId":"1780","severity":1,"message":"1862","line":7,"column":8,"nodeType":"1782","messageId":"1783","endLine":7,"endColumn":23},{"ruleId":"1780","severity":1,"message":"1789","line":9,"column":18,"nodeType":"1782","messageId":"1783","endLine":9,"endColumn":28},{"ruleId":"1780","severity":1,"message":"1799","line":14,"column":3,"nodeType":"1782","messageId":"1783","endLine":14,"endColumn":9},{"ruleId":"1780","severity":1,"message":"1863","line":16,"column":3,"nodeType":"1782","messageId":"1783","endLine":16,"endColumn":10},{"ruleId":"1780","severity":1,"message":"1883","line":17,"column":3,"nodeType":"1782","messageId":"1783","endLine":17,"endColumn":12},{"ruleId":"1780","severity":1,"message":"1800","line":18,"column":3,"nodeType":"1782","messageId":"1783","endLine":18,"endColumn":13},{"ruleId":"1780","severity":1,"message":"2014","line":12,"column":10,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":25},{"ruleId":"1780","severity":1,"message":"2015","line":30,"column":7,"nodeType":"1782","messageId":"1783","endLine":30,"endColumn":21},{"ruleId":"1947","severity":1,"message":"2016","line":33,"column":44,"nodeType":"1949","messageId":"1950","endLine":33,"endColumn":54},{"ruleId":"1780","severity":1,"message":"2017","line":56,"column":9,"nodeType":"1782","messageId":"1783","endLine":56,"endColumn":17},{"ruleId":"1780","severity":1,"message":"2014","line":12,"column":10,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":25},{"ruleId":"1780","severity":1,"message":"2018","line":29,"column":7,"nodeType":"1782","messageId":"1783","endLine":29,"endColumn":22},{"ruleId":"1780","severity":1,"message":"2014","line":12,"column":10,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":25},{"ruleId":"1780","severity":1,"message":"2019","line":30,"column":7,"nodeType":"1782","messageId":"1783","endLine":30,"endColumn":17},{"ruleId":"1780","severity":1,"message":"2014","line":12,"column":10,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":25},{"ruleId":"1780","severity":1,"message":"2019","line":30,"column":7,"nodeType":"1782","messageId":"1783","endLine":30,"endColumn":17},{"ruleId":"1947","severity":1,"message":"2016","line":33,"column":45,"nodeType":"1949","messageId":"1950","endLine":33,"endColumn":55},{"ruleId":"1780","severity":1,"message":"2017","line":56,"column":9,"nodeType":"1782","messageId":"1783","endLine":56,"endColumn":17},{"ruleId":"1780","severity":1,"message":"2014","line":12,"column":10,"nodeType":"1782","messageId":"1783","endLine":12,"endColumn":25},{"ruleId":"1780","severity":1,"message":"2015","line":30,"column":7,"nodeType":"1782","messageId":"1783","endLine":30,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1789","line":5,"column":18,"nodeType":"1782","messageId":"1783","endLine":5,"endColumn":28},{"ruleId":"1780","severity":1,"message":"2020","line":6,"column":8,"nodeType":"1782","messageId":"1783","endLine":6,"endColumn":17},{"ruleId":"1780","severity":1,"message":"2021","line":7,"column":8,"nodeType":"1782","messageId":"1783","endLine":7,"endColumn":19},{"ruleId":"1780","severity":1,"message":"2022","line":8,"column":8,"nodeType":"1782","messageId":"1783","endLine":8,"endColumn":19},{"ruleId":"1780","severity":1,"message":"2023","line":9,"column":8,"nodeType":"1782","messageId":"1783","endLine":9,"endColumn":20},{"ruleId":"1780","severity":1,"message":"1932","line":10,"column":8,"nodeType":"1782","messageId":"1783","endLine":10,"endColumn":21},{"ruleId":"1780","severity":1,"message":"1784","line":14,"column":28,"nodeType":"1782","messageId":"1783","endLine":14,"endColumn":33},{"ruleId":"1780","severity":1,"message":"2024","line":15,"column":8,"nodeType":"1782","messageId":"1783","endLine":15,"endColumn":27},{"ruleId":"1780","severity":1,"message":"2025","line":18,"column":3,"nodeType":"1782","messageId":"1783","endLine":18,"endColumn":6},{"ruleId":"1780","severity":1,"message":"1870","line":19,"column":3,"nodeType":"1782","messageId":"1783","endLine":19,"endColumn":7},{"ruleId":"1780","severity":1,"message":"1791","line":27,"column":3,"nodeType":"1782","messageId":"1783","endLine":27,"endColumn":11},{"ruleId":"1780","severity":1,"message":"2026","line":33,"column":3,"nodeType":"1782","messageId":"1783","endLine":33,"endColumn":12},{"ruleId":"1780","severity":1,"message":"2027","line":39,"column":10,"nodeType":"1782","messageId":"1783","endLine":39,"endColumn":20},{"ruleId":"1780","severity":1,"message":"2028","line":40,"column":10,"nodeType":"1782","messageId":"1783","endLine":40,"endColumn":17},{"ruleId":"1780","severity":1,"message":"2029","line":46,"column":41,"nodeType":"1782","messageId":"1783","endLine":46,"endColumn":54},{"ruleId":"1780","severity":1,"message":"2030","line":95,"column":10,"nodeType":"1782","messageId":"1783","endLine":95,"endColumn":24},{"ruleId":"1780","severity":1,"message":"1807","line":97,"column":10,"nodeType":"1782","messageId":"1783","endLine":97,"endColumn":14},{"ruleId":"1780","severity":1,"message":"2031","line":103,"column":9,"nodeType":"1782","messageId":"1783","endLine":103,"endColumn":20},{"ruleId":"1780","severity":1,"message":"1812","line":253,"column":9,"nodeType":"1782","messageId":"1783","endLine":253,"endColumn":23},{"ruleId":"1814","severity":1,"message":"1815","line":321,"column":13,"nodeType":"1816","messageId":"1817","endLine":321,"endColumn":41},{"ruleId":"1947","severity":1,"message":"2032","line":63,"column":3,"nodeType":"1949","messageId":"1950","endLine":63,"endColumn":11},"no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","'alpha' is defined but never used.","'AnnouncementsNewForm' is defined but never used.","'Icon' is defined but never used.","'sentenceCase' is defined but never used.","'plusFill' is defined but never used.","'RouterLink' is defined but never used.","'KeyboardArrowDownIcon' is defined but never used.","'MenuItem' is defined but never used.","'EditIcon' is defined but never used.","'FileCopyIcon' is defined but never used.","'Divider' is defined but never used.","'AddIcon' is defined but never used.","'ArchiveIcon' is defined but never used.","'MoreHorizIcon' is defined but never used.","'Avatar' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'deleteBatch' is defined but never used.","'getInstructorList' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.","ArrayExpression",["2033"],"'open' is assigned a value but never used.","'handleClick_' is assigned a value but never used.","'handleClose_' is assigned a value but never used.","'StyledMenu' is assigned a value but never used.","'getColor' is assigned a value but never used.","'getGroupStatus' is assigned a value but never used.","'getSupervisorName' is assigned a value but never used.","react/jsx-key","Missing \"key\" prop for element in iterator","JSXElement","missingIterKey","'deleteAssignedWork' is defined but never used.","'getAssignedWorkByBatch' is defined but never used.","'paramCase' is defined but never used.","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["2034"],"'SnackbarProvider' is defined but never used.","'PATH_DASHBOARD' is defined but never used.","'HeaderBreadcrumbs' is defined but never used.","'SubmitReportsNewForm' is defined but never used.","'isEdit' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'Card' is defined but never used.","'Table' is defined but never used.","'Stack' is defined but never used.","'Checkbox' is defined but never used.","'TableRow' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'Typography' is defined but never used.","'TableContainer' is defined but never used.","'TablePagination' is defined but never used.","'getUserList' is defined but never used.","'getStudent' is defined but never used.","'Label' is defined but never used.","'Scrollbar' is defined but never used.","'SearchNotFound' is defined but never used.","'TABLE_HEAD' is assigned a value but never used.","'theme' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'user?.id' and 'user.role.role_name'. Either include them or remove the dependency array.",["2035"],"'handleRequestSort' is assigned a value but never used.","'handleSelectAllClick' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'handleChangePage' is assigned a value but never used.","'handleChangeRowsPerPage' is assigned a value but never used.","'handleFilterByName' is assigned a value but never used.","'handleDeleteUser' is assigned a value but never used.","'emptyRows' is assigned a value but never used.","'isUserNotFound' is assigned a value but never used.","'arr' is assigned a value but never used.","'index' is defined but never used.","'AppTopRelated' is defined but never used.","'AppTopInstalledCountries' is defined but never used.","'deleteGroup' is defined but never used.","'roundFilterList' is defined but never used.","'Tooltip' is defined but never used.","'open1' is assigned a value but never used.","'handleClick1_' is assigned a value but never used.","'handleClose1_' is assigned a value but never used.","'a' is assigned a value but never used.","'RoleMoreMenu' is defined but never used.","'styled' is defined but never used.","'Menu' is defined but never used.","'UserMoreMenu' is defined but never used.","'AnnouncementMoreMenu' is defined but never used.","'anchorEl' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","'CardContent' is defined but never used.","'batchesList' is assigned a value but never used.",["2036"],"'RecordVoiceOverRoundedIcon' is defined but never used.","'getStringFromDescription' is assigned a value but never used.","'getDate' is assigned a value but never used.","'pathname' is assigned a value but never used.","'useLocation' is defined but never used.","'TextField' is defined but never used.",["2037"],"'batchState' is assigned a value but never used.","'setBatchState' is assigned a value but never used.","'download' is defined but never used.","'ReportMoreMenu' is defined but never used.",["2038"],"'useEffect' is defined but never used.","'getProducts' is defined but never used.","'dispatch' is assigned a value but never used.","'SkeletonLoad' is assigned a value but never used.","'users' is assigned a value but never used.","'isNull' is defined but never used.","'CardHeader' is defined but never used.","'FormControl' is defined but never used.","'UserListToolbar' is defined but never used.","'LabelStyle' is assigned a value but never used.",["2039"],"'Alert' is defined but never used.","'Store' is defined but never used.","'LanguagePopover' is defined but never used.","'AddTask' is defined but never used.","'Analytics' is defined but never used.","'PersonSearch' is defined but never used.","'Add' is defined but never used.","'user1' is assigned a value but never used.","'Testing' is defined but never used.","'ICONS' is assigned a value but never used.","'deleteAnnouncement' is defined but never used.","'renderContent' is defined but never used.","'notifications' is assigned a value but never used.","'setNotifications' is assigned a value but never used.",["2040"],"'map' is defined but never used.","'action' is defined but never used.","'settings2Fill' is defined but never used.","'Chip' is defined but never used.","'Radio' is defined but never used.","'Switch' is defined but never used.","'RadioGroup' is defined but never used.","'Autocomplete' is defined but never used.","'InputAdornment' is defined but never used.","'FormControlLabel' is defined but never used.","'fakeRequest' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["2041"],"'FormHelperText' is defined but never used.","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.",["2042"],"'trash2Outline' is defined but never used.","'onDelete' is defined but never used.","'instructor' is assigned a value but never used.",["2043"],"'userName' is defined but never used.","'fData' is defined but never used.","'UploadAvatar' is defined but never used.","'handleDrop' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'departmentList' is assigned a value but never used.","'roleList' is assigned a value but never used.","'androidFilled' is defined but never used.","'fShortenNumber' is defined but never used.","'IconWrapperStyle' is assigned a value but never used.","'TOTAL' is assigned a value but never used.","react/prop-types","'data' is missing in props validation","Property","missingPropType","'data.title' is missing in props validation","react/no-danger","Dangerous property 'dangerouslySetInnerHTML' found","JSXAttribute","dangerousProp","'data.description' is missing in props validation","'data.batch_id' is missing in props validation","'data.supervisor_id' is missing in props validation","'data.createdAt' is missing in props validation","'reportTypeList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callDispatch'. Either include it or remove the dependency array.",["2044"],"'handleSkip' is assigned a value but never used.","'isEdit' is defined but never used.","'msg' is missing in props validation","'msg' is defined but never used.","'reportData' is missing in props validation","'batch' is missing in props validation","'batch' is defined but never used.","'group' is missing in props validation","'callDispatch' is missing in props validation","'reportData.assigned_work' is missing in props validation","'reportData.assigned_work.group_submitted_file' is missing in props validation","'group.id' is missing in props validation","'reportData.assigned_work.id' is missing in props validation","'reportData.assigned_work.group_submitted_file.id' is missing in props validation","'isSubmitting' is assigned a value but never used.","'getFieldProps' is assigned a value but never used.","'reportData.assigned_work.deadLine' is missing in props validation","'reportData.assigned_work.group_submitted_file.submission_date_time' is missing in props validation","'date' is assigned a value but never used.","'group.groupStatus' is missing in props validation","'reportData.assigned_work.title' is missing in props validation","'reportData.assigned_work.description' is missing in props validation","'reportData.assigned_work.group_submitted_file.files' is missing in props validation","'reportData.assigned_work.group_submitted_file.files[].file_name' is missing in props validation","'group.project_title' is missing in props validation","'group.students' is missing in props validation","'group.students[].user' is missing in props validation","'group.students[].user.name' is missing in props validation","'group.students.length' is missing in props validation","'reportData.report_type' is missing in props validation","'reportData.assigned_work.createdAt' is missing in props validation","'useCallback' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'UploadMultiFile' is defined but never used.","'studentList' is assigned a value but never used.","'group.students[].batch_id' is missing in props validation","'group.students[].id' is missing in props validation","'getGroupColor' is assigned a value but never used.","'event' is defined but never used.","'handleRemoveAll' is assigned a value but never used.","'handleRemove' is assigned a value but never used.","'AdapterDateFns' is defined but never used.","'DatePicker' is defined but never used.","'LocalizationProvider' is defined but never used.","'SaveGroup' is defined but never used.","'navigate' is assigned a value but never used.","'values' is assigned a value but never used.","'setFieldValue' is assigned a value but never used.","'deleteUser' is assigned a value but never used.","'trash2Fill' is defined but never used.","'getGroupByBatch' is defined but never used.","'TOTAL_DOWNLOAD' is assigned a value but never used.","'attendance' is missing in props validation","'getTotal' is assigned a value but never used.","'TOTAL_INSTALLED' is assigned a value but never used.","'TOTAL_USER' is assigned a value but never used.","'shareFill' is defined but never used.","'printerFill' is defined but never used.","'archiveFill' is defined but never used.","'downloadFill' is defined but never used.","'arrowIosForwardFill' is defined but never used.","'Box' is defined but never used.","'TableHead' is defined but never used.","'Assignment' is defined but never used.","'isAfter' is defined but never used.","'GroupMoreMenu' is defined but never used.","'MoreMenuButton' is defined but never used.","'handleClose' is assigned a value but never used.","'onUpload' is missing in props validation",{"desc":"2045","fix":"2046"},{"desc":"2047","fix":"2048"},{"desc":"2049","fix":"2050"},{"desc":"2045","fix":"2051"},{"desc":"2047","fix":"2052"},{"desc":"2047","fix":"2053"},{"desc":"2047","fix":"2054"},{"desc":"2049","fix":"2055"},{"desc":"2056","fix":"2057"},{"desc":"2058","fix":"2059"},{"desc":"2058","fix":"2060"},{"desc":"2061","fix":"2062"},"Update the dependencies array to be: [dispatch, user.id]",{"range":"2063","text":"2064"},"Update the dependencies array to be: [dispatch, name]",{"range":"2065","text":"2066"},"Update the dependencies array to be: [dispatch, user?.id, user.role.role_name]",{"range":"2067","text":"2068"},{"range":"2069","text":"2064"},{"range":"2070","text":"2066"},{"range":"2071","text":"2066"},{"range":"2072","text":"2066"},{"range":"2073","text":"2068"},"Update the dependencies array to be: [dispatch]",{"range":"2074","text":"2075"},"Update the dependencies array to be: [currentUser, dispatch]",{"range":"2076","text":"2077"},{"range":"2078","text":"2077"},"Update the dependencies array to be: [callDispatch, dispatch]",{"range":"2079","text":"2080"},[4116,4126],"[dispatch, user.id]",[1186,1196],"[dispatch, name]",[3993,4003],"[dispatch, user?.id, user.role.role_name]",[4241,4251],[3143,3153],[3891,3901],[3813,3823],[5159,5169],[2166,2168],"[dispatch]",[2939,2949],"[currentUser, dispatch]",[2829,2839],[1573,1583],"[callDispatch, dispatch]"]